#pragma once

// Name: Fortnite, Version: OT-6_5


/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class FortniteGame.BuildingLevelGameplayEffectInfo
// 0x0054 (FullSize[0x0070] - InheritedSize[0x001C])
class UBuildingLevelGameplayEffectInfo : public UObject
{
public:
	struct FText                                       NumericDescription;                                        // 0x001C(0x0018) ELEMENT_SIZE_MISMATCH (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortAttributeInfo                          AttributeInfo;                                             // 0x0028(0x0024) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       RequiredTags;                                              // 0x004C(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       RequiredTagsDescription;                                   // 0x0064(0x0018) ELEMENT_SIZE_MISMATCH (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingLevelGameplayEffectInfo");
		return ptr;
	}



};

// Class FortniteGame.AccumulatedGameplayEffectInfo
// 0x0080 (FullSize[0x009C] - InheritedSize[0x001C])
class UAccumulatedGameplayEffectInfo : public UObject
{
public:
	struct FGameplayEffectInfo                         AccumulatedEffect;                                         // 0x001C(0x0024) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int                                                NextUpgradeRating;                                         // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AccumulatedEffectCount;                                    // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAttributeInfo                          AttributeInfo;                                             // 0x0048(0x0024) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FGameplayEffectInfo>                 AllEffects;                                                // 0x006C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       RequiredTags;                                              // 0x0078(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       RequiredTagsDescription;                                   // 0x0090(0x0018) ELEMENT_SIZE_MISMATCH (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.AccumulatedGameplayEffectInfo");
		return ptr;
	}



	struct FGameplayEffectInfo GetRelativeEffectAtRating(int NewRating);
};

// Class FortniteGame.AIHotSpotSlot
// 0x0084 (FullSize[0x00A0] - InheritedSize[0x001C])
class UAIHotSpotSlot : public UObject
{
public:
	unsigned char                                      UnknownData_IXDM[0x4];                                     // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  LocalTransform;                                            // 0x0020(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              Height;                                                    // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Radius;                                                    // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                UserId;                                                    // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bStartEnabled : 1;                                         // 0x005C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bHasCachedAgentData : 1;                                   // 0x005C(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bHasOverlappingSlots : 1;                                  // 0x005C(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bIsBlockingOthers : 1;                                     // 0x005C(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bIsEnabled : 1;                                            // 0x005C(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MYNV[0x3];                                     // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AAIController*                               Owner;                                                     // 0x0060(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SlotIndex;                                                 // 0x0064(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EAIHotSpotSlot>           SlotState;                                                 // 0x0068(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SEAL[0x37];                                    // 0x0069(0x0037) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.AIHotSpotSlot");
		return ptr;
	}



	void SetSlotState(TEnumAsByte<FortniteGame_EAIHotSpotSlot> NewState);
	void SetSlotOwnerAndState(class AAIController* NewOwner, TEnumAsByte<FortniteGame_EAIHotSpotSlot> NewState);
	void SetSlotEnabled(bool bNewEnabled);
	void OnStateChanged(class AAIController* SlotOwner, TEnumAsByte<FortniteGame_EAIHotSpotSlot> NewState);
	bool IsEnabled();
	bool IsAIAllowed(class AAIController* AI);
	bool HasUserId();
	int GetSlotUserId();
	TEnumAsByte<FortniteGame_EAIHotSpotSlot> GetSlotState();
	struct FRotator GetSlotRotation();
	float GetSlotRadius();
	class AAIController* GetSlotOwner();
	struct FVector GetSlotLocation();
	int GetSlotIndex();
	float GetSlotHeight();
	struct FBox GetSlotBounds();
	class AAIHotSpot* GetHotSpot();
	void ClearSlot();
};

// Class FortniteGame.AIHotSpot
// 0x00D8 (FullSize[0x0318] - InheritedSize[0x0240])
class AAIHotSpot : public AActor
{
public:
	TArray<class UAIHotSpotSlot*>                      UserSlots;                                                 // 0x0240(0x000C) (Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAIHotSpotSlotGenerator*                     SlotGenerator;                                             // 0x024C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAIHotSpotSlot*>                      Slots;                                                     // 0x0250(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	class AActor*                                      FocusActor;                                                // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      FilterClass;                                               // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CustomNavmeshSearchExtent;                                 // 0x0264(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bStartEnabled : 1;                                         // 0x0270(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bAllowSlotlessAssignment : 1;                              // 0x0270(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bAllowClaimingMultipleSlots : 1;                           // 0x0270(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bTrackOverlappingSlots : 1;                                // 0x0270(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bProjectSlotsOnNavmesh : 1;                                // 0x0270(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCustomNavmeshSearchExtent : 1;                            // 0x0270(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bIsEnabled : 1;                                            // 0x0270(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X1PH[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AAIController*>                       NoSlotAssignees;                                           // 0x0274(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BNBM[0x94];                                    // 0x0280(0x0094) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBillboardComponent*                         SpriteComponent;                                           // 0x0314(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.AIHotSpot");
		return ptr;
	}



	void SetEnabled(bool bEnabled);
	int RemoveGroupFromHotspot(TArray<class AAIController*> GroupOfAI);
	bool RemoveFromHotspot(class AAIController* AI, bool bAssignFromWaitingList);
	void OnSlotOccupied(class AAIController* AI, int INDEX, int UserId);
	void OnSlotFreed(class AAIController* AI, int INDEX, int UserId);
	void OnSlotEnabled(int INDEX, int UserId);
	void OnSlotDisabled(int INDEX, int UserId);
	void OnSlotClaimed(class AAIController* AI, int INDEX, int UserId);
	void OnSlotBlocked(class AAIController* AI, int INDEX, int UserId);
	void OnRemovedSlotlessBehavior(class AAIController* AI, bool bIsClamingSlot);
	void OnRemovedBehavior(class AAIController* AI, int INDEX, int UserId, TEnumAsByte<FortniteGame_EAIHotSpotSlot> PrevState, bool bWasOnWaitingList);
	void OnMoveToSlotFinished(class AAIController* AI, int INDEX, int UserId, bool bResult);
	void OnHotSpotEnabled();
	void OnHotSpotDisabled();
	bool OnAssignedSlotlessBehavior(class AAIController* AI);
	bool OnAssignedOccupiedBehavior(class AAIController* AI, int INDEX, int UserId);
	bool OnAssignedClaimedBehavior(class AAIController* AI, int INDEX, int UserId, bool bWasOnWaitingList);
	bool OccupySlotByUserId(int UserId);
	bool OccupySlotByOwner(class AAIController* AIOwner);
	bool OccupySlotByIndex(int INDEX);
	bool IsSlotlessAssignmentAllowed();
	bool IsEnabled();
	bool IsAIAllowed(class AAIController* AI);
	bool HasEnabledSlots();
	bool HasAssignedAI(class AAIController* AI, TEnumAsByte<FortniteGame_EAIHotSpotAssignmentFilter> Filter);
	int GetSlotUserIdByOwner(class AAIController* AIOwner);
	int GetSlotUserIdByIndex(int INDEX);
	TEnumAsByte<FortniteGame_EAIHotSpotSlot> GetSlotStateByUserId(int UserId);
	TEnumAsByte<FortniteGame_EAIHotSpotSlot> GetSlotStateByOwner(class AAIController* AIOwner);
	TEnumAsByte<FortniteGame_EAIHotSpotSlot> GetSlotStateByIndex(int INDEX);
	struct FRotator GetSlotRotationByUserId(int UserId);
	struct FRotator GetSlotRotationByOwner(class AAIController* AIOwner);
	struct FRotator GetSlotRotationByIndex(int INDEX);
	class AAIController* GetSlotOwnerByUserId(int UserId);
	class AAIController* GetSlotOwnerByIndex(int INDEX);
	struct FVector GetSlotLocationByUserId(int UserId);
	struct FVector GetSlotLocationByOwner(class AAIController* AIOwner);
	struct FVector GetSlotLocationByIndex(int INDEX);
	int GetSlotIndexByUserId(int UserId);
	int GetSlotIndexByOwner(class AAIController* AIOwner);
	int GetSlotCount(TEnumAsByte<FortniteGame_EAIHotSpotSlotFilter> Filter);
	class UAIHotSpotSlot* GetSlotByUserId(int UserId);
	class UAIHotSpotSlot* GetSlotByOwner(class AAIController* AIOwner);
	class UAIHotSpotSlot* GetSlotByIndex(int INDEX);
	int GetAssignedAICount(TEnumAsByte<FortniteGame_EAIHotSpotAssignmentFilter> Filter);
	TArray<class AAIController*> GetAssignedAI(TEnumAsByte<FortniteGame_EAIHotSpotAssignmentFilter> Filter);
	TArray<int> FindBestSlotIndices(TArray<class AAIController*> AI);
	int FindBestSlotIndex(class AAIController* AI);
	bool CanUseSlotByUserId(class AAIController* AI, int UserId);
	bool CanUseSlotByIndex(class AAIController* AI, int INDEX);
	bool AssignToSlotByUserId(class AAIController* AI, int UserId);
	bool AssignToSlotByIndex(class AAIController* AI, int INDEX);
	bool AssignToHotspot(class AAIController* AI);
	int AssignGroupToHotspot(TArray<class AAIController*> GroupOfAI);
	bool AssignFromWaitingList();
};

// Class FortniteGame.FortAIHotSpot
// 0x000C (FullSize[0x0324] - InheritedSize[0x0318])
class AFortAIHotSpot : public AAIHotSpot
{
public:
	unsigned char                                      UnknownData_F2WQ[0xC];                                     // 0x0318(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpot");
		return ptr;
	}



};

// Class FortniteGame.FortAIHotSpot_Building
// 0x0024 (FullSize[0x0348] - InheritedSize[0x0324])
class AFortAIHotSpot_Building : public AFortAIHotSpot
{
public:
	TEnumAsByte<FortniteGame_EFortHotSpotDirection>    DirectionType;                                             // 0x0324(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V9FN[0x23];                                    // 0x0325(0x0023) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpot_Building");
		return ptr;
	}



};

// Class FortniteGame.FortAIHotSpot_FakeBuilding
// 0x0000 (FullSize[0x0324] - InheritedSize[0x0324])
class AFortAIHotSpot_FakeBuilding : public AFortAIHotSpot
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpot_FakeBuilding");
		return ptr;
	}



};

// Class FortniteGame.FortItemDefinition
// 0x03FC (FullSize[0x0418] - InheritedSize[0x001C])
class UFortItemDefinition : public UDataAsset
{
public:
	unsigned char                                      UnknownData_0MRW[0x8];                                     // 0x001C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnItemCountChanged;                                        // 0x0024(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortItemType>            ItemType;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SMID[0x3];                                     // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MinLevel;                                                  // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxLevel;                                                  // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       DisplayName;                                               // 0x003C(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	struct FText                                       Description;                                               // 0x0048(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       DisplayNamePrefix;                                         // 0x0054(0x0018) ELEMENT_SIZE_MISMATCH (Protected, NativeAccessSpecifierProtected)
	struct FText                                       SearchTags;                                                // 0x0060(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       GameplayTags;                                              // 0x006C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TAssetPtr<class UFortAttributeTemplate>            AttributeTemplate;                                         // 0x0084(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortInventoryFilter>     FilterOverride;                                            // 0x009C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VZU7[0x3];                                     // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 IconBrush;                                                 // 0x00A0(0x0074) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FFortMultiSizeBrush                         MultiSizeIconBrush;                                        // 0x0114(0x02B8) (Edit, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bIsAccountItem : 1;                                        // 0x03CC(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bNeverPersisted : 1;                                       // 0x03CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L1IG[0x3];                                     // 0x03CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       SecondaryCategoryOverrideTags;                             // 0x03D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       TertiaryCategoryOverrideTags;                              // 0x03E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bAllowMultipleStacks : 1;                                  // 0x0400(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RH59[0x3];                                     // 0x0401(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxStackSize;                                              // 0x0404(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPrivateTemplate;                                          // 0x0408(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTemplateAccess>      Access;                                                    // 0x0409(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCalculateRarityFromQualityAndTier;                        // 0x040A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortQuality>             Quality;                                                   // 0x040B(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortItemTier>            Tier;                                                      // 0x040C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RSIW[0x3];                                     // 0x040D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      Tooltip;                                                   // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortRarity>              Rarity;                                                    // 0x0414(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K4CX[0x3];                                     // 0x0415(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortItemDefinition");
		return ptr;
	}



	class UClass* GetTooltip();
	struct FText GetSingleLineDescription();
	void GetIconBrush(struct FSlateBrush* IconBrush, TEnumAsByte<FortniteGame_EFortBrushSize> BrushSize);
	struct FText GetDisplayName(bool bBaseName);
	TArray<struct FText> GetDescription();
	class UFortItem* CreateTemporaryItemInstanceBP();
};

// Class FortniteGame.FortWorldItemDefinition
// 0x01A0 (FullSize[0x05B8] - InheritedSize[0x0418])
class UFortWorldItemDefinition : public UFortItemDefinition
{
public:
	struct FGameplayTagContainer                       RequiredEquipTags;                                         // 0x0418(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       OverrideAutoEquipTags;                                     // 0x0430(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bCanAutoEquipByClass;                                      // 0x0448(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KLPB[0x3];                                     // 0x0449(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bTakesUpSpaceInBackpack : 1;                               // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bSupportsQuickbarFocus : 1;                                // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bShouldShowItemToast : 1;                                  // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bShowDirectionalArrowWhenFarOff : 1;                       // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bCanBeDropped : 1;                                         // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bItemCanBeStolen : 1;                                      // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bCanBeDepositedInStorageVault : 1;                         // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bItemHasDurability : 1;                                    // 0x044C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_28HZ[0x3];                                     // 0x044D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DropCount;                                                 // 0x0450(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortReplicatedStat>      AccumulatingStatType;                                      // 0x0454(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3L7Q[0x3];                                     // 0x0455(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 MiniMapIconBrush;                                          // 0x0458(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              MiniMapViewableDistance;                                   // 0x04CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       OwnerPickupText;                                           // 0x04D0(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableCategoryHandle                    LootLevelData;                                             // 0x04DC(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FTransform                                  PickupMeshTransform;                                       // 0x04F0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bOverridePickupMeshTransform : 1;                          // 0x0520(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDropOnDeath : 1;                                          // 0x0520(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDropOnLogout : 1;                                         // 0x0520(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_000B[0x3];                                     // 0x0521(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TAssetPtr<class UStaticMesh>                       PickupStaticMesh;                                          // 0x0524(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class USkeletalMesh>                     PickupSkeletalMesh;                                        // 0x053C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UClass>                            PickupEffectBlueprintClassOverride;                        // 0x0554(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class USoundBase>                        PickupSound;                                               // 0x056C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class USoundBase>                        DropSound;                                                 // 0x0584(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       DisassemblyLootTierKey;                                    // 0x059C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DisassembleDurabilityDegradePercentBegin;                  // 0x05A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DisassembleDurabilityDegradePercentEnd;                    // 0x05A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DisassembleDurabilityDegradeMinLootPercent;                // 0x05AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasDisintegrationValue;                                   // 0x05B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bUsesCraftingRecipeToGetDisintegrationValue;               // 0x05B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WXTT[0x2];                                     // 0x05B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FabricationValueOverride;                                  // 0x05B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWorldItemDefinition");
		return ptr;
	}



	float GetMaxDurability(int ItemLevel);
	float GetDPSAtLevel(int ItemLevel);
	bool CanBeDisassembled();
};

// Class FortniteGame.FortWeaponItemDefinition
// 0x0104 (FullSize[0x06BC] - InheritedSize[0x05B8])
class UFortWeaponItemDefinition : public UFortWorldItemDefinition
{
public:
	TAssetPtr<class UClass>                            WeaponActorClass;                                          // 0x05B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               WeaponMeshOverride;                                        // 0x05D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         WeaponStatHandle;                                          // 0x05D4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UFortAlterationItemDefinition*               BaseAlteration;                                            // 0x05E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortAlterationItemDefinition>     BaseCosmeticAlteration;                                    // 0x05E4(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            PrimaryFireAbility;                                        // 0x05FC(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            SecondaryFireAbility;                                      // 0x0614(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            ReloadAbility;                                             // 0x062C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TAssetPtr<class UClass>>                    EquippedAbilities;                                         // 0x0644(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*                    AmmoData;                                                  // 0x0650(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       OutOfAmmoText;                                             // 0x0654(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              LowAmmoPercentage;                                         // 0x0660(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DegradedPercentage;                                        // 0x0664(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortWeaponTriggerType>   TriggerType;                                               // 0x0668(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowTargetingDuringReload;                               // 0x0669(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NIZO[0x2];                                     // 0x066A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  ReticleImage;                                              // 0x066C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      ReticleCornerAngles;                                       // 0x0670(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTexture2D*                                  HitNotifyImage;                                            // 0x067C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      HitNotifyCornerAngles;                                     // 0x0680(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ReticleCenterImage;                                        // 0x068C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ReticleCenterImageOffset;                                  // 0x0690(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              HitNotifyDuration;                                         // 0x0698(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UCurveFloat>                       HitNotifyOpacityCurve;                                     // 0x069C(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bValidForLastEquipped;                                     // 0x06B4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J0DM[0x7];                                     // 0x06B5(0x0007) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWeaponItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortBuildingItemDefinition
// 0x00A4 (FullSize[0x0760] - InheritedSize[0x06BC])
class UFortBuildingItemDefinition : public UFortWeaponItemDefinition
{
public:
	TArray<struct FSlateBrush>                         MaterialPreviewBrushes;                                    // 0x06BC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FText                                       EditUseText;                                               // 0x06C8(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       EditRightUseText;                                          // 0x06D4(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 EditRightUseImageBrush;                                    // 0x06E0(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VB4P[0xC];                                     // 0x0754(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBuildingItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortDecoItemDefinition
// 0x0024 (FullSize[0x06E0] - InheritedSize[0x06BC])
class UFortDecoItemDefinition : public UFortWeaponItemDefinition
{
public:
	class UClass*                                      PlacementPreviewClass;                                     // 0x06BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GridSnapSizeOverride;                                      // 0x06C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationAngleIncrement;                                    // 0x06C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EPlacementType>           PlacementTypeOverride;                                     // 0x06C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RU9Q[0x3];                                     // 0x06C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bForceIgnoreOverlapTest : 1;                               // 0x06CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDisableLocationLerpWhilePlacing : 1;                      // 0x06CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDisableRotationLerpWhilePlacing : 1;                      // 0x06CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDisableScaleLerpWhilePlacing : 1;                         // 0x06CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bAttachWhenPlacing : 1;                                    // 0x06CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bAllowPlacementOnWorldGeometry : 1;                        // 0x06CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bConsumeWhenPlaced : 1;                                    // 0x06CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bCancelToolWhenPlaced : 1;                                 // 0x06CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bRequiresPlayerPlaceableAttachmentActors : 1;              // 0x06CD(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bUseRelativeCameraRotation : 1;                            // 0x06CD(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bAllowStairsWhenAttachingToFloors : 1;                     // 0x06CD(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WUVY[0x2];                                     // 0x06CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UBuildingEditModeMetadata*>           AllowedShapes;                                             // 0x06D0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                MaxPlacementDistance;                                      // 0x06DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDecoItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortTrapItemDefinition
// 0x0010 (FullSize[0x06F0] - InheritedSize[0x06E0])
class UFortTrapItemDefinition : public UFortDecoItemDefinition
{
public:
	struct FRotator                                    KnockbackDirOverride;                                      // 0x06E0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bKnockBackUsingPawnDir;                                    // 0x06EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W29Y[0x3];                                     // 0x06ED(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTrapItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortEditToolItemDefinition
// 0x0004 (FullSize[0x06C0] - InheritedSize[0x06BC])
class UFortEditToolItemDefinition : public UFortWeaponItemDefinition
{
public:
	unsigned char                                      UnknownData_LIZT[0x4];                                     // 0x06BC(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortEditToolItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortWeaponMeleeItemDefinition
// 0x0004 (FullSize[0x06C0] - InheritedSize[0x06BC])
class UFortWeaponMeleeItemDefinition : public UFortWeaponItemDefinition
{
public:
	unsigned char                                      UnknownData_398K[0x4];                                     // 0x06BC(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWeaponMeleeItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortWeaponRangedItemDefinition
// 0x0014 (FullSize[0x06D0] - InheritedSize[0x06BC])
class UFortWeaponRangedItemDefinition : public UFortWeaponItemDefinition
{
public:
	unsigned char                                      UnknownData_AHFT[0x4];                                     // 0x06BC(0x0004) Fix Super Size
	class UParticleSystem*                             BulletShellFXTemplate;                                     // 0x06C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldSpawnBulletShellFX;                                 // 0x06C4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J8ZZ[0xB];                                     // 0x06C5(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWeaponRangedItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortJumpDownLink
// 0x0000 (FullSize[0x0274] - InheritedSize[0x0274])
class AFortJumpDownLink : public ANavLinkProxy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortJumpDownLink");
		return ptr;
	}



};

// Class FortniteGame.FortKeepItemManager
// 0x0258 (FullSize[0x0274] - InheritedSize[0x001C])
class UFortKeepItemManager : public UObject
{
public:
	unsigned char                                      UnknownData_J28A[0x258];                                   // 0x001C(0x0258) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortKeepItemManager");
		return ptr;
	}



};

// Class FortniteGame.FortKismetLibrary
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortKismetLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortKismetLibrary");
		return ptr;
	}



	void STATIC_UnhideTutorialWidget(const struct FName& WidgetName);
	void STATIC_UnhideAllTutorialWidgets();
	void STATIC_UnequipFortAbilitySet(struct FFortAbilitySetHandle* AbilitySetHandle);
	void STATIC_TriggerFeedbackEvent(class UObject* WorldContextObject, const struct FFortFeedbackHandle& EventHandle, class AFortPawn* InstigatorPawn, class AFortPawn* Recipient, float OverriddenDelay, bool bAllowReplication);
	bool STATIC_SwitchHeroType(class AFortPlayerController* FortPC, const struct FString& NewHeroName);
	class AFortProjectileBase* STATIC_SpawnProjectile(class UClass* ProjectileClass, class AActor* RequestedBy, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FRotator& SpawnDirection, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode, bool bUseDefaultPhysics, class AActor* HomingTarget, float InitialSpeed, float GravityScale, float ChargePercent);
	class ABuildingGameplayActor* STATIC_SpawnBuildingGameplayActor(class UClass* BGAClass, const struct FTransform& Transform, class AFortPawn* Instigator);
	class AFortAreaOfEffectCloud* STATIC_SpawnAreaOfEffectCloud(class UClass* AreaOfEffectClass, class AActor* RequestedBy, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode);
	bool STATIC_ShouldHideTutorialWidget(const struct FName& WidgetName);
	void STATIC_SetTimeOfDaySpeed(class UObject* WorldContextObject, float TimeOfDaySpeedFactor);
	void STATIC_SetTimeOfDay(class UObject* WorldContextObject, float TimeOfDay);
	void STATIC_SetCanBeDamaged(class AActor* Actor, bool bCanBeDamaged);
	class UMaterialInstance* STATIC_SelectMaterialInstance(class UMaterialInstance* A, class UMaterialInstance* B, bool bSelectA);
	void STATIC_RemoveActorsOfClassFromBuildingSMActorArray(TArray<class ABuildingSMActor*> ArrayToRemoveClassFrom, class UClass* ClassToRemove, TArray<class ABuildingSMActor*>* ArrayWithClassRemoved);
	void STATIC_RegisterDayTimeHitCallback(class UObject* Object, const struct FString& FunctionName, float TimeInHours, bool bRecurring, bool bBlockTriggeringThisCycle);
	void STATIC_RegisterDayPhaseHitCallback(class UObject* Object, const struct FString& FunctionName, TEnumAsByte<FortniteGame_EFortDayPhase> Phase, bool bRecurring, bool bBlockTriggeringThisCycle);
	struct FTransform STATIC_PushOffTransformByHitLocation(class AActor* RequestedBy, const struct FTransform& InTransform, const struct FHitResult& Hit, float Distance);
	struct FVector STATIC_PushOffHitLocation(class AActor* RequestedBy, const struct FHitResult& Hit, float Distance);
	void STATIC_PickLootDrops(TArray<struct FFortItemEntry>* OutLootToDrop, const struct FName& TierGroupName, int WorldLevel, int ForcedLootTier, TEnumAsByte<FortniteGame_ELootQuotaLevel> QuotaLevel);
	bool STATIC_OnSameTeam(class AActor* ActorA, class AActor* ActorB);
	TEnumAsByte<FortniteGame_EFortWeaponCoreAnimation> STATIC_MakeWeaponCoreAnimation(TEnumAsByte<FortniteGame_EFortWeaponCoreAnimation> Value);
	TEnumAsByte<FortniteGame_EFortResourceType> STATIC_MakeResourceType(TEnumAsByte<FortniteGame_EFortResourceType> Value);
	TEnumAsByte<FortniteGame_EFortMovementStyle> STATIC_MakeMovementStyle(TEnumAsByte<FortniteGame_EFortMovementStyle> Value);
	struct FFortGameplayEffectContainerSpec STATIC_MakeGameplayEffectContainerSpecFromAbilityComponent(const struct FFortGameplayEffectContainer& EffectContainer, class UAbilitySystemComponent* AbilityComp, int GameplayEffectLevel);
	struct FFortGameplayEffectContainerSpec STATIC_MakeGameplayEffectContainerSpecFromAbility(const struct FFortGameplayEffectContainer& EffectContainer, class UGameplayAbility* Ability, int GameplayEffectLevel);
	TEnumAsByte<FortniteGame_EFortDayPhase> STATIC_MakeDayNightPhase(TEnumAsByte<FortniteGame_EFortDayPhase> Value);
	TEnumAsByte<FortniteGame_EFortBuildingState> STATIC_MakeBuildingState(TEnumAsByte<FortniteGame_EFortBuildingState> Value);
	void STATIC_MakeAllPlayersTalkToSelf(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class USoundBase* Audio, float Delay, bool bInterruptCurrentLine, bool bCanBeInterrupted, bool bCanCue, TEnumAsByte<FortniteGame_EFortFeedbackBroadcastFilter> BroadcastFilter, bool bLatent);
	void STATIC_K2_SpawnPickupInWorld(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int OverrideMaxStackCount);
	int STATIC_K2_RemoveItemFromPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int AmountToRemove);
	void STATIC_K2_RemoveItemFromAllPlayers(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int AmountToRemove);
	void STATIC_K2_GiveItemToPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int NumberToGive, bool bNotifyPlayer);
	void STATIC_K2_GiveItemToAllPlayers(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int NumberToGive, bool bNotifyPlayer);
	struct FVector STATIC_K2_GetClosestAxisXY(const struct FVector& InVector);
	int STATIC_K2_DoesPlayerHaveItem(class AFortPlayerController* PlayerController, class UFortItemDefinition* ItemDefinition);
	TArray<class UObject*> STATIC_JonLHack_GetAllObjectsOfClassFromPath(const struct FString& Path, class UClass* Class);
	bool STATIC_IsValid(const struct FAttributeInfo& AttributeInfo);
	bool STATIC_IsFullBodyHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool STATIC_IsFatalHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool STATIC_IsCriticalHit(const struct FGameplayEffectContextHandle& EffectContext);
	void STATIC_HideTutorialWidget(const struct FName& WidgetName);
	bool STATIC_GetWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortBaseWeaponStats* OutRow);
	bool STATIC_GetWeaponDurabilityByRarityStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortWeaponDurabilityByRarityStats* OutRow);
	bool STATIC_GetTrapStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortTrapStats* OutRow);
	bool STATIC_GetTooltipTextFromTokenFromTooltipClass(class UObject* ObjectToDescribe, class UClass* TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
	bool STATIC_GetTooltipTextFromToken(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
	bool STATIC_GetTooltipNumericValueFromTooltipClass(class UObject* ObjectToDescribe, class UClass* TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, float* Value);
	bool STATIC_GetTooltipNumericValue(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, float* Value);
	bool STATIC_GetTooltipDescriptionFromTooltipClass(class UObject* ObjectToDescribe, class UClass* TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FText* Description);
	bool STATIC_GetTooltipDescriptionArrayFromTooltipClass(class UObject* ObjectToDescribe, class UClass* TooltipClass, TArray<struct FGameplayTag> Tags, class UFortTooltipContext* Context, TArray<struct FText>* Descriptions);
	bool STATIC_GetTooltipDescriptionArray(class UObject* ObjectToDescribe, TArray<struct FGameplayTag> Tags, class UFortTooltipContext* Context, TArray<struct FText>* Descriptions);
	bool STATIC_GetTooltipDescription(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FText* Description);
	float STATIC_GetTimeUntilInRealTimeSeconds(class UObject* WorldContextObject, float GameTime);
	float STATIC_GetTimeOfDaySpeed(class UObject* WorldContextObject);
	float STATIC_GetTimeOfDayAccumulator(class UObject* WorldContextObject);
	float STATIC_GetTimeOfDay(class UObject* WorldContextObject);
	float STATIC_GetTimeDayPhaseBegins(class UObject* WorldContextObject, TEnumAsByte<FortniteGame_EFortDayPhase> DayPhase);
	class AFortThreatVisualsManager* STATIC_GetThreatVisualsManager(class UObject* WorldContextObject);
	class AFortTeamInfo* STATIC_GetTeamInfo(class UObject* WorldContextObject, TEnumAsByte<FortniteGame_EFortTeam> Team);
	TEnumAsByte<FortniteGame_EFortTeamAffiliation> STATIC_GetTeamAffiliationBetweenTeams(TEnumAsByte<FortniteGame_EFortTeam> TeamA, TEnumAsByte<FortniteGame_EFortTeam> TeamB);
	TEnumAsByte<FortniteGame_EFortTeamAffiliation> STATIC_GetTeamAffiliation(class AActor* ActorA, class AActor* ActorB);
	bool STATIC_GetRangedWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortRangedWeaponStats* OutRow);
	class UGameplayAbility* STATIC_GetPrimaryInstance(const struct FGameplayAbilitySpec& Spec);
	TEnumAsByte<FortniteGame_EFortDayPhase> STATIC_GetPreviousDayPhase(class UObject* WorldContextObject);
	bool STATIC_GetPawnStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortPawnStats* OutRow);
	bool STATIC_GetNumericCVar(const struct FString& CVar, float* OutValue);
	class UMaterialInstanceDynamic* STATIC_GetMIDForSkeletalMeshComponent(class USkeletalMeshComponent* SkeletalMeshComponent, int ElementIndex);
	bool STATIC_GetMeleeWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortMeleeWeaponStats* OutRow);
	TArray<class AFortPlayerController*> STATIC_GetLocalFortPlayerControllers(class UObject* WorldContextObject);
	void STATIC_GetImpulseData(const struct FGameplayEffectContextHandle& EffectContext, struct FVector* ImpulseDirection, float* KnockbackMagnitude, float* KnockbackZAngle);
	struct FString STATIC_GetHumanReadableName(class AActor* Actor);
	int STATIC_GetHoursUntilDayPhase(class UObject* WorldContextObject, TEnumAsByte<FortniteGame_EFortDayPhase> DayPhase);
	float STATIC_GetHostilityPercentage(class UObject* WorldContextObject);
	float STATIC_GetGameDifficulty();
	TArray<class AFortPlayerPawn*> STATIC_GetFortPlayerPawns(class UObject* WorldContextObject);
	TEnumAsByte<Engine_EPhysicalSurface> STATIC_GetFortPhysicalSurface(const struct FHitResult& Hit);
	float STATIC_GetFloatHoursUntilDayPhase(class UObject* WorldContextObject, TEnumAsByte<FortniteGame_EFortDayPhase> DayPhase);
	struct FRotator STATIC_GetDirectionActorToActor(class AActor* SourceActor, class AActor* TargetActor);
	float STATIC_GetDefaultAbsoluteTimeOfDaySpeed(class UObject* WorldContextObject);
	struct FVector STATIC_GetDayNightDirectionalLightVector(class UObject* WorldContextObject);
	struct FLinearColor STATIC_GetDayNightDirectionalLightColor(class UObject* WorldContextObject);
	TEnumAsByte<FortniteGame_EFortDayPhase> STATIC_GetCurrentDayPhase(class UObject* WorldContextObject);
	class AFortPlayerPawn* STATIC_GetClosestFortPlayerPawn(class UObject* WorldContextObject, const struct FVector& Position);
	class ABuildingSMActor* STATIC_GetClosestBuildingActorFromArray(class AActor* Actor, TArray<class ABuildingSMActor*> ArrayOfBuildings);
	float STATIC_GetCalculatedGameDifficulty(class UObject* WorldContextObject);
	void STATIC_GetBuildingStructuralSupportSystem(class UObject* WorldContextObject, class UBuildingStructuralSupportSystem** BuildingStructuralSupportSystem);
	float STATIC_GetBuildingHealthPercentage(class ABuildingActor* BuildingActor);
	void STATIC_GetAllFortPlayerPawns(class UObject* WorldContextObject, TArray<class AFortPlayerPawn*>* OutFortPlayerPawns);
	TArray<class AFortPlayerController*> STATIC_GetAllFortPlayerControllers(class UObject* WorldContextObject);
	class AFortAIGoalManager* STATIC_GetAIGoalManager(class UObject* WorldContextObject);
	class AFortAIDirector* STATIC_GetAIDirector(class UObject* WorldContextObject);
	class AFortTeamInfo* STATIC_GetActorTeamInfo(class AActor* Actor);
	TEnumAsByte<FortniteGame_EFortTeam> STATIC_GetActorTeam(class AActor* Actor);
	void STATIC_ExecuteClientEvent(class UObject* WorldContextObject, const struct FFortClientEventName& EventType, class UObject* EventSource, class UObject* EventFocus);
	bool STATIC_EvaluateCurveTableRow(const struct FCurveTableRowHandle& CurveTableRowHandle, float InXY, float* OutXY, const struct FString& ContextString);
	struct FFortAbilitySetHandle STATIC_EquipFortAbilitySet(class UFortAbilitySet* AbilitySet, class UObject* OverrideSourceObject);
	void STATIC_EnableTutorialHighlight(const struct FName& WidgetName);
	void STATIC_DisableTutorialHighlight(const struct FName& WidgetName);
	class UFortSpline* STATIC_CreateNewSplineObject(class UObject* Outer);
	float STATIC_ConvertToRealTime(class UObject* WorldContextObject, float InGameTime);
	float STATIC_ConvertToGameTime(class UObject* WorldContextObject, float InRealTime);
	void STATIC_ClientRequestSetTimeOfDay(class AFortPlayerController* FortPC, float TimeOfDay);
	void STATIC_ClearTutorialHighlights();
	void STATIC_BroadcastSoundAtLocation(class UObject* WorldContextObject, class USoundBase* InSound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier);
	void STATIC_BroadcastSound(class UObject* WorldContextObject, class USoundBase* InSound, float VolumeMultiplier, float PitchMultiplier);
	void STATIC_BroadcastMessage(class UObject* WorldContextObject, const struct FString& Message, const struct FName& Type, class AActor* Source);
	struct FActiveGameplayEffectHandle STATIC_ApplyGlobalEnvironmentGameplayEffectToActor(class AActor* EffectTargetActor, class UClass* GameplayEffect, int GameplayEffectLevel, const struct FGameplayTagContainer& AdditionalContextTags);
	void STATIC_ApplyGlobalEnvironmentDamageToActor(class AActor* DamageTargetActor, float EnvironmentDamage, const struct FGameplayTagContainer& AdditionalContextTags, class UClass* EnvironmentDamageGE);
};

// Class FortniteGame.FortLevelScriptActor
// 0x0008 (FullSize[0x024C] - InheritedSize[0x0244])
class AFortLevelScriptActor : public ALevelScriptActor
{
public:
	unsigned char                                      UnknownData_4KSK[0x4];                                     // 0x0244(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bWorldReadyCalled : 1;                                     // 0x0248(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BZKU[0x3];                                     // 0x0249(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLevelScriptActor");
		return ptr;
	}



	void OnWorldReady();
	void OnMatchStarted();
};

// Class FortniteGame.FortLobbyBeaconHost
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class AFortLobbyBeaconHost : public ALobbyBeaconHost
{
public:
	unsigned char                                      bAllowReservationsToProceedToLobby : 1;                    // 0x0280(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bWorldRecordLoaded : 1;                                    // 0x0280(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BTDL[0x3];                                     // 0x0281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LastReservationCountForPermissionTimeoutChange;            // 0x0284(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LobbyPermissionTimeout;                                    // 0x0288(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D4C7[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconHost");
		return ptr;
	}



};

// Class FortniteGame.FortLobbyBeaconClient
// 0x0000 (FullSize[0x02BC] - InheritedSize[0x02BC])
class AFortLobbyBeaconClient : public ALobbyBeaconClient
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconClient");
		return ptr;
	}



	void ServerSetMatchmakingLevel(const struct FUniqueNetIdRepl& InUniqueId, int MatchmakingLevel);
	void ServerSetHeroType(const struct FUniqueNetIdRepl& InUniqueId, class UFortHeroType* InHeroType);
	void ServerSetHeroId(const struct FUniqueNetIdRepl& InUniqueId, const struct FString& InHeroId);
	void ServerSetGadget(const struct FUniqueNetIdRepl& InUniqueId, int INDEX, const struct FString& GadgetPersistentName);
	void ServerSetCurrentCharacterXp(const struct FUniqueNetIdRepl& InUniqueId, int CurrentCharacterXp);
	void ServerSetCharacterGender(const struct FUniqueNetIdRepl& InUniqueId, TEnumAsByte<FortniteGame_EFortCustomGender> GenderType);
	void ServerSayTeam(const struct FString& Msg);
	void ServerSay(const struct FString& Msg);
	void ServerIncrementHomeBaseVersion(const struct FUniqueNetIdRepl& InUniqueId);
	void ClientSay(const struct FString& PlayerName, const struct FString& Message);
};

// Class FortniteGame.FortLobbyBeaconClientPvE
// 0x0000 (FullSize[0x02BC] - InheritedSize[0x02BC])
class AFortLobbyBeaconClientPvE : public AFortLobbyBeaconClient
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconClientPvE");
		return ptr;
	}



};

// Class FortniteGame.FortLobbyBeaconClientPvP
// 0x001C (FullSize[0x02D8] - InheritedSize[0x02BC])
class AFortLobbyBeaconClientPvP : public AFortLobbyBeaconClient
{
public:
	unsigned char                                      UnknownData_9ANW[0x1C];                                    // 0x02BC(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconClientPvP");
		return ptr;
	}



	void ServerReadyUp();
};

// Class FortniteGame.FortLobbyBeaconHostPvE
// 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
class AFortLobbyBeaconHostPvE : public AFortLobbyBeaconHost
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconHostPvE");
		return ptr;
	}



};

// Class FortniteGame.FortLobbyBeaconHostOutpost
// 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
class AFortLobbyBeaconHostOutpost : public AFortLobbyBeaconHostPvE
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconHostOutpost");
		return ptr;
	}



};

// Class FortniteGame.FortLobbyBeaconHostPvP
// 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
class AFortLobbyBeaconHostPvP : public AFortLobbyBeaconHost
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconHostPvP");
		return ptr;
	}



};

// Class FortniteGame.FortLobbyBeaconPlayerState
// 0x0094 (FullSize[0x0330] - InheritedSize[0x029C])
class AFortLobbyBeaconPlayerState : public ALobbyBeaconPlayerState
{
public:
	TEnumAsByte<FortniteGame_EFortTeam>                TeamAffiliation;                                           // 0x029C(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OUXS[0x3];                                     // 0x029D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentCharXP;                                             // 0x02A0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MatchmakingLevel;                                          // 0x02A4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     HeroId;                                                    // 0x02A8(0x000C) (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHeroType*                               HeroType;                                                  // 0x02B4(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SG4S[0x8];                                     // 0x02B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LobbyTimeRemaining;                                        // 0x02C0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            HomeBaseVersion;                                           // 0x02C4(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             SelectedGadgets;                                           // 0x02CC(0x000C) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortCustomGender>        CharacterGender;                                           // 0x02D8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BACJ[0x57];                                    // 0x02D9(0x0057) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconPlayerState");
		return ptr;
	}



	void OnRep_LobbyTimeRemaining();
	void OnRep_HomeBaseVersion();
	void OnRep_HeroType();
	void OnRep_HeroID();
	void OnRep_Gadgets();
	void OnRep_CharXP();
	void OnRep_CharacterGender();
};

// Class FortniteGame.FortLobbyBeaconPlayerStatePvE
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class AFortLobbyBeaconPlayerStatePvE : public AFortLobbyBeaconPlayerState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconPlayerStatePvE");
		return ptr;
	}



};

// Class FortniteGame.FortLobbyBeaconPlayerStatePvP
// 0x0004 (FullSize[0x0334] - InheritedSize[0x0330])
class AFortLobbyBeaconPlayerStatePvP : public AFortLobbyBeaconPlayerState
{
public:
	unsigned char                                      bReadiedUp : 1;                                            // 0x0330(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CZF4[0x3];                                     // 0x0331(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconPlayerStatePvP");
		return ptr;
	}



	void OnRep_bReadiedUp();
};

// Class FortniteGame.FortLobbyBeaconState
// 0x0034 (FullSize[0x0390] - InheritedSize[0x035C])
class AFortLobbyBeaconState : public ALobbyBeaconState
{
public:
	int                                                MatchmakingLevel;                                          // 0x035C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     MissionGeneratorClassPath;                                 // 0x0360(0x000C) (Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMissionGenerator*                       CachedMissionGeneratorCDO;                                 // 0x036C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_ELobbyMissionGeneratorDetailsRequirement> MissionGeneratorDetailsRequirement;                        // 0x0370(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWorldRecordLoaded;                                        // 0x0371(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MBF7[0x1E];                                    // 0x0372(0x001E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconState");
		return ptr;
	}



	void OnRep_MissionGeneratorDetailsRequirement();
	void OnRep_MissionGeneratorClassPath();
};

// Class FortniteGame.FortLobbyBeaconStatePvE
// 0x0000 (FullSize[0x0390] - InheritedSize[0x0390])
class AFortLobbyBeaconStatePvE : public AFortLobbyBeaconState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconStatePvE");
		return ptr;
	}



};

// Class FortniteGame.FortLobbyBeaconStateOutpost
// 0x0000 (FullSize[0x0390] - InheritedSize[0x0390])
class AFortLobbyBeaconStateOutpost : public AFortLobbyBeaconStatePvE
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconStateOutpost");
		return ptr;
	}



};

// Class FortniteGame.FortLobbyBeaconStatePvP
// 0x0008 (FullSize[0x0398] - InheritedSize[0x0390])
class AFortLobbyBeaconStatePvP : public AFortLobbyBeaconState
{
public:
	int                                                PvPLobbyTimeLimit;                                         // 0x0390(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                PvPLobbyTimeRemaining;                                     // 0x0394(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconStatePvP");
		return ptr;
	}



	void OnRep_PvPLobbyTimeRemaining();
};

// Class FortniteGame.FortLocalPlayer
// 0x0104 (FullSize[0x01F4] - InheritedSize[0x00F0])
class UFortLocalPlayer : public ULocalPlayer
{
public:
	unsigned char                                      UnknownData_C1B4[0x8];                                     // 0x00F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortOnlineAccount*                          FortOnlineAccount;                                         // 0x00F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZUJC[0xC];                                     // 0x00FC(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortClientSettingsRecord*                   ClientSettingsRecord;                                      // 0x0108(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortRewardReport                           CachedRewardReport;                                        // 0x010C(0x0030) (NativeAccessSpecifierPublic)
	TArray<struct FFortPlayerScoreReport>              CachedScoreReports;                                        // 0x013C(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_22XC[0xAC];                                    // 0x0148(0x00AC) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLocalPlayer");
		return ptr;
	}



};

// Class FortniteGame.FortLOSComponent
// 0x0040 (FullSize[0x00CC] - InheritedSize[0x008C])
class UFortLOSComponent : public UActorComponent
{
public:
	float                                              LOSMaxDistance;                                            // 0x008C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FOVInDegrees;                                              // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeBetweenChecks;                                         // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStopAfterHasBeenFound;                                    // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bDistanceCheckOnly;                                        // 0x0099(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M83J[0x2];                                     // 0x009A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHasBeenFound;                                            // 0x009C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bHasBeenFound;                                             // 0x00A8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5SMY[0x23];                                    // 0x00A9(0x0023) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLOSComponent");
		return ptr;
	}



};

// Class FortniteGame.FortMarkActor
// 0x009C (FullSize[0x02DC] - InheritedSize[0x0240])
class AFortMarkActor : public AActor
{
public:
	TWeakObjectPtr<class AFortPlayerStateZone>         OwningPlayer;                                              // 0x0240(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FString                                     MarkString;                                                // 0x0248(0x000C) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFinishedEditing;                                          // 0x0254(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KFFR[0x3];                                     // 0x0255(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      AttachedToActor;                                           // 0x0258(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AttachmentOffset;                                          // 0x025C(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 MiniMapIconBrush;                                          // 0x0268(0x0074) (NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMarkActor");
		return ptr;
	}



	void OnRep_AttachedToActor();
};

// Class FortniteGame.FortQueryTest_GoalBase
// 0x0010 (FullSize[0x011C] - InheritedSize[0x010C])
class UFortQueryTest_GoalBase : public UEnvQueryTest
{
public:
	unsigned char                                      bScoreEnemies : 1;                                         // 0x010C(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bScoreEncounterGoals : 1;                                  // 0x010C(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bScoreWorldGoals : 1;                                      // 0x010C(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bScoreSpecificAssignments : 1;                             // 0x010C(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4NT5[0x3];                                     // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFortAIAssignmentIdentifier>         AssignmentIDs;                                             // 0x0110(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalBase");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_GoalStickiness
// 0x00BC (FullSize[0x01D8] - InheritedSize[0x011C])
class UFortQueryTest_GoalStickiness : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue                   StartValueForGoal;                                         // 0x011C(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   EndValueForGoal;                                           // 0x0138(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   TimeBeforeValueLerp;                                       // 0x0154(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   ValueLerpDuration;                                         // 0x0170(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderBoolValue                    ApplyStickinessToAllGoalsWithSameActor;                    // 0x018C(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   StartValueForCurrentGoal;                                  // 0x01A8(0x000C) (Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   EndValueForCurrentGoal;                                    // 0x01B4(0x000C) (Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   TimeBeforeLerp;                                            // 0x01C0(0x000C) (Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   LerpDuration;                                              // 0x01CC(0x000C) (Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalStickiness");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_GoalType
// 0x0000 (FullSize[0x011C] - InheritedSize[0x011C])
class UFortQueryTest_GoalType : public UFortQueryTest_GoalBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalType");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_PerceptionAll
// 0x0140 (FullSize[0x025C] - InheritedSize[0x011C])
class UFortQueryTest_PerceptionAll : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue                   SenseScores[0x6];                                          // 0x011C(0x00A8) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   MinSenseAge;                                               // 0x01C4(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   MaxSenseAge;                                               // 0x01E0(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FEnvFloatParam_DEPRECATED                   SenseValues[0x6];                                          // 0x01FC(0x0048) (NativeAccessSpecifierPrivate)
	struct FEnvFloatParam_DEPRECATED                   MinAge;                                                    // 0x0244(0x000C) (NativeAccessSpecifierPrivate)
	struct FEnvFloatParam_DEPRECATED                   MaxAge;                                                    // 0x0250(0x000C) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_PerceptionAll");
		return ptr;
	}



};

// Class FortniteGame.FortScriptedActionManager
// 0x002C (FullSize[0x026C] - InheritedSize[0x0240])
class AFortScriptedActionManager : public AActor
{
public:
	unsigned char                                      UnknownData_47EP[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AFortScriptedAction*>                 ActiveScriptedActions;                                     // 0x0244(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAvailableScriptedAction>        AvailableScriptedActions;                                  // 0x0250(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortClientEventName>                PendingClientEvents;                                       // 0x025C(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsProcessingClientEvent;                                  // 0x0268(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z8XU[0x3];                                     // 0x0269(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortScriptedActionManager");
		return ptr;
	}



	void HandleClientEvent_Undefined(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
};

// Class FortniteGame.AIHotSpotConfig
// 0x0014 (FullSize[0x0030] - InheritedSize[0x001C])
class UAIHotSpotConfig : public UDataAsset
{
public:
	TArray<struct FAIHotSpotSlotConfig>                Slots;                                                     // 0x001C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      bDetectUnreachableSlots : 1;                               // 0x0028(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5DPE[0x3];                                     // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAIHotSpotSlotGenerator*                     SlotGenerator;                                             // 0x002C(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.AIHotSpotConfig");
		return ptr;
	}



};

// Class FortniteGame.AIHotSpotManagerProxy
// 0x0040 (FullSize[0x005C] - InheritedSize[0x001C])
class UAIHotSpotManagerProxy : public UAIHotSpotManager
{
public:
	unsigned char                                      UnknownData_1IRE[0x40];                                    // 0x001C(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.AIHotSpotManagerProxy");
		return ptr;
	}



};

// Class FortniteGame.BuildingActorHotSpotConfig
// 0x00AC (FullSize[0x00C8] - InheritedSize[0x001C])
class UBuildingActorHotSpotConfig : public UDataAsset
{
public:
	struct FBuildingActorHotSpotDirection              HotSpotPerDirection[0x6];                                  // 0x001C(0x0090) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FBuildingActorHotSpotDirection              FallBackConfig;                                            // 0x00AC(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bHasDirectionalSetup : 1;                                  // 0x00C4(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_160J[0x3];                                     // 0x00C5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingActorHotSpotConfig");
		return ptr;
	}



};

// Class FortniteGame.FortAIHotSpotManager
// 0x0090 (FullSize[0x00EC] - InheritedSize[0x005C])
class UFortAIHotSpotManager : public UAIHotSpotManagerProxy
{
public:
	TAssetPtr<class UBuildingActorHotSpotConfig>       FallbackHotspotConfig;                                     // 0x005C(0x0018) (Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SITK[0x78];                                    // 0x0074(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpotManager");
		return ptr;
	}



};

// Class FortniteGame.AIHotSpotRenderingComponent
// 0x0004 (FullSize[0x0430] - InheritedSize[0x042C])
class UAIHotSpotRenderingComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData_KBIE[0x4];                                     // 0x042C(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.AIHotSpotRenderingComponent");
		return ptr;
	}



};

// Class FortniteGame.FortAIHotSpotSlot
// 0x0010 (FullSize[0x00B0] - InheritedSize[0x00A0])
class UFortAIHotSpotSlot : public UAIHotSpotSlot
{
public:
	TEnumAsByte<FortniteGame_EFortHotSpotSlot>         SlotType;                                                  // 0x00A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5UG3[0xF];                                     // 0x00A1(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpotSlot");
		return ptr;
	}



};

// Class FortniteGame.AIHotSpotSlotGenerator
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UAIHotSpotSlotGenerator : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.AIHotSpotSlotGenerator");
		return ptr;
	}



	class AAIHotSpot* GetHotSpot();
	void GenerateSlots();
	class UAIHotSpotSlot* AddSlot(const struct FVector& RelativeLocation, const struct FRotator& RelativeRotation, class UClass* CustomSlotClass, bool bEnabled);
};

// Class FortniteGame.AIHotSpotSlotGenerator_OnBoundingBox
// 0x0040 (FullSize[0x005C] - InheritedSize[0x001C])
class UAIHotSpotSlotGenerator_OnBoundingBox : public UAIHotSpotSlotGenerator
{
public:
	class UClass*                                      SlotClass;                                                 // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MaxExtent;                                                 // 0x0020(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ExpandBy;                                                  // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OffsetFromEdge;                                            // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Spacing;                                                   // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bLimitMaxExtent : 1;                                       // 0x0038(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L54Q[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EBoundingBoxSlotDirectionCalculation> SlotDirectionCalculation;                                  // 0x003C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WPP9[0x1F];                                    // 0x003D(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.AIHotSpotSlotGenerator_OnBoundingBox");
		return ptr;
	}



};

// Class FortniteGame.FortAIHotSpotSlotGenerator_OnBoundingBox
// 0x0008 (FullSize[0x0064] - InheritedSize[0x005C])
class UFortAIHotSpotSlotGenerator_OnBoundingBox : public UAIHotSpotSlotGenerator_OnBoundingBox
{
public:
	float                                              DistanceForRangedSlots;                                    // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceForHugeSlots;                                      // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpotSlotGenerator_OnBoundingBox");
		return ptr;
	}



};

// Class FortniteGame.FortAIHotSpotSlotGenerator_FromConfig
// 0x0014 (FullSize[0x0030] - InheritedSize[0x001C])
class UFortAIHotSpotSlotGenerator_FromConfig : public UAIHotSpotSlotGenerator
{
public:
	class UAIHotSpotConfig*                            BuildingConfig;                                            // 0x001C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Offset;                                                    // 0x0020(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bMirrorX : 1;                                              // 0x002C(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bMirrorY : 1;                                              // 0x002C(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8VEA[0x3];                                     // 0x002D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpotSlotGenerator_FromConfig");
		return ptr;
	}



};

// Class FortniteGame.BlueprintContextBase
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UBlueprintContextBase : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BlueprintContextBase");
		return ptr;
	}



};

// Class FortniteGame.FortSessionHelper
// 0x00C0 (FullSize[0x00DC] - InheritedSize[0x001C])
class UFortSessionHelper : public UObject
{
public:
	class UClass*                                      BeaconClientClass;                                         // 0x001C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPartyBeaconClient*                      PartyBeaconClient;                                         // 0x0020(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RL1S[0x94];                                    // 0x0024(0x0094) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CurrentSessionName;                                        // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<OnlineSubsystemUtils_EPartyReservationResult> LastBeaconResponse;                                        // 0x00C0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<FortniteGame_EFortSessionHelperJoinState> CurrentJoinState;                                          // 0x00C1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<FortniteGame_EFortSessionHelperJoinResult> CurrentJoinResult;                                         // 0x00C2(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_10IR[0x19];                                    // 0x00C3(0x0019) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSessionHelper");
		return ptr;
	}



};

// Class FortniteGame.FortSearchPass
// 0x00B4 (FullSize[0x00D0] - InheritedSize[0x001C])
class UFortSearchPass : public UObject
{
public:
	unsigned char                                      UnknownData_ONM1[0x28];                                    // 0x001C(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortSessionHelper*                          SessionHelper;                                             // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BUTU[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortSearchPassParams                       CurrentSearchParams;                                       // 0x0050(0x001C) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FFortSearchPassState                        CurrentSearchPassState;                                    // 0x006C(0x001C) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OIHA[0x48];                                    // 0x0088(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSearchPass");
		return ptr;
	}



};

// Class FortniteGame.FortMatchmakingPolicy
// 0x008C (FullSize[0x00A8] - InheritedSize[0x001C])
class UFortMatchmakingPolicy : public UObject
{
public:
	unsigned char                                      UnknownData_0QZH[0x10];                                    // 0x001C(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bMatchmakingInProgress;                                    // 0x002C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DE51[0x3];                                     // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SessionName;                                               // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMatchmakingParams                          CurrentParams;                                             // 0x0038(0x0064) (Transient, Protected, NativeAccessSpecifierProtected)
	class UFortSearchPass*                             MMPass;                                                    // 0x009C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_33BI[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingPolicy");
		return ptr;
	}



};

// Class FortniteGame.FortMatchmakingCommon
// 0x000C (FullSize[0x00B4] - InheritedSize[0x00A8])
class UFortMatchmakingCommon : public UFortMatchmakingPolicy
{
public:
	unsigned char                                      UnknownData_QL0Y[0xC];                                     // 0x00A8(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingCommon");
		return ptr;
	}



};

// Class FortniteGame.FortMatchmakingPvE
// 0x0000 (FullSize[0x00B4] - InheritedSize[0x00B4])
class UFortMatchmakingPvE : public UFortMatchmakingCommon
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingPvE");
		return ptr;
	}



};

// Class FortniteGame.FortMatchmakingContext
// 0x00C4 (FullSize[0x00E0] - InheritedSize[0x001C])
class UFortMatchmakingContext : public UBlueprintContextBase
{
public:
	struct FScriptMulticastDelegate                    OnMatchmakingStarted;                                      // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMatchmakingComplete;                                     // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMatchmakingStateChange;                                  // 0x0034(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLobbyConnectionAttemptStarted;                           // 0x0040(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLobbyConnectionAttemptFailed;                            // 0x004C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLobbyWaitingForPlayers;                                  // 0x0058(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLobbyWaitingForPlayersTimeUpdate;                        // 0x0064(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLobbyStarted;                                            // 0x0070(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLobbyDisconnected;                                       // 0x007C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLobbyTimeUpdated;                                        // 0x0088(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLobbyTimeExpired;                                        // 0x0094(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLocalReadyUpStatusChange;                                // 0x00A0(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBasicError;                                              // 0x00AC(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWorldRecordLoadedChanged;                                // 0x00B8(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L897[0xC];                                     // 0x00C4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortMatchmakingPvE*                         StandaloneZoneMatchmaking;                                 // 0x00D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnOutpostDiscoveryFailure;                                 // 0x00D4(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingContext");
		return ptr;
	}



	void StartOnboardingMission();
	void StartMatchmaking();
	void StartCriticalMission(int MinMissionPower, int MaxMissionPower);
	void ReadyUp();
	void JoinFromLobby();
	bool IsWorldRecordLoaded();
	bool IsOutpostPermitted();
	bool IsInLobby();
	bool IsConnectedToGame();
	float GetLobbyWaitForPlayersTimeRemaining();
	bool EnterOutpost();
	void DisconnectFromLobby();
	void CancelMatchmaking();
};

// Class FortniteGame.FortAbilitySet
// 0x001C (FullSize[0x0038] - InheritedSize[0x001C])
class UFortAbilitySet : public UDataAsset
{
public:
	unsigned char                                      UnknownData_IN0S[0x4];                                     // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              GameplayAbilities;                                         // 0x0020(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectApplicationInfo>      PassiveGameplayEffects;                                    // 0x002C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilitySet");
		return ptr;
	}



};

// Class FortniteGame.FortTooltipInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortTooltipInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTooltipInterface");
		return ptr;
	}



	class UClass* GetTooltip();
};

// Class FortniteGame.FortTooltipContext
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UFortTooltipContext : public UObject
{
public:
	class UAbilitySystemComponent*                     SourceAbilitySystem;                                       // 0x001C(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAbilitySystemComponent*                     DestAbilitySystem;                                         // 0x0020(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTooltipContext");
		return ptr;
	}



	class UFortTooltipContext* STATIC_SpawnTooltipContext();
};

// Class FortniteGame.FortTooltipMap
// 0x0048 (FullSize[0x0064] - InheritedSize[0x001C])
class UFortTooltipMap : public UDataAsset
{
public:
	unsigned char                                      UnknownData_UOLN[0x3C];                                    // 0x001C(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFortTooltipMapEntry>                Mapping;                                                   // 0x0058(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTooltipMap");
		return ptr;
	}



};

// Class FortniteGame.FortTooltipManager
// 0x003C (FullSize[0x0058] - InheritedSize[0x001C])
class UFortTooltipManager : public UObject
{
public:
	TMap<class UClass*, class UFortTooltip*>           Tooltips;                                                  // 0x001C(0x0050) ELEMENT_SIZE_MISMATCH (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTooltipManager");
		return ptr;
	}



};

// Class FortniteGame.FortAccountItemDefinition
// 0x0018 (FullSize[0x0430] - InheritedSize[0x0418])
class UFortAccountItemDefinition : public UFortItemDefinition
{
public:
	struct FCurveTableRowHandle                        LevelToXpHandle;                                           // 0x0418(0x000C) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        LevelToSacrificeXpHandle;                                  // 0x0424(0x000C) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAccountItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortWorkerType
// 0x0314 (FullSize[0x0744] - InheritedSize[0x0430])
class UFortWorkerType : public UFortAccountItemDefinition
{
public:
	class UGameplayEffect*                             ManagerEffect;                                             // 0x0430(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*                    WorkerWorldItem;                                           // 0x0434(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsManager;                                                // 0x0438(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZNYW[0x3];                                     // 0x0439(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       BuildingSynergyTag;                                        // 0x043C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       FixedPersonalityTag;                                       // 0x0454(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       FixedSetBonusTag;                                          // 0x046C(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int                                                MatchingPersonalityBonus;                                  // 0x0484(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MismatchingPersonalityPenalty;                             // 0x0488(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 CardIconBrush[0x3];                                        // 0x048C(0x015C) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 AvatarIconBrush[0x3];                                      // 0x05E8(0x015C) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWorkerType");
		return ptr;
	}



};

// Class FortniteGame.FortHeroType
// 0x0118 (FullSize[0x085C] - InheritedSize[0x0744])
class UFortHeroType : public UFortWorkerType
{
public:
	TArray<struct FString>                             Outfits_Naked;                                             // 0x0744(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FString>                             Outfits_Male;                                              // 0x0750(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FString>                             Outfits_Female;                                            // 0x075C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimMontage*                                IdleAnimation_Male;                                        // 0x0768(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                IdleAnimation_Female;                                      // 0x076C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrait*                                  PrimaryTrait;                                              // 0x0770(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrait*                                  SecondaryTraits[0x4];                                      // 0x0774(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHeroSpecialization*                     DefaultSpecialization;                                     // 0x0784(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHeroAbilityKit>                     AbilityKits;                                               // 0x0788(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGameplayEffectApplicationInfo>      CombinedStatGEs;                                           // 0x0794(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                      CombinedStatSourceGE;                                      // 0x07A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHeroItem>                           HeroItems;                                                 // 0x07A4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       RequiredGPTags;                                            // 0x07B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UFortFeedbackBank*                           MaleOverrideFeedback;                                      // 0x07C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortFeedbackBank*                           FemaleOverrideFeedback;                                    // 0x07CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            OverridePawnClass;                                         // 0x07D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 IconBrushSmall;                                            // 0x07E8(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHeroType");
		return ptr;
	}



};

// Class FortniteGame.FortTrait
// 0x0044 (FullSize[0x045C] - InheritedSize[0x0418])
class UFortTrait : public UFortItemDefinition
{
public:
	struct FFortAbilityKitSlot                         AbilityKitSlots[0x5];                                      // 0x0418(0x003C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       TraitCostEntryName;                                        // 0x0454(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTrait");
		return ptr;
	}



	TArray<struct FFortAbilityKitSlot> GetAbilityKitSlots();
};

// Class FortniteGame.FortAbilityKit
// 0x0144 (FullSize[0x017C] - InheritedSize[0x0038])
class UFortAbilityKit : public UFortAbilitySet
{
public:
	unsigned char                                      UnknownData_ODGR[0x4];                                     // 0x0038(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       DisplayName;                                               // 0x003C(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	TArray<struct FText>                               Description;                                               // 0x0048(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FText                                       TooltipDescription;                                        // 0x0054(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 IconBrush;                                                 // 0x0060(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 PrimaryTraitIconBrushOverride;                             // 0x00D4(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UFortGadgetItemDefinition*>           Gadgets;                                                   // 0x0148(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FAbilityKitItem>                     Items;                                                     // 0x0154(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UFortSchematicItemDefinition*>        AddedSchematics;                                           // 0x0160(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UFortSchematicItemDefinition*>        RemovedSchematics;                                         // 0x016C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                      Tooltip;                                                   // 0x0178(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityKit");
		return ptr;
	}



	TArray<struct FText> GetDescription();
};

// Class FortniteGame.FortItem
// 0x0024 (FullSize[0x0040] - InheritedSize[0x001C])
class UFortItem : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnItemChanged;                                             // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnItemDestroyed;                                           // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7CMW[0x8];                                     // 0x0034(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bLoadedFromSave;                                           // 0x003C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KBV0[0x3];                                     // 0x003D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortItem");
		return ptr;
	}



	bool IsSlotted();
	bool IsSchematic();
	bool IsInStorageVault();
	bool IsInBackpackOverflow();
	bool IsEquipped();
	bool IsEquipable(class AFortPlayerController* EquippingPC);
	bool IsAlterationSlotActive(int SlotIndex);
	bool IsActivatable(class AFortPlayerController* FortPC);
	bool HasDurability();
	int GetUpgradeCost();
	TEnumAsByte<FortniteGame_EFortItemType> GetType();
	TEnumAsByte<FortniteGame_EFortItemTier> GetTier();
	bool GetTertiaryCategory(struct FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, TEnumAsByte<FortniteGame_EFortBrushSize> BrushSize);
	bool GetSecondaryCategory(struct FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, TEnumAsByte<FortniteGame_EFortBrushSize> BrushSize);
	struct FText GetSearchTags();
	TEnumAsByte<FortniteGame_EFortItemType> GetSchematicResultType();
	class UFortItemDefinition* GetSchematicCraftingResultBP();
	int GetRemainingAmmo();
	int GetRecycleValue();
	struct FLinearColor GetRarityTextShadowColor();
	struct FLinearColor GetRaritySecondaryColor();
	struct FLinearColor GetRarityColor();
	TEnumAsByte<FortniteGame_EFortRarity> GetRarity();
	bool GetPrimaryCategory(struct FText* ItemCategoryText);
	int GetNumInStack();
	float GetNormalizedDurability();
	int GetMaxLevel();
	int GetLoadedAmmo();
	int GetLevel();
	struct FGuid GetItemGuid();
	class UFortItemDefinition* GetItemDefinitionBP();
	void GetIconBrush(struct FSlateBrush* IconBrush, TEnumAsByte<FortniteGame_EFortBrushSize> BrushSize);
	TEnumAsByte<FortniteGame_EFortInventoryFilter> GetFilterCategory();
	float GetDurability();
	struct FText GetDisplayName();
	struct FText GetDescription();
	float GetCoolDownTimeRemaining(class AFortPlayerController* FortPC, float* CooldownDuration);
	float GetCoolDownPercentageRemaining(class AFortPlayerController* FortPC);
	struct FText GetAlterationSlotActivationRequirement(int SlotIndex);
	TArray<class UFortAlterationItemDefinition*> GetAlterations();
	bool DoesMatchSearchString(const struct FString& SearchString);
	bool CanBeUpgraded();
	bool CanBeUnslotted();
	bool CanBeDropped();
};

// Class FortniteGame.FortAccountItem
// 0x0040 (FullSize[0x0080] - InheritedSize[0x0040])
class UFortAccountItem : public UFortItem
{
public:
	unsigned char                                      UnknownData_9BJN[0x4];                                     // 0x0040(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Level;                                                     // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                XP;                                                        // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                bItemSeen;                                                 // 0x004C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxLevelBonus;                                             // 0x0050(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAccountItemDefinition*                  ItemDefinition;                                            // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     InstanceId;                                                // 0x0058(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     TemplateId;                                                // 0x0064(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Quantity;                                                  // 0x0070(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsLocalOnlyItem;                                          // 0x0074(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bShouldBeMarkedAsSeen;                                     // 0x0075(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RF85[0xA];                                     // 0x0076(0x000A) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAccountItem");
		return ptr;
	}



	bool HasBeenSeenLocally();
};

// Class FortniteGame.FortWorker
// 0x005C (FullSize[0x00DC] - InheritedSize[0x0080])
class UFortWorker : public UFortAccountItem
{
public:
	struct FString                                     Slotted_Building_Id;                                       // 0x0080(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Building_Slot_Used;                                        // 0x008C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Gender;                                                    // 0x0090(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     personality;                                               // 0x0094(0x000C) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     set_bonus;                                                 // 0x00A0(0x000C) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       PersonalityTag;                                            // 0x00AC(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       SetBonusTag;                                               // 0x00C4(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWorker");
		return ptr;
	}



	class UFortWorkerType* GetWorkerTypeBP();
	bool GetTertiaryCategory(struct FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, TEnumAsByte<FortniteGame_EFortBrushSize> BrushSize);
	bool GetSecondaryCategory(struct FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, TEnumAsByte<FortniteGame_EFortBrushSize> BrushSize);
};

// Class FortniteGame.FortHero
// 0x00C0 (FullSize[0x019C] - InheritedSize[0x00DC])
class UFortHero : public UFortWorker
{
public:
	struct FString                                     Hero_Name;                                                 // 0x00DC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Primary_Trait_Abilities;                                   // 0x00E8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Secondary_Trait_Alpha_Abilities;                           // 0x00EC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Secondary_Trait_Beta_Abilities;                            // 0x00F0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Secondary_Trait_Gamma_Abilities;                           // 0x00F4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Secondary_Trait_Delta_Abilities;                           // 0x00F8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             Equipped_Cosmetics;                                        // 0x00FC(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortSavedModeLoadout>               Mode_Loadouts;                                             // 0x0108(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	struct FSelectedClassAbilityKits                   SelectedAbilityKits;                                       // 0x0114(0x0064) (NativeAccessSpecifierPublic)
	int64_t                                            AbilitiesChanged;                                          // 0x0178(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortHeroSpecialization*>             Specializations;                                           // 0x0180(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortAbilityKit*>                     SpecializationAbilityKits;                                 // 0x018C(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortCharacterCosmeticItem*                  CosmeticItem;                                              // 0x0198(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHero");
		return ptr;
	}



	class UFortHeroType* GetHeroTypeBP();
};

// Class FortniteGame.MyTownBuildingDefinitionData
// 0x00F4 (FullSize[0x0524] - InheritedSize[0x0430])
class UMyTownBuildingDefinitionData : public UFortAccountItemDefinition
{
public:
	TEnumAsByte<FortniteGame_EMyFortBuildingCategory>  BuildingCategory;                                          // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HDA4[0x3];                                     // 0x0431(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortHomebaseBuildingDataTable*              BuildingBonusTable;                                        // 0x0434(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       BuildingTag;                                               // 0x0438(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                          LevelAttribute;                                            // 0x0450(0x0004) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                          RatingAttribute;                                           // 0x0454(0x0004) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                          WorkerSlotsAttribute;                                      // 0x0458(0x0004) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                          ManagerSlotsAttribute;                                     // 0x045C(0x0004) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              StaticGameplayEffectsByLevel;                              // 0x0460(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UClass*                                      WorkerGameplayEffect;                                      // 0x046C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAbilityKit*>                     AbilityKitsByLevel;                                        // 0x0470(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition*       ProducedResource;                                          // 0x047C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMyTownSubBuildingData>              SubBuildingsWithIcons;                                     // 0x0480(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 BuildingSymbolNormal;                                      // 0x048C(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UMediaTexture*                               BuildingVideo;                                             // 0x0500(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BuildingActor;                                             // 0x0504(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  BuyCue;                                                    // 0x0508(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  UpgradeCue;                                                // 0x050C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  SelectCue;                                                 // 0x0510(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FText>                               MultilineDescription;                                      // 0x0514(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bHideInUI;                                                 // 0x0520(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_INBT[0x3];                                     // 0x0521(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.MyTownBuildingDefinitionData");
		return ptr;
	}



	TArray<struct FText> GetDescription();
	struct FString GetBuildingTemplateId();
};

// Class FortniteGame.MyTownData
// 0x007C (FullSize[0x0098] - InheritedSize[0x001C])
class UMyTownData : public UDataAsset
{
public:
	TArray<struct FMyTownBuildingData>                 MyTownBuildings;                                           // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMyTownRoadData>                     MyTownRoads;                                               // 0x0028(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMyTownBuildingDefinitionData*               CollectBuilding;                                           // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMyTownBuildingDefinitionData*               CommandCenterBuilding;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMyTownBuildingDefinitionData*               KeepBuilding;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMyTownBuildingDefinitionData*               ManorBuilding;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMyTownBannerData>                   Banners;                                                   // 0x0044(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMyTownColorBannerData>              BannerColors;                                              // 0x0050(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDataTable*                                  BuildingUpgradesData;                                      // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                                 RatingPerLevelGrowthTable;                                 // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMyTownWorkerPersonalityData>        WorkerPersonalities;                                       // 0x0064(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMyTownWorkerSetBonusData>           WorkerSetBonuses;                                          // 0x0070(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortPersistentResourceItemDefinition*> PersistentResourceDefinitions;                             // 0x007C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition*       PersonnelXpItemDefinition;                                 // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition*       SchematicXpItemDefinition;                                 // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortCurrencyItemDefinition*                 CurrencyItemDefinition;                                    // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TotalRatingGameplayEffect;                                 // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.MyTownData");
		return ptr;
	}



};

// Class FortniteGame.FortMcpContext
// 0x007C (FullSize[0x0098] - InheritedSize[0x001C])
class UFortMcpContext : public UBlueprintContextBase
{
public:
	unsigned char                                      UnknownData_32J4[0x4];                                     // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHeroesChanged;                                           // 0x0020(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBuildingInfoUpdated;                                     // 0x002C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLocalAccountInfoChanged;                                 // 0x0038(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCurrentlyViewedAccountInfoChanged;                       // 0x0044(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_55LQ[0x28];                                    // 0x0050(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptDelegate                             DisplayPurchaseWidget;                                     // 0x0078(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	struct FScriptDelegate                             DismissPurchaseWidget;                                     // 0x0088(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMcpContext");
		return ptr;
	}



	void UpgradeItem(class UFortItem* ItemToUpgrade);
	void RegisterForEpicPurchasingDisplay(const struct FScriptDelegate& DisplayCallback, const struct FScriptDelegate& DismissCallback);
	void RecycleItem(class UFortItem* ItemToRecycle);
	void PurchaseRealMoneyCatalogEntry(const struct FString& OfferId, const struct FScriptDelegate& Callback);
	void MarkItemSeen(class UFortAccountItem* ItemToMarkSeen);
	void ListMtxPackages(const struct FScriptDelegate& Callback);
	bool IsLocalPlayersUniqueID(const struct FUniqueNetIdRepl& PlayerID);
	bool IsDailyRewardAvailable(float* OutSecondsUntilNextReward, bool* OutRewardAvailable);
	int GetSchematicXpBalance();
	int GetPersonnelXpBalance();
	void GetLocalAccountInfo(struct FFortPrivateAccountInfo* Result);
	void GetHomeBaseInfoForPlayer(struct FFortHomeBaseInfo* Result, const struct FUniqueNetIdRepl& MemberUniqueId);
	void GetHomeBaseInfo(struct FFortHomeBaseInfo* Result);
	class UFortHero* GetDefaultHero();
	void GetCurrentlyViewedAccountInfo(struct FFortPublicAccountInfo* Result);
	void GetAllHeroes(TArray<class UFortHero*>* Result);
	void GetAllAlterations(TArray<class UFortAlterationItem*>* OutAlterations, TEnumAsByte<FortniteGame_EFortAlteration> InAlterationType);
	class UFortAccountItem* GetAccountItemWithDefinition(class UFortAccountItemDefinition* AccountItemDefinition);
	void CancelEpicPurchasingDisplay();
	void ApplyAlteration(class UFortAlterableItem* Item, class UFortAlterationItem* AlterationToApply);
};

// Class FortniteGame.FortOutpostContext
// 0x0030 (FullSize[0x004C] - InheritedSize[0x001C])
class UFortOutpostContext : public UBlueprintContextBase
{
public:
	struct FScriptMulticastDelegate                    OnStructureLevelChanged;                                   // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnItemsNeedRefresh;                                        // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGooContentNeedRefresh;                                   // 0x0034(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCraftingTableActivationBonusChanged;                     // 0x0040(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortOutpostContext");
		return ptr;
	}



	void UpgradeStructure(class UFortOutpostItemDefinition* StructureToUpgrade);
	void UpgradePOST();
	void LeaveOutpostAsParty();
	bool IsPrestigeAllowed();
	void IncreaseOutpostPrestigeLevel();
	void GetUpgradeStructureCost(class UFortOutpostItemDefinition* OutpostStructure, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	int GetStructureMaxLevel(class UFortOutpostItemDefinition* OutpostStructure);
	int GetStructureLevel(class UFortOutpostItemDefinition* OutpostStructure);
	int GetStormShieldLevelDefended();
	float GetPOSTBuildingHealthMod(int POSTLevel);
	class AOutpostStructureBase* GetOutpostStructure(class UFortOutpostItemDefinition* OutpostStructure);
	int GetOutpostPrestigeLevel();
	TArray<class UOutpostPOSTRequirementData*> GetNextPOSTLevelRequirements();
	class UFortWorldItemDefinition* GetHarvestingToolForLevel(int InHarvestingOptimizerLevel);
	void DepositPOSTResource(class UFortItemDefinition* ResourceItem, int Count);
	bool CanUpgradeStructure(class UFortOutpostItemDefinition* OutpostStructure, bool bLog);
	bool CanUpgradePOST();
};

// Class FortniteGame.FortPartyGameState
// 0x0170 (FullSize[0x03A0] - InheritedSize[0x0230])
class UFortPartyGameState : public UPartyGameState
{
public:
	struct FFortPartyRepState                          PartyState;                                                // 0x0230(0x003C) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5637[0x134];                                   // 0x026C(0x0134) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPartyGameState");
		return ptr;
	}



};

// Class FortniteGame.FortAlterationItemDefinition
// 0x0054 (FullSize[0x0484] - InheritedSize[0x0430])
class UFortAlterationItemDefinition : public UFortAccountItemDefinition
{
public:
	TEnumAsByte<FortniteGame_EFortAlteration>          AlterationType;                                            // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_682E[0x3];                                     // 0x0431(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortCosmeticModification                   DefaultCosmetic;                                           // 0x0434(0x0034) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortConditionalCosmeticModification> ConditionalCosmetics;                                      // 0x0468(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortConditionalIncludeTags>         AdditionalGameplayTags;                                    // 0x0474(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortAbilitySet*                             AlterationAbilitySet;                                      // 0x0480(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAlterationItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortHeroSpecialization
// 0x0064 (FullSize[0x04E8] - InheritedSize[0x0484])
class UFortHeroSpecialization : public UFortAlterationItemDefinition
{
public:
	TArray<struct FFortSpecializationSlot>             SpecializationSlots;                                       // 0x0484(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortCharacterCosmeticItemDefinition*        CosmeticItem;                                              // 0x0490(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        VitalityCurve;                                             // 0x0494(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        OffenseCurve;                                              // 0x04A0(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        ProwessCurve;                                              // 0x04AC(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        DefenceCurve;                                              // 0x04B8(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FHeroSpecializationAttributeRequirement> AttributeRequirements;                                     // 0x04C4(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       RequiredTags;                                              // 0x04D0(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHeroSpecialization");
		return ptr;
	}



};

// Class FortniteGame.FortPersistentResourceItemDefinition
// 0x0008 (FullSize[0x0438] - InheritedSize[0x0430])
class UFortPersistentResourceItemDefinition : public UFortAccountItemDefinition
{
public:
	float                                              WidgetVisibilityThreshold;                                 // 0x0430(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortPersistentResources> PersistentResourceType;                                    // 0x0434(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JN2O[0x3];                                     // 0x0435(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPersistentResourceItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortUITeamInfo
// 0x00B4 (FullSize[0x00D0] - InheritedSize[0x001C])
class UFortUITeamInfo : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnTeamMemberAdded;                                         // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTeamMemberRemoved;                                       // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTeamMemberStateChanged;                                  // 0x0034(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTeamMemberPromoted;                                      // 0x0040(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7YX8[0x78];                                    // 0x004C(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortPartyContext*                           TeamContext;                                               // 0x00C4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<FortniteGame_EFortTeam>                TeamAssignment;                                            // 0x00C8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ABB5[0x3];                                     // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UEnum*                                       FortTeamUEnum;                                             // 0x00CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortUITeamInfo");
		return ptr;
	}



	void OnTeamMemberStateChangedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& TeamMemberInfo);
	void OnTeamMemberSimpleDelegate__DelegateSignature();
	void OnTeamMemberRemovedDelegate__DelegateSignature(int PlayerIndex);
	void OnTeamMemberAddedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& NewTeamMemberInfo);
	void GetTeamMembers(TArray<struct FFortTeamMemberInfo>* TeamMembers);
	void GetTeamMemberIDs(TArray<struct FUniqueNetIdRepl>* TeamMemberIDs);
	void GetTeamHitPointFractions(TArray<float>* HealthFractions, TArray<float>* ShieldFractions);
};

// Class FortniteGame.FortPartyContext
// 0x024C (FullSize[0x0268] - InheritedSize[0x001C])
class UFortPartyContext : public UBlueprintContextBase
{
public:
	struct FScriptMulticastDelegate                    OnPartyTransitionStarted;                                  // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyTransitionCompleted;                                // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyJoined;                                             // 0x0034(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyLeft;                                               // 0x0040(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClientPartyStateChanged;                                 // 0x004C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyTypeChanged;                                        // 0x0058(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLeaderFriendsOnlyChanged;                                // 0x0064(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLeaderInvitesOnlyChanged;                                // 0x0070(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLocalPlayerStateChanged;                                 // 0x007C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerStateChanged;                                      // 0x0088(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyDataChanged;                                        // 0x0094(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnActiveFriendsCountUpdated;                               // 0x00A0(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnActiveFriendsUpdated;                                    // 0x00AC(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyInvitesCountChanged;                                // 0x00B8(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartyInvitesUpdated;                                     // 0x00C4(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    RejectInviteComplete;                                      // 0x00D0(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSocialListChanged;                                       // 0x00DC(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSentPartyInvite;                                         // 0x00E8(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUnhandledErrorMessage;                                   // 0x00F4(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHandledErrorMessage;                                     // 0x0100(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UHZ6[0x14C];                                   // 0x010C(0x014C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortUITeamInfo*                             LocalPlayerTeam;                                           // 0x0258(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BZ4Z[0xC];                                     // 0x025C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPartyContext");
		return ptr;
	}



	bool ShouldShowHeroPortraits();
	void SetPartyPrivacySetting(TEnumAsByte<Party_EPartyType> PartyType, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly);
	void SetChatWhisperTarget(const struct FUniqueNetIdRepl& FriendID);
	void SendPartyInvite(class UFortSocialItem* SocialItem);
	void SendFriendRequest(const struct FUniqueNetIdRepl& PlayerID);
	void RejectPartyInvite(class UFortSocialItem* PartyInvite);
	void RejectFriendRequest(const struct FUniqueNetIdRepl& PlayerID);
	void PromotePartyMemberToLeader(const struct FUniqueNetIdRepl& PartyMemberId);
	void OnUnhandledErrorMessageDelegate__DelegateSignature(const struct FText& Message, const struct FString& ErrorCode);
	void OnSocialListChangedDelegate__DelegateSignature(TArray<class UFortSocialItem*> SocialItems);
	void OnSendInviteCompleteDelegate__DelegateSignature();
	void OnRejectInviteComplete__DelegateSignature();
	void OnPlayerStateChangedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& PlayerInfo);
	void OnPartyTypeChanged__DelegateSignature(TEnumAsByte<Party_EPartyType> PartyType);
	void OnPartyTransitionStartedDelegate__DelegateSignature(TEnumAsByte<FortniteGame_EFortPartyTransition> PartyTransition);
	void OnPartyTransitionCompleteDelegate__DelegateSignature(TEnumAsByte<FortniteGame_EFortPartyTransition> PartyTransition);
	void OnPartyLeftDelegate__DelegateSignature();
	void OnPartyJoinedDelegate__DelegateSignature();
	void OnPartyInvitesUpdatedDelegate__DelegateSignature(TArray<class UFortSocialItem*> ActiveFriends);
	void OnPartyInvitesCountUpdatedDelegate__DelegateSignature(int PartyInvitesCount);
	void OnPartyDataChanged__DelegateSignature(const struct FPartyState& PartyData);
	void OnLeaderInvitesOnlyChanged__DelegateSignature(bool bLeaderInviteOnly);
	void OnLeaderFriendsOnlyChanged__DelegateSignature(bool bLeaderFriendsOnly);
	void OnHandledErrorMessageDelegate__DelegateSignature(const struct FText& Header, const struct FText& Message);
	void OnFriendsCountChangedDelegate__DelegateSignature(int ActiveFriendsCount);
	void OnFriendsChangedDelegate__DelegateSignature(TArray<class UFortSocialItem*> ActiveFriends);
	void OnClientPartyStateChanged__DelegateSignature(TEnumAsByte<FortniteGame_EFortPartyState> PartyState);
	void LeaveParty();
	void KickPartyMember(const struct FUniqueNetIdRepl& PartyMemberId);
	void JoinParty(class UFortSocialItem* PartyItem);
	bool STATIC_IsValidNetID(const struct FUniqueNetIdRepl& UniqueNetID);
	bool IsLocalPlayerPartyLeader();
	bool IsLocalPlayerInParty(class UFortSocialItem* SocialItem);
	bool IsInLocalPlayersParty(const struct FUniqueNetIdRepl& PlayerID);
	bool IsEntirePartyInFrontEnd();
	bool IsActiveFriendsListRetrieved();
	bool IsActiveFriend(const struct FUniqueNetIdRepl& PlayerID);
	bool HasPendingFriendRequest();
	void HandlePendingInvites();
	class UFortUITeamInfo* GetTeamInfo(TEnumAsByte<FortniteGame_EFortTeam> Team);
	void GetSocialItemList(TArray<class UFortSocialItem*>* OutSocialItems);
	bool GetPartyPrivacySetting(TEnumAsByte<Party_EPartyType>* OutPartyType, bool* OutLeaderFriendsOnly, bool* OutLeaderInvitesOnly);
	void GetPartyInvites(TArray<class UFortSocialItem*>* OutPartyInvites);
	int GetNumPlayersInLocalParty();
	int GetMaxTeamSizeForSelectedTheater();
	void GetLocalPlayerTeamMemberInfo(struct FFortTeamMemberInfo* LocalPlayerInfo);
	class UFortUITeamInfo* GetLocalPlayerTeam();
	struct FString GetLocalPlayerDisplayName();
	TEnumAsByte<FortniteGame_EFortPartyState> GetLocalPartyProgression();
	void GetLocalPartyMemberIDs(TArray<struct FUniqueNetIdRepl>* PartyMemberIDs, bool bIncludeLocalPlayerID);
	TEnumAsByte<FortniteGame_EFortFriendRequestStatus> GetFriendRequestStatusForPlayer(const struct FUniqueNetIdRepl& PlayerID);
	void GetActiveFriendsList(TArray<class UFortSocialItem*>* OutActiveFriends);
	void ClearPendingInvites();
	void CancelFriendRequest(const struct FUniqueNetIdRepl& PlayerID);
	bool CanBeJoined(class UFortSocialItem* SocialItem, TEnumAsByte<FortniteGame_EFortPartyRestriction>* FailReason);
	bool CanBeInvited(class UFortSocialItem* SocialItem, TEnumAsByte<FortniteGame_EFortPartyRestriction>* FailReason);
	void AcceptFriendRequest(const struct FUniqueNetIdRepl& PlayerID);
};

// Class FortniteGame.FortTutorialContext
// 0x0030 (FullSize[0x004C] - InheritedSize[0x001C])
class UFortTutorialContext : public UBlueprintContextBase
{
public:
	struct FScriptMulticastDelegate                    OnShowTutorialScreen;                                      // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHideTutorialScreen;                                      // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShowBannerSelectionScreen;                               // 0x0034(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShowTutorialNotification;                                // 0x0040(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTutorialContext");
		return ptr;
	}



	void UnhideTutorialWidgetForBang(TEnumAsByte<FortniteGame_EFortBangType> BangType);
	void UnhideTutorialWidget(const struct FName& WidgetName);
	void UnhideAllTutorialWidgets();
	void SkipTutorial();
	bool ShouldPromptToSkipTutorial();
	void SetTutorialNotificationActive(bool bActive);
	void HideTutorialWidgetForBang(TEnumAsByte<FortniteGame_EFortBangType> BangType);
	void HideTutorialWidget(const struct FName& WidgetName);
	void EnableTutorialHighlightForBang(TEnumAsByte<FortniteGame_EFortBangType> BangType);
	void EnableTutorialHighlight(const struct FName& WidgetName);
	void DisableTutorialHighlightForBang(TEnumAsByte<FortniteGame_EFortBangType> BangType);
	void DisableTutorialHighlight(const struct FName& WidgetName);
	void ClearTutorialHighlights();
};

// Class FortniteGame.FortMcpProfile
// 0x000C (FullSize[0x0130] - InheritedSize[0x0124])
class UFortMcpProfile : public UMcpProfile
{
public:
	unsigned char                                      UnknownData_7O06[0xC];                                     // 0x0124(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMcpProfile");
		return ptr;
	}



};

// Class FortniteGame.FortQuestObjectiveInfo
// 0x0020 (FullSize[0x003C] - InheritedSize[0x001C])
class UFortQuestObjectiveInfo : public UObject
{
public:
	struct FName                                       ObjectiveStatName;                                         // 0x001C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0024(0x0018) ELEMENT_SIZE_MISMATCH (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortQuestObjectiveType>  Type;                                                      // 0x0030(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JFAF[0x3];                                     // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                AchievedCount;                                             // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RequiredCount;                                             // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQuestObjectiveInfo");
		return ptr;
	}



	class UFortQuestItem* GetOwningQuest();
	bool GetObjectiveStatRow(struct FFortQuestObjectiveStatTableRow* OutRow);
};

// Class FortniteGame.FortQuestItem
// 0x0064 (FullSize[0x00E4] - InheritedSize[0x0080])
class UFortQuestItem : public UFortAccountItem
{
public:
	TEnumAsByte<FortniteGame_EFortQuestState>          State;                                                     // 0x0080(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSentNewNotification;                                      // 0x0081(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NX4R[0x2];                                     // 0x0082(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, int>                            CompletionCounts;                                          // 0x0084(0x0050) ELEMENT_SIZE_MISMATCH (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UFortQuestObjectiveInfo*>             Objectives;                                                // 0x00C0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FDateTime                                   LastStateChangeTime;                                       // 0x00CC(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               bAllObjectivesComplete;                                    // 0x00D4(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bSentCompleteNotification;                                 // 0x00D5(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B9BX[0x2];                                     // 0x00D6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortMissionInstancedConfigData             InstancedConfigData;                                       // 0x00D8(0x000C) (Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQuestItem");
		return ptr;
	}



	bool IsVisibleToUser();
	bool HasCompletedQuest();
	bool HasCompletedObjective(const struct FDataTableRowHandle& ObjectiveStatHandle);
	class UFortQuestItemDefinition* GetQuestDefinitionBP();
	TArray<struct FFortQuestReward> GetPreviewRewards();
	float GetPercentageComplete();
	class UFortQuestObjectiveInfo* GetObjectiveInfo(const struct FDataTableRowHandle& ObjectiveStatHandle);
	class UFortMissionConfigData* GetMissionConfigData(const struct FGameplayTag& InBucketTag);
	void GetAchievedCount(int* OutTotalAchievedCount, int* OutTotalRequiredCount);
};

// Class FortniteGame.FortMcpProfileAccount
// 0x0044 (FullSize[0x0174] - InheritedSize[0x0130])
class UFortMcpProfileAccount : public UFortMcpProfile
{
public:
	struct FString                                     ListCatalogEntriesUrl;                                     // 0x0130(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     GetHomebaseViewUrl;                                        // 0x013C(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     GetOutpostViewUrl;                                         // 0x0148(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BFWD[0x20];                                    // 0x0154(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileAccount");
		return ptr;
	}



	void UpgradeWorker(const struct FString& TargetWorkerId, struct FClientUrlContext* Context);
	void UpgradeItem(const struct FString& TargetItemId, struct FClientUrlContext* Context);
	void UpgradeBuilding(const struct FString& BuildingId, struct FClientUrlContext* Context);
	void UpdateQuests(TArray<struct FFortQuestObjectiveCompletion> Advance, struct FDedicatedServerUrlContext* Context);
	void UpdateQuestClientObjectives(TArray<struct FFortQuestObjectiveCompletion> Advance, struct FClientUrlContext* Context);
	void UpdateBuildingLevelAndRating(const struct FString& BuildingId, int LastBuildingLevel, int LastBuildingRating, struct FClientUrlContext* Context);
	void UnslotAllWorkers(TArray<struct FString> BuildingIds, struct FClientUrlContext* Context);
	void UnloadWarehouse(TArray<struct FString> ResourceTypes, struct FClientUrlContext* Context);
	void SkipTutorial(struct FClientUrlContext* Context);
	void SetModeLoadout(const struct FFortSavedModeLoadout& ModeLoadout, const struct FString& HeroId, const struct FFortSavedModeLoadout& HeroModeLoadout, struct FClientUrlContext* Context);
	void SetHomebaseMeta(const struct FString& TownName, int FlagPattern, float FlagColor, struct FClientUrlContext* Context);
	void SetHeroModeLoadout(const struct FString& HeroId, const struct FFortSavedModeLoadout& ModeLoadout, struct FClientUrlContext* Context);
	void SetHeroAbilities(const struct FString& HeroId, int PrimaryTraitAbilities, int SecondaryTraitAbilities_Alpha, int SecondaryTraitAbilities_Beta, int SecondaryTraitAbilities_Gamma, int SecondaryTraitAbilities_Delta, struct FClientUrlContext* Context);
	void SetGameplayStats(TArray<struct FFortPersistentGameplayStatValue> GameplayStats, struct FClientUrlContext* Context);
	void SetDefaultHero(const struct FString& DefaultHeroId, struct FClientUrlContext* Context);
	void RenameHero(const struct FString& HeroId, const struct FString& NewHeroName, struct FClientUrlContext* Context);
	void RecycleItem(const struct FString& TargetItemId, struct FClientUrlContext* Context);
	void QuestLogin(struct FClientUrlContext* Context);
	void OpenCardPack(const struct FString& CardPackItemId, int SelectionIdx, struct FClientUrlContext* Context);
	void MarkNewQuestNotificationSent(TArray<struct FString> ItemIds, struct FClientUrlContext* Context);
	void MarkItemSeen(TArray<struct FString> ItemIds, struct FClientUrlContext* Context);
	void FortRerollDailyQuest(const struct FString& QuestId, struct FClientUrlContext* Context);
	void EquipCharCosmetic(const struct FString& CharacterId, const struct FString& CosmeticId, int TypeId, struct FClientUrlContext* Context);
	void EndPrimaryMission(const struct FString& MatchmakingSessionId, const struct FString& MissionName, const struct FString& MissionStatus, int NumMissionPoints, bool bCriticalMatchBonus, struct FDedicatedServerUrlContext* Context);
	void EarnScore(int TotalScore, const struct FString& MatchmakingSessionId, const struct FString& HeroId, bool bCriticalMatchBonus, struct FDedicatedServerUrlContext* Context);
	void DeleteHero(const struct FString& HeroId, struct FClientUrlContext* Context);
	void CreateHero(const struct FString& HeroName, int Gender, const struct FString& HeroTemplateId, struct FClientUrlContext* Context);
	void CreateBuilding(const struct FString& TemplateId, struct FClientUrlContext* Context);
	void ConsumeItems(TArray<struct FString> ItemsToConsumeIds, TArray<int> ItemCountsToConsume, const struct FString& ConsumeReason, struct FDedicatedServerUrlContext* Context);
	void ClaimQuestReward(const struct FString& QuestId, struct FClientUrlContext* Context);
	void ClaimLoginReward(struct FClientUrlContext* Context);
	void AssignWorkerToBuildingBatch(TArray<struct FString> WorkerIds, TArray<struct FString> BuildingIds, TArray<int> SlotIndices, struct FClientUrlContext* Context);
	void AssignWorkerToBuilding(const struct FString& WorkerId, const struct FString& BuildingId, int SlotIndex, struct FClientUrlContext* Context);
	void ApplyAlteration(const struct FString& TargetItemId, const struct FString& AlterationItemId, struct FClientUrlContext* Context);
};

// Class FortniteGame.MyTownBuildingItem
// 0x0034 (FullSize[0x00B4] - InheritedSize[0x0080])
class UMyTownBuildingItem : public UFortAccountItem
{
public:
	int                                                LastMaxLevel;                                              // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastMaxRating;                                             // 0x0084(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ManagerInstanceId;                                         // 0x0088(0x000C) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             WorkerInstanceIds;                                         // 0x0094(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                               bBuildingWasClicked;                                       // 0x00A0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bShouldUpdateLastMaxValues;                                // 0x00A1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHasAvailableUpgrades;                                     // 0x00A2(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EMyTownBuildingState>     BuildingState;                                             // 0x00A3(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MapSlotId;                                                 // 0x00A4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ParentBuildingTemplateId;                                  // 0x00A8(0x000C) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.MyTownBuildingItem");
		return ptr;
	}



};

// Class FortniteGame.FortQuickBars
// 0x0094 (FullSize[0x02D4] - InheritedSize[0x0240])
class AFortQuickBars : public AActor
{
public:
	struct FQuickBar                                   PrimaryQuickBar;                                           // 0x0240(0x0020) (Net, RepNotify, NativeAccessSpecifierPrivate)
	struct FQuickBar                                   SecondaryQuickBar;                                         // 0x0260(0x0020) (Net, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5ZEE[0x54];                                    // 0x0280(0x0054) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQuickBars");
		return ptr;
	}



	void ServerSwapItemsInternal(TEnumAsByte<FortniteGame_EFortQuickBars> QuickBarA, int SlotIndexA, TEnumAsByte<FortniteGame_EFortQuickBars> QuickBarB, int SlotIndexB);
	void ServerRemoveItemInternal(const struct FGuid& Item, bool bFindReplacement, bool bForce);
	void ServerAddItemInternal(const struct FGuid& Item, TEnumAsByte<FortniteGame_EFortQuickBars> InQuickBar, int Slot);
	void ServerActivateSlotInternal(TEnumAsByte<FortniteGame_EFortQuickBars> InQuickBar, int Slot, float AcivateDelay);
	void OnRep_SecondaryQuickBar();
	void OnRep_PrimaryQuickBar();
	void Empty(TEnumAsByte<FortniteGame_EFortQuickBars> InQuickBar);
};

// Class FortniteGame.FortRegionInfo
// 0x0080 (FullSize[0x009C] - InheritedSize[0x001C])
class UFortRegionInfo : public UDataAsset
{
public:
	struct FText                                       RegionName;                                                // 0x001C(0x0018) ELEMENT_SIZE_MISMATCH (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       RegionTags;                                                // 0x0028(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                       Requirements;                                              // 0x0040(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTheaterMapMissionData                  MissionData;                                               // 0x0060(0x0024) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TAssetPtr<class USlateBrushAsset>                  RegionThemeIcon;                                           // 0x0084(0x0018) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortRegionInfo");
		return ptr;
	}



};

// Class FortniteGame.WorldMapPin
// 0x000C (FullSize[0x024C] - InheritedSize[0x0240])
class AWorldMapPin : public AActor
{
public:
	class USceneComponent*                             SceneComponent;                                            // 0x0240(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetComponent*                            WidgetComponent;                                           // 0x0244(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TheaterIndex;                                              // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.WorldMapPin");
		return ptr;
	}



	void SetTheaterIndex(int NewIndex);
	void OnTheaterIndexSet();
};

// Class FortniteGame.FortTheaterInfo
// 0x0168 (FullSize[0x0184] - InheritedSize[0x001C])
class UFortTheaterInfo : public UDataAsset
{
public:
	struct FString                                     UniqueId;                                                  // 0x001C(0x000C) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortTheaterMapData                         TheaterData;                                               // 0x0028(0x00D0) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortTheaterMapMissionData                  Missions;                                                  // 0x00F8(0x0024) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bForceIncludeInCookIfReferenced;                           // 0x011C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4RA2[0x3];                                     // 0x011D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      SelectedZoneTheme;                                         // 0x0120(0x0004) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortRegionInfo*                             SelectedZoneRegion;                                        // 0x0124(0x0004) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTheaterMapTileType>  SelectedTileType;                                          // 0x0128(0x0001) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RZPW[0x3];                                     // 0x0129(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortRequirementsInfo                       SelectedTileRequirements;                                  // 0x012C(0x0020) (Edit, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterMissionWeight>           SelectedMissionWeightOverrides;                            // 0x014C(0x000C) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterDifficultyWeight>        SelectedDifficultyWeightOverrides;                         // 0x0158(0x000C) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEditorTheaterMapRegionColor>    RegionColors;                                              // 0x0164(0x000C) (Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterTileEditorData>          EditorTiles;                                               // 0x0170(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int                                                TheaterWidth;                                              // 0x017C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TheaterHeight;                                             // 0x0180(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTheaterInfo");
		return ptr;
	}



};

// Class FortniteGame.FortMissionPowerPointsInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortMissionPowerPointsInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionPowerPointsInterface");
		return ptr;
	}



	float GetPowerPointsCost(float LerpValue);
	float GetMaxRangeLerpValue(float PointsAvailable, float PreviousLerpValue);
	float GetInitialRangeLerpValue(float PointsAvailable);
	float GetAvailabilityWeight(float DifficultyLevel);
};

// Class FortniteGame.FortDifficultyOption
// 0x0010 (FullSize[0x002C] - InheritedSize[0x001C])
class UFortDifficultyOption : public UObject
{
public:
	unsigned char                                      UnknownData_08HJ[0x4];                                     // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDataTableRowHandle                         CostAndAvailability;                                       // 0x0020(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOption");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategory
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortDifficultyOptionCategory : public UDataAsset
{
public:
	bool                                               bIsRequired;                                               // 0x001C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsStatic;                                                 // 0x001D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bHasValueRange;                                            // 0x001E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UU61[0x1];                                     // 0x001F(0x0001) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategory");
		return ptr;
	}



};

// Class FortniteGame.FortMissionConfigData
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortMissionConfigData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionConfigData");
		return ptr;
	}



};

// Class FortniteGame.FortMissionEventParams
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortMissionEventParams : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionEventParams");
		return ptr;
	}



};

// Class FortniteGame.FortStartMissionParams
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortStartMissionParams : public UFortMissionEventParams
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortStartMissionParams");
		return ptr;
	}



};

// Class FortniteGame.FortItemCollectedParams
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortItemCollectedParams : public UFortMissionEventParams
{
public:
	class UFortWorldItemDefinition*                    CollectedItemDefinition;                                   // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                       CollectedBy;                                               // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AmountCollected;                                           // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortItemCollectedParams");
		return ptr;
	}



	void MakeData(class UFortWorldItemDefinition* _CollectedItemDefinition, class AFortPlayerController* _CollectedBy, int _AmountCollected, class UFortItemCollectedParams** ThisParam);
	void BreakData(class UFortWorldItemDefinition** _CollectedItemDefinition, class AFortPlayerController** _CollectedBy, int* _AmountCollected);
};

// Class FortniteGame.FortItemDroppedParams
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortItemDroppedParams : public UFortMissionEventParams
{
public:
	class UFortWorldItemDefinition*                    DroppedItemDefinition;                                     // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                       DroppedBy;                                                 // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AmountDropped;                                             // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortItemDroppedParams");
		return ptr;
	}



	void MakeData(class UFortWorldItemDefinition* _DroppedItemDefinition, class AFortPlayerController* _DroppedBy, int _AmountCollected, class UFortItemDroppedParams** ThisParam);
	void BreakData(class UFortWorldItemDefinition** _DroppedItemDefinition, class AFortPlayerController** _DroppedBy, int* _AmountCollected);
};

// Class FortniteGame.FortItemCraftedParams
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortItemCraftedParams : public UFortMissionEventParams
{
public:
	class UFortSchematicItemDefinition*                SchematicDefinition;                                       // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                       CraftedBy;                                                 // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AmountCrafted;                                             // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortItemCraftedParams");
		return ptr;
	}



	void MakeData(class UFortSchematicItemDefinition* _SchematicDefinition, class AFortPlayerController* _CraftedBy, int _AmountCrafted, class UFortItemCraftedParams** ThisParam);
	void BreakData(class UFortSchematicItemDefinition** _SchematicDefinition, class AFortPlayerController** _CraftedBy, int* _AmountCrafted);
};

// Class FortniteGame.FortEnemyKilledParams
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UFortEnemyKilledParams : public UFortMissionEventParams
{
public:
	class AFortPawn*                                   KilledPawn;                                                // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                       KilledBy;                                                  // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortEnemyKilledParams");
		return ptr;
	}



	void MakeData(class AFortPawn* _KilledPawn, class AFortPlayerController* _KilledBy, class UFortEnemyKilledParams** ThisParam);
	void BreakData(class AFortPawn** _KilledPawn, class AFortPlayerController** _KilledBy);
};

// Class FortniteGame.FortEnemyDamagedParams
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortEnemyDamagedParams : public UFortMissionEventParams
{
public:
	class AFortPawn*                                   DamagedPawn;                                               // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                       DamagedBy;                                                 // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageAmount;                                              // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortEnemyDamagedParams");
		return ptr;
	}



	void MakeData(class AFortPawn* _DamagedPawn, class AFortPlayerController* _DamagedBy, float _DamageAmount, class UFortEnemyDamagedParams** ThisParam);
	void BreakData(class AFortPawn** _DamagedPawn, class AFortPlayerController** _DamagedBy, float* _DamageAmount);
};

// Class FortniteGame.FortNewPlayerParams
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortNewPlayerParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       NewPlayerController;                                       // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNewPlayerParams");
		return ptr;
	}



	void MakeData(class AFortPlayerController* _NewPlayerController, class UFortNewPlayerParams** ThisParam);
	void BreakData(class AFortPlayerController** _NewPlayerController);
};

// Class FortniteGame.FortPlayerSpawnedParams
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortPlayerSpawnedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       SpawnedPlayerController;                                   // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerSpawnedParams");
		return ptr;
	}



	void MakeData(class AFortPlayerController* _SpawnedPlayerController, class UFortPlayerSpawnedParams** ThisParam);
	void BreakData(class AFortPlayerController** _SpawnedPlayerController);
};

// Class FortniteGame.FortPlayerDiedParams
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UFortPlayerDiedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerPawn*                             KilledPlayer;                                              // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                                 KilledBy;                                                  // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerDiedParams");
		return ptr;
	}



	void MakeData(class AFortPlayerPawn* _KilledPlayer, class AController* _KilledBy, class UFortPlayerDiedParams** ThisParam);
	void BreakData(class AFortPlayerPawn** _KilledPlayer, class AController** _KilledBy);
};

// Class FortniteGame.FortDayPhaseChangeParams
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UFortDayPhaseChangeParams : public UFortMissionEventParams
{
public:
	class AFortDayNightLightingAndFog*                 LightingAndFogManager;                                     // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortDayPhase>            NewDayPhase;                                               // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HGHL[0x3];                                     // 0x0021(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDayPhaseChangeParams");
		return ptr;
	}



	void MakeData(class AFortDayNightLightingAndFog* _LightingAndFogManager, TEnumAsByte<FortniteGame_EFortDayPhase> _NewDayPhase, class UFortDayPhaseChangeParams** ThisParam);
	void BreakData(class AFortDayNightLightingAndFog** _LightingAndFogManager, TEnumAsByte<FortniteGame_EFortDayPhase>* _NewDayPhase);
};

// Class FortniteGame.FortPlayerBuiltParams
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortPlayerBuiltParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                              Building;                                                  // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortBuildingType>        BuildingType;                                              // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CDN0[0x3];                                     // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortPlayerController*                       Builder;                                                   // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerBuiltParams");
		return ptr;
	}



	void MakeData(class ABuildingActor* _Building, TEnumAsByte<FortniteGame_EFortBuildingType> _BuildingType, class AFortPlayerController* _Builder, class UFortPlayerBuiltParams** ThisParam);
	void BreakData(class ABuildingActor** _Building, TEnumAsByte<FortniteGame_EFortBuildingType>* _BuildingType, class AFortPlayerController** _Builder);
};

// Class FortniteGame.FortBuildingDestroyedParams
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortBuildingDestroyedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                              Building;                                                  // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortBuildingType>        BuildingType;                                              // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PBU0[0x3];                                     // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AController*                                 Destroyer;                                                 // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBuildingDestroyedParams");
		return ptr;
	}



	void MakeData(class ABuildingActor* _Building, TEnumAsByte<FortniteGame_EFortBuildingType> _BuildingType, class AController* _Destroyer, class UFortBuildingDestroyedParams** ThisParam);
	void BreakData(class ABuildingActor** _Building, TEnumAsByte<FortniteGame_EFortBuildingType>* _BuildingType, class AController** _Destroyer);
};

// Class FortniteGame.FortBuildingEditedParams
// 0x0010 (FullSize[0x002C] - InheritedSize[0x001C])
class UFortBuildingEditedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                              OriginalBuilding;                                          // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                              NewBuilding;                                               // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortBuildingType>        BuildingType;                                              // 0x0024(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VBOH[0x3];                                     // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortPlayerController*                       Editor;                                                    // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBuildingEditedParams");
		return ptr;
	}



	void MakeData(class ABuildingActor* _OriginalBuilding, class ABuildingActor* _NewBuilding, TEnumAsByte<FortniteGame_EFortBuildingType> _BuildingType, class AFortPlayerController* _Editor, class UFortBuildingEditedParams** ThisParam);
	void BreakData(class ABuildingActor** _OriginalBuilding, class ABuildingActor** _NewBuilding, TEnumAsByte<FortniteGame_EFortBuildingType>* _BuildingType, class AFortPlayerController** _Editor);
};

// Class FortniteGame.FortBuildingDamagedParams
// 0x0010 (FullSize[0x002C] - InheritedSize[0x001C])
class UFortBuildingDamagedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                              Building;                                                  // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortBuildingType>        BuildingType;                                              // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GOQ0[0x3];                                     // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AController*                                 DamagedBy;                                                 // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0GYE[0x4];                                     // 0x0028(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBuildingDamagedParams");
		return ptr;
	}



	void MakeData(class ABuildingActor* _Building, TEnumAsByte<FortniteGame_EFortBuildingType> _BuildingType, class AController* _DamagedBy, float _DamageAmount, class UFortBuildingDamagedParams** ThisParam);
	void BreakData(class ABuildingActor** _Building, TEnumAsByte<FortniteGame_EFortBuildingType>* _BuildingType, class AController** _DamagedBy, float* _DamageAmount);
};

// Class FortniteGame.FortMissionSucceededParams
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortMissionSucceededParams : public UFortMissionEventParams
{
public:
	class AFortMission*                                SucceededMission;                                          // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionSucceededParams");
		return ptr;
	}



	void MakeData(class AFortMission* _SucceededMission, class UFortMissionSucceededParams** ThisParam);
	void BreakData(class AFortMission** _SucceededMission);
};

// Class FortniteGame.FortMissionFailedParams
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortMissionFailedParams : public UFortMissionEventParams
{
public:
	class AFortMission*                                FailedMission;                                             // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionFailedParams");
		return ptr;
	}



	void MakeData(class AFortMission* _FailedMission, class UFortMissionFailedParams** ThisParam);
	void BreakData(class AFortMission** _FailedMission);
};

// Class FortniteGame.FortMissionNeutralCompleteParams
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortMissionNeutralCompleteParams : public UFortMissionEventParams
{
public:
	class AFortMission*                                NeutrallyCompletedMission;                                 // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionNeutralCompleteParams");
		return ptr;
	}



	void MakeData(class AFortMission* _NeutrallyCompletedMission, class UFortMissionNeutralCompleteParams** ThisParam);
	void BreakData(class AFortMission** _NeutrallyCompletedMission);
};

// Class FortniteGame.FortObjectiveSucceededParams
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortObjectiveSucceededParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                          SucceededObjective;                                        // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortObjectiveSucceededParams");
		return ptr;
	}



	void MakeData(class AFortObjectiveBase* _SucceededObjective, class UFortObjectiveSucceededParams** ThisParam);
	void BreakData(class AFortObjectiveBase** _SucceededObjective);
};

// Class FortniteGame.FortObjectiveFailedParams
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortObjectiveFailedParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                          FailedObjective;                                           // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortObjectiveFailedParams");
		return ptr;
	}



	void MakeData(class AFortObjectiveBase* _FailedObjective, class UFortObjectiveFailedParams** ThisParam);
	void BreakData(class AFortObjectiveBase** _FailedObjective);
};

// Class FortniteGame.FortObjectiveNeutralCompleteParams
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortObjectiveNeutralCompleteParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                          NeutrallyCompletedObjective;                               // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortObjectiveNeutralCompleteParams");
		return ptr;
	}



	void MakeData(class AFortObjectiveBase* _NeutrallyCompletedObjective, class UFortObjectiveNeutralCompleteParams** ThisParam);
	void BreakData(class AFortObjectiveBase** _NeutrallyCompletedObjective);
};

// Class FortniteGame.FortToggledCursorModeParams
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UFortToggledCursorModeParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       PlayerThatToggledCursorMode;                               // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInCursorMode;                                             // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_650O[0x3];                                     // 0x0021(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortToggledCursorModeParams");
		return ptr;
	}



	void MakeData(class AFortPlayerController* _PlayerThatToggledCursorMode, bool InCursorMode, class UFortToggledCursorModeParams** ThisParam);
	void BreakData(class AFortPlayerController** _PlayerThatToggledCursorMode, bool* InCursorMode);
};

// Class FortniteGame.FortToggledOptionsMenuParams
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UFortToggledOptionsMenuParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       PlayerThatToggledOptionsMenu;                              // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInOptionsMenu;                                            // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZGV7[0x3];                                     // 0x0021(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortToggledOptionsMenuParams");
		return ptr;
	}



	void MakeData(class AFortPlayerController* _PlayerThatToggledOptionsMenu, bool Opened, class UFortToggledOptionsMenuParams** ThisParam);
	void BreakData(class AFortPlayerController** _PlayerThatToggledOptionsMenu, bool* Opened);
};

// Class FortniteGame.FortToggledEditModeParams
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UFortToggledEditModeParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       PlayerThatToggledEditMode;                                 // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInEditMode;                                               // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U29B[0x3];                                     // 0x0021(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortToggledEditModeParams");
		return ptr;
	}



	void MakeData(class AFortPlayerController* _PlayerThatToggledEditMode, bool InEditMode, class UFortToggledEditModeParams** ThisParam);
	void BreakData(class AFortPlayerController** _PlayerThatToggledEditMode, bool* InEditMode);
};

// Class FortniteGame.FortShutdownParams
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortShutdownParams : public UFortMissionEventParams
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortShutdownParams");
		return ptr;
	}



};

// Class FortniteGame.FortInitializationInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortInitializationInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortInitializationInterface");
		return ptr;
	}



	void WorldReady();
	bool NeedsWorldReady();
	void MatchStarted();
	bool IsGameImportant();
};

// Class FortniteGame.FortMissionState
// 0x0004 (FullSize[0x0244] - InheritedSize[0x0240])
class AFortMissionState : public AActor
{
public:
	unsigned char                                      UnknownData_V49M[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionState");
		return ptr;
	}



	void OnWorldReady();
	void OnMatchStarted();
};

// Class FortniteGame.FortObjectiveBase
// 0x0050 (FullSize[0x0294] - InheritedSize[0x0244])
class AFortObjectiveBase : public AFortMissionState
{
public:
	class UFortBadgeItemDefinition*                    ObjectiveRewardBadge;                                      // 0x0244(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItemDefinition*>            ItemsToGiveOnObjectiveStart;                               // 0x0248(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               bStartPlayingOnMissionStart;                               // 0x0254(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bAcceptsMissionEventsWhenFinished;                         // 0x0255(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5310[0x2];                                     // 0x0256(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       ObjectiveHandle;                                           // 0x0258(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, SaveGame, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortObjectiveRequirement> MissionRequirement;                                        // 0x0270(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HFXA[0x1];                                     // 0x0271(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsObjectiveVisible;                                       // 0x0272(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsProgressBarHidden;                                      // 0x0273(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bRelevantToSpecificTeam;                                   // 0x0274(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTeam>                RelevantTeam;                                              // 0x0275(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3MDG[0x2];                                     // 0x0276(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortPlacementActorFinderInfo               PlacementActorFinderInfo;                                  // 0x0278(0x0014) (Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortObjectiveStatus>     ObjectiveStatus;                                           // 0x028C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_832N[0x3];                                     // 0x028D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortMissionTimerComponent*                  TimerComponent;                                            // 0x0290(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortObjectiveBase");
		return ptr;
	}



	void UnpauseObjectiveTimer();
	void StopObjective(TEnumAsByte<FortniteGame_EFortObjectiveStatus> Status, const struct FString& Description, const struct FGameplayTagContainer& CompletionTags, class UFortBadgeItemDefinition* ExtraBadgeToGrant);
	bool StartPlayingObjective(const struct FFortMissionEvent& MissionEvent);
	void StartMissionNotification(const struct FLatentActionInfo& LatentInfo, class UClass* Notification, class AFortPlayerController* SpecificPlayer, const struct FText& OverrideDisplayText, class AFortPlayerPawn* OptionalPlayerPawn1, class AFortPlayerPawn* OptionalPlayerPawn2, const struct FName& OptionalActionName, class USoundBase* OptionalSound, bool bTreatAsUnique, bool bCancelActiveNotification, bool bWaitForClients);
	void SetUiVisibility(bool bInIsObjectiveVisible);
	void SetObjectiveTimer(const struct FString& FunctionName, float TimerLength, bool bStartPaused);
	void ResetObjectiveTimer();
	void PlayerStatChanged(class AFortPlayerController* OwningPlayer, const struct FName& ChangedStat, int NewValueZone, int NewValueWorld, int NewValueAccount);
	void PauseObjectiveTimer();
	void OnWorldReady();
	void OnRep_ObjectiveStatus();
	void OnRep_bIsObjectiveVisible();
	void OnMatchStarted();
	bool IsRelevantToTeam(TEnumAsByte<FortniteGame_EFortTeam> Team);
	bool IsRelevantToASpecificTeam();
	bool IsObjectiveTimerSet();
	bool IsObjectiveTimerPaused();
	bool IsActorRelevantToTeam(class AActor* Actor);
	void GrantRewardsByTag(const struct FGameplayTag& RewardTag, TEnumAsByte<FortniteGame_EFortRewardType> RewardType);
	float GetObjectiveTimerTimeRemaining();
	float GetObjectiveTimerNormalizedTime();
	struct FGuid GetMissionGuid();
	void FocusParentMission(bool bTemporaryFocus);
	void EnableTick(bool bEnabled);
	void DrawAttentionToUI();
	void ClearObjectiveTimer();
	void BlueprintPostObjectiveLoad();
	void BlueprintOnStartPlaying(class AActor* InObjectiveFocus, class AFortPawn* InObjectiveInstigator);
	void BlueprintOnObjectiveEnd(TEnumAsByte<FortniteGame_EFortObjectiveStatus> Status);
	void BlueprintOnActivated(class AActor* InObjectiveFocus, class AFortPawn* InObjectiveInstigator);
	void BlueprintHandleMissionEventNoReply(const struct FFortMissionEvent& MissionEvent);
	float BlueprintGetTimeForUI();
	struct FText BlueprintGetProgressBarText(int ProgressBarIdx);
	float BlueprintGetProgressBarPercentage(int ProgressBarIdx);
	struct FLinearColor BlueprintGetProgressBarColor(int ProgressBarIdx);
	struct FText BlueprintGetObjectiveDisplayText();
	int BlueprintGetNumProgressBars();
	void AttemptMissionSave(const struct FString& OptionalSaveName);
};

// Class FortniteGame.CustomCharacterPartModifier
// 0x0010 (FullSize[0x0250] - InheritedSize[0x0240])
class ACustomCharacterPartModifier : public AActor
{
public:
	unsigned char                                      bUsesDayPhaseChange : 1;                                   // 0x0240(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bRegisteredForDayPhaseChange : 1;                          // 0x0240(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3J7J[0x3];                                     // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AFortPlayerPawn>              FortPlayerPawnPtr;                                         // 0x0244(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TEnumAsByte<FortniteGame_EFortCustomPartType>      PartType;                                                  // 0x024C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6YNT[0x3];                                     // 0x024D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterPartModifier");
		return ptr;
	}



	void PreDestruction();
	void OnDayPhaseChanged(TEnumAsByte<FortniteGame_EFortDayPhase> CurrentDayPhase, TEnumAsByte<FortniteGame_EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	TEnumAsByte<FortniteGame_EFortCustomPartType> GetCharacterPartType();
	class AFortPlayerPawn* GetAssociatedPlayerPawn();
};

// Class FortniteGame.FortAIRootAssignmentProviderInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortAIRootAssignmentProviderInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIRootAssignmentProviderInterface");
		return ptr;
	}



	struct FFortAIAssignmentIdentifier GetRootAssignmentIdentifier();
};

// Class FortniteGame.FortAIGoalProvider
// 0x0010 (FullSize[0x002C] - InheritedSize[0x001C])
class UFortAIGoalProvider : public UObject
{
public:
	unsigned char                                      UnknownData_5BJG[0x4];                                     // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWorld*                                      World;                                                     // 0x0020(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAIAssignment*                           AssignmentOwner;                                           // 0x0024(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAIEncounterInfo*                        EncounterInfo;                                             // 0x0028(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIGoalProvider");
		return ptr;
	}



	void UpdateGoals();
	bool InitializeGoalProvider(class UWorld* ContextWorld, class UFortAIAssignment* Assignment);
	class UFortAIEncounterInfo* GetEncounterInfo();
};

// Class FortniteGame.FortAIGoalProvider_EnvQuery
// 0x0044 (FullSize[0x0070] - InheritedSize[0x002C])
class UFortAIGoalProvider_EnvQuery : public UFortAIGoalProvider
{
public:
	unsigned char                                      UnknownData_MXVA[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UEnvQuery*                                   GoalQuery;                                                 // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutomaticUpdatePeriodInSeconds;                            // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAIAssignmentIdentifier                 SpecificAssignmentContext;                                 // 0x0038(0x0020) (Edit, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      AIPawnContext;                                             // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HI7U[0x14];                                    // 0x005C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIGoalProvider_EnvQuery");
		return ptr;
	}



};

// Class FortniteGame.FortAIObjectiveInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortAIObjectiveInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIObjectiveInterface");
		return ptr;
	}



};

// Class FortniteGame.FortCarriedObject
// 0x0120 (FullSize[0x0360] - InheritedSize[0x0240])
class AFortCarriedObject : public AActor
{
public:
	unsigned char                                      UnknownData_NDHU[0xC];                                     // 0x0240(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProjectileMovementComponent*                ProjectileComp;                                            // 0x024C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R431[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCarriedObjectAttachmentInfo                HolderInfo;                                                // 0x0258(0x0024) (Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LT5Y[0x24];                                    // 0x027C(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     IndicatorRelativeOffset;                                   // 0x02A0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 Indicator;                                                 // 0x02AC(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 DefaultIndicatorColor;                                     // 0x0320(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     RelativeTranslation;                                       // 0x033C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    RelativeRotation;                                          // 0x0348(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bPickupOnTouch;                                            // 0x0354(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTeam>                Team;                                                      // 0x0355(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TFTY[0x2];                                     // 0x0356(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ABuildingFlagSpawn*                          SpawnPointActor;                                           // 0x0358(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P8HW[0x4];                                     // 0x035C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCarriedObject");
		return ptr;
	}



	void ReturnToSpawnPoint();
	void OnRep_HolderInfo(struct FCarriedObjectAttachmentInfo* PreviousInfo);
	class AActor* GetHoldingActor();
};

// Class FortniteGame.FortWeatherAugment
// 0x0018 (FullSize[0x0378] - InheritedSize[0x0360])
class AFortWeatherAugment : public AFortCarriedObject
{
public:
	struct FGameplayTagContainer                       WeatherTags;                                               // 0x0360(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWeatherAugment");
		return ptr;
	}



	struct FGameplayTagContainer GetWeatherTags();
};

// Class FortniteGame.FortPlayerController
// 0x0780 (FullSize[0x0C20] - InheritedSize[0x04A0])
class AFortPlayerController : public APlayerController
{
public:
	unsigned char                                      UnknownData_WFZ5[0x4];                                     // 0x04A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bFailedToRespawn : 1;                                      // 0x04A4(0x0001) BIT_FIELD (Net, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bIsDisconnecting : 1;                                      // 0x04A4(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bIsLateJoining : 1;                                        // 0x04A4(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bHasInitiallySpawned : 1;                                  // 0x04A4(0x0001) BIT_FIELD (Net, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bAssignedStartSpawn : 1;                                   // 0x04A4(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bReadyToStartMatch : 1;                                    // 0x04A4(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bClientPawnIsLoaded : 1;                                   // 0x04A4(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K0GY[0x3];                                     // 0x04A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     SpawnLoc;                                                  // 0x04A8(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int                                                NumPreviousSpawns;                                         // 0x04B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBlueprintReadyCheckCompleted;                            // 0x04B8(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YOEI[0x48];                                    // 0x04C4(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortPlayerPawn*                             MyFortPawn;                                                // 0x050C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasClientFinishedLoading;                                 // 0x0510(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bHasServerFinishedLoading;                                 // 0x0511(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KDV3[0x2];                                     // 0x0512(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeStartedWaiting;                                        // 0x0514(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeFinishedNavigationBuild;                               // 0x0518(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     PendingSpectatorLocation;                                  // 0x051C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       ActorUnderReticle;                                         // 0x0528(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                              LastActiveTime;                                            // 0x0530(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FTI8[0x60];                                    // 0x0534(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InteractDistance;                                          // 0x0594(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InteractHighlightDistance;                                 // 0x0598(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InteractTraceExtent;                                       // 0x059C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastInteractTraceTime;                                     // 0x05A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InteractMultiplierForActiveInteraction;                    // 0x05A4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WXPI[0xD];                                     // 0x05A8(0x000D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bWantsToSprint;                                            // 0x05B5(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bHoldingSprint;                                            // 0x05B6(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bSprintToggleable;                                         // 0x05B7(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bMovementDisabledDueToCancellableAction;                   // 0x05B8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsPlayerActivelyMoving;                                   // 0x05B9(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PZRD[0x2];                                     // 0x05BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                InMovementCancellableAction;                               // 0x05BC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastMoveForwardTime;                                       // 0x05C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSetFirstPersonCamera;                                    // 0x05C4(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KC21[0x20];                                    // 0x05D0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortIndicatorManager*                       IndicatorManager;                                          // 0x05F0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUiChoiceCompleted;                                       // 0x05F4(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MENH[0x74];                                    // 0x0600(0x0074) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsInQuickToggleCursorMode;                                // 0x0674(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bDragDropPending;                                          // 0x0675(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bSuppressEventNotifications;                               // 0x0676(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9773[0x5];                                     // 0x0677(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastSpotTime;                                              // 0x067C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AFortMarkActor>>       CurrentMarks;                                              // 0x0680(0x000C) (ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_49O0[0x44];                                    // 0x068C(0x0044) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortGameplayAbility*                        PreviewAbility;                                            // 0x06D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAIDirectorDebugInfo                        IntensityGraphInfo;                                        // 0x06D4(0x0020) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FAIDirectorDebugInfo                        PIDValuesGraphInfo;                                        // 0x06F4(0x0020) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FAIDirectorDebugInfo                        PIDContributionsGraphInfo;                                 // 0x0714(0x0020) (Net, RepNotify, NativeAccessSpecifierPublic)
	class AFortCombatManager*                          CombatManager;                                             // 0x0734(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAIDirectorDataManager*                  AIDirectorDataManager;                                     // 0x0738(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMusicManager*                           MusicManager;                                              // 0x073C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PH88[0x88];                                    // 0x0740(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInputComponent*                             BuildPreviewModeInputComponent;                            // 0x07C8(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingPlayerPrimitivePreview*             BuildPreviewMarker;                                        // 0x07CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8LKW[0x80];                                    // 0x07D0(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ABuildingActor*                              TargetedBuilding;                                          // 0x0850(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ContextualConversionClass;                                 // 0x0854(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class USoundBase>                        StartRepairSound;                                          // 0x0858(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class USoundBase>                        StartUpgradeSound;                                         // 0x0870(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingActor*>                      HighlightedPrimaryBuildings;                               // 0x0888(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ABuildingActor*>                      HighlightedInteractionBuildings;                           // 0x0894(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABuildingActor>               HighlightedPrimaryBuilding;                                // 0x08A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABuildingActor>               HighlightedInteractBuilding;                               // 0x08A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TAssetPtr<class UMaterialInterface>                BuildPreviewMarkerParentMaterial;                          // 0x08B0(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    BuildPreviewMarkerMID;                                     // 0x08C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      BuildPreviewRotationIterations;                            // 0x08CC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HYH9[0x3];                                     // 0x08CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bBuildPreviewMirrored : 1;                                 // 0x08D0(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bBuildFree : 1;                                            // 0x08D0(0x0001) BIT_FIELD (Net, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0RPV[0x3];                                     // 0x08D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortCostInfoTypes>       CurrentCostInfoType;                                       // 0x08D4(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ICOW[0x3];                                     // 0x08D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CurrentBuildableClass;                                     // 0x08D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      PreviousBuildableClass;                                    // 0x08DC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortResourceLevel>       CurrentResourceLevel;                                      // 0x08E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortResourceType>        CurrentResourceType;                                       // 0x08E1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WN5G[0x2];                                     // 0x08E2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLastBuildableState                         LastBuildableStateData[0xC];                               // 0x08E4(0x0090) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRecentDamagedBuildingInfo                  LastRecentlyDamagedBuilding;                               // 0x0974(0x0010) (Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortDamageNumberInfo>               QueuedDamageNumbers;                                       // 0x0984(0x000C) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class AFortDamageNumbersActor*                     DamageNumbersActor;                                        // 0x0990(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                             EditModeInputComponent;                                    // 0x0994(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                            EditBuildingActor;                                         // 0x0998(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EditModeDistance;                                          // 0x099C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LastBuildPreviewGridSnapLoc;                               // 0x09A0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    LastBuildPreviewGridSnapRot;                               // 0x09AC(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class AFortQuickBars*                              QuickBars;                                                 // 0x09B8(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0N3I[0x38];                                    // 0x09BC(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             PinnedSchematics;                                          // 0x09F4(0x000C) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WOEX[0x20];                                    // 0x0A00(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bAutoEquipBetterItems : 1;                                 // 0x0A20(0x0001) BIT_FIELD (Net, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IY2I[0x3];                                     // 0x0A21(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortInventory*                              WorldInventory;                                            // 0x0A24(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCombinedInventoryProxy*                 CombinedWorldAndSharedInventory;                           // 0x0A28(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0TE8[0x38];                                    // 0x0A2C(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHasInitializedWorldInventory;                             // 0x0A64(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bHasInitializedHeroInventory;                              // 0x0A65(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bAccountInventoryWasUpdated;                               // 0x0A66(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsSavingGadgetLoadout;                                    // 0x0A67(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1FUY[0x3C];                                    // 0x0A68(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortClientBotManager*                       BotManager;                                                // 0x0AA4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6ORR[0x3C];                                    // 0x0AA8(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortRewardReport                           LatestRewardReport;                                        // 0x0AE4(0x0030) (Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	class UFortQuestManager*                           QuestManager;                                              // 0x0B14(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortUpdatedObjectiveStat>           UpdatedObjectiveStats;                                     // 0x0B18(0x000C) (Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RLU1[0x18];                                    // 0x0B24(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             WorldFavorites;                                            // 0x0B3C(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	class UStatManager*                                StatManager;                                               // 0x0B48(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHeartbeatManager*                           HeartbeatManager;                                          // 0x0B4C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortStatEventManager*                       StatEventManager;                                          // 0x0B50(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortPersistentGameplayStatContainer        CachedPersistentGameplayStats;                             // 0x0B54(0x000C) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U2DC[0x8];                                     // 0x0B60(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMcpProfileGroup*                            McpProfileGroup;                                           // 0x0B68(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileAccount*                      MainMcpProfile;                                            // 0x0B6C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bTutorialCompleted : 1;                                    // 0x0B70(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M2HU[0x3];                                     // 0x0B71(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShouldReceiveCriticalMatchBonus;                          // 0x0B74(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RBA2[0x3];                                     // 0x0B75(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SynchronizingWithMcpCount;                                 // 0x0B78(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LocationUnderReticle;                                      // 0x0B7C(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bInfiniteAmmo : 1;                                         // 0x0B88(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bNoCoolDown : 1;                                           // 0x0B88(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bInfiniteDurability : 1;                                   // 0x0B88(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bCheatGhost : 1;                                           // 0x0B88(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bCheatFly : 1;                                             // 0x0B88(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bEnableShotLogging : 1;                                    // 0x0B88(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bForceNakedOutfits : 1;                                    // 0x0B88(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UU0B[0x7];                                     // 0x0B89(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                OverriddenBackpackSize;                                    // 0x0B90(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           AimHelpMode;                                               // 0x0B94(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortJumpStaminaCost>     JumpStaminaCost;                                           // 0x0B98(0x0001) (Net, ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZH4Z[0x3];                                     // 0x0B99(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CameraPrototypeName;                                       // 0x0B9C(0x0008) (Net, ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7P4R[0x7C];                                    // 0x0BA4(0x007C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerController");
		return ptr;
	}



	void ToggleStats();
	void ToggleMirrorBuildPreview();
	void ToggleInventory();
	void ToggleFullScreenMap();
	void SuppressEventNotifications(bool bSuppress);
	void Suicide();
	bool StartReadyCheck(const struct FText& QueryText, const struct FText& YesText, const struct FText& NoText, float PercentageToPass);
	class AFortEmitterCameraLensEffectDirectional* SpawnCameraLensEffectDirectional(class UClass* LensEffectEmitterClass, class AFortPawn* DamageDealer, const struct FHitResult& HitInfo);
	void SetShowHUD(bool bNewShowHUD);
	void SetInputYawScale(float InInputYawScale);
	void SetInputPitchScale(float InInputPitchScale);
	void SetCinematicOverrideClass(class UClass* OverrideCameraClass);
	void ServerUpgradeBuildingActor(class ABuildingActor* BuildingActorToUpgrade, int NewUpgradeLevel);
	void ServerUIChoiceCompleted(int ChosenItem, int MenuIdentifier);
	void ServerTriggerCombatEvent(TEnumAsByte<FortniteGame_EFortCombatEvents> TriggeredEvent, float HeatMultiplier);
	void ServerTouchActiveTime();
	void ServerTeleportToReticle(const struct FVector& TeleportLocation);
	void ServerSuicide();
	void ServerStartPIDValueGraphing();
	void ServerStartPIDContributionsGraphing();
	void ServerStartIntensityGraphing();
	void ServerSpotActor(class AActor* NewlySpottedActor);
	void ServerSpawnMark(class AActor* ActorToAttachTo, const struct FVector& AttachOffset);
	void ServerSpawnInventoryDrop(const struct FGuid& ItemGuid, int Count);
	void ServerSetupWeakSpotsOnBuildingActor(class ABuildingSMActor* BuildingActor, const struct FFortCrackEffectData& CrackData);
	void ServerSetTimeOfDay(float TimeOfDay);
	void ServerSetReadyToContinue(bool bReady, TEnumAsByte<FortniteGame_EFortGameplayState> RequestedState, bool bTryStartTimer);
	void ServerSetPlayerStatus(uint32_t PlayerStatus);
	void ServerSetPartyOwner(const struct FUniqueNetIdRepl& PartyOwnerUniqueId);
	void ServerSetMarkText(class AFortMarkActor* MarkActor, const struct FString& MarkText);
	void ServerSetInvincibleDueToUI(bool bInvincible);
	void ServerSetInventoryStateValue(const struct FGuid& ItemGuid, const struct FFortItemEntryStateValue& StateValue);
	void ServerSetHero(const struct FString& NewHeroID);
	void ServerSetClientHasFinishedLoading(bool bInHasFinishedLoading);
	void ServerSetAutoEquipBetterItems(bool bAutoEquip);
	void ServerSetAnalyticsIds(const struct FString& SessionId, const struct FString& UserId);
	void ServerSayTeam(const struct FString& Msg);
	void ServerSay(const struct FString& Msg);
	void ServerSaveLoadoutData(const struct FString& NewHeroID, const struct FSelectedClassAbilityKits& ForceSelectedAbilities);
	void ServerReturnToMainMenu();
	void ServerReturnToLobby();
	void ServerRequestGameplayAction(TEnumAsByte<FortniteGame_EFortRequestedGameplayAction> RequestedAction);
	void ServerReplyToReadyCheck(bool bReady);
	void ServerRepairBuildingActor(class ABuildingSMActor* BuildingActorToRepair);
	void ServerRemoveInventoryStateValue(const struct FGuid& ItemGuid, TEnumAsByte<FortniteGame_EFortItemEntryState> StateValueType);
	void ServerRemoveInventoryItem(const struct FGuid& ItemGuid, int Count, bool bForceRemoveFromQuickBars);
	void ServerRemoveAdminPlayer(const struct FUniqueNetIdRepl& PlayerToAdmin);
	void ServerReleaseInventoryItemKey(TEnumAsByte<FortniteGame_EFortQuickBars> InQuickBar, int Slot);
	void ServerReconcileGiftsFromPlayer(const struct FString& PlayerName, bool bAccept);
	void ServerReadyToStartMatch();
	void ServerPingMinimap(const struct FVector& WorldLocation, const struct FLinearColor& PingColor);
	void ServerOnBannerUpdate();
	void ServerNotificationIsFinished(const struct FGuid& NotificationID);
	void ServerModifyStat(const struct FName& StatName, int Amount, TEnumAsByte<FortniteGame_EStatMod> ModType, bool bForceStatSave);
	void ServerModDurability(const struct FGuid& ItemGuid, float DurabilityMod, bool bForceSet);
	void ServerKillAllAIPawnsAroundPlayer();
	void ServerKickPlayer(const struct FUniqueNetIdRepl& PlayerToKick, const struct FText& Reason);
	void ServerItemWillBeDestroyed(const struct FGuid& DestroyedItemGuid, int Count);
	void ServerHandleMissionEvent_ToggledOptionsMenu(class AFortPlayerController* PlayerThatToggledOptionsMenu, bool bOpened);
	void ServerHandleMissionEvent_ToggledEditMode(class AFortPlayerController* PlayerThatToggledEditMode, bool bOpened);
	void ServerHandleMissionEvent_ToggledCursorMode(class AFortPlayerController* PlayerThatToggledCursorMode, bool bOpened);
	void ServerGrantAdminPlayer(const struct FUniqueNetIdRepl& PlayerToAdmin);
	void ServerGiftInventoryItemToOtherPlayer(const struct FGuid& ItemGuid, const struct FUniqueNetIdRepl& PlayerID, int Quantity);
	void ServerForceProfileQuery();
	void ServerExecuteInventoryItem(const struct FGuid& ItemGuid);
	void ServerEndEditingBuildingActor(class ABuildingSMActor* BuildingActorToStopEditing);
	void ServerEmote(const struct FString& Msg);
	void ServerEditBuildingActor(class ABuildingSMActor* BuildingActorToEdit, class UClass* NewBuildingClass, int RotationIterations, bool bMirrored);
	void ServerDropCarriedObject();
	void ServerDisassembleInventoryItem(const struct FGuid& ItemGuid);
	void ServerCreateCombatManager();
	void ServerCreateBuildingActor(const struct FBuildingClassData& BuildingClassData, const struct FVector_NetQuantize10& BuildLoc, const struct FRotator& BuildRot, bool bMirrored);
	void ServerCreateAIDirectorDataManager();
	void ServerCraftSchematic(const struct FString& ItemId);
	void ServerClientPawnLoaded(bool bIsPawnLoaded);
	void ServerCheatAll(const struct FString& Msg);
	void ServerCheat(const struct FString& Msg);
	void ServerBroadcastUIFeedbackEvent(const struct FName& EventName);
	void ServerBeginEditingBuildingActor(class ABuildingSMActor* BuildingActorToEdit);
	void ServerBanPlayer(const struct FUniqueNetIdRepl& PlayerToBan);
	void ServerAttemptUnpinSchematic(const struct FString& ItemId, bool bSave);
	void ServerAttemptPinSchematic(const struct FString& ItemId, bool bSave);
	void ServerAttemptInteract(class AActor* ReceivingActor, class UPrimitiveComponent* InteractComponent, TEnumAsByte<FortniteGame_ETInteractionType> InteractType);
	void SendTextNotification(const struct FText& NotificationText, float DisplayTime);
	void SendMessage(const struct FString& Message, const struct FName& Type, class AActor* Source);
	void SayTeam(const struct FString& Msg);
	void Say(const struct FString& Msg);
	void ResetInputRotationScale();
	void RemoveItemFromQuickBars(class UFortItemDefinition* ItemDefinition);
	void PrintDebugInfo();
	void PlaySpatialSound(class USoundBase* Sound, const struct FVector& Location);
	void OpenChoiceUI(const struct FChoiceData& ChoiceData);
	void OnRep_UpdatedObjectiveStats();
	void OnRep_QuickBar();
	void OnRep_PinnedSchematics();
	void OnRep_PIDValuesGraphInfo();
	void OnRep_PIDContributionsGraphInfo();
	void OnRep_LatestRewardReport();
	void OnRep_IntensityGraphInfo();
	void OnRep_CombatManager();
	void OnRep_CheatMovement();
	void OnRep_bHasServerFinishedLoading();
	void LocalOnBlueprintEdit(class ABuildingSMActor* EditedActor);
	bool IsUsingFirstPersonCamera();
	bool IsRequirementsMet(const struct FFortRequirementsInfo& InRequirements);
	bool IsClientBot();
	void HandleWorldInventoryLocalUpdate();
	void GivePlayerAmmo(int AmmoCount);
	class UFortQuestManager* GetQuestManager();
	class AFortAIDirectorDataManager* GetAIDirectorDataManager();
	class AActor* GetActorUnderReticle();
	float GetAccountLevelProgression();
	int GetAccountLevel();
	void ForceUpdateQuickbar(TEnumAsByte<FortniteGame_EFortQuickBars> QuickbarToRefresh);
	void Emote(const struct FString& Msg);
	void DumpHomebaseRatingInfo();
	void ClientZoneSay(const struct FString& PlayerName, const struct FString& Message);
	void ClientUpdateRichPresence(TEnumAsByte<FortniteGame_ERichPresenceStateChange> RichPresenceChange, bool bImportant);
	void ClientUnhideTutorialWidget(const struct FName& WidgetName);
	void ClientUnableToPlaceGenerator();
	void ClientTriggerUIFeedbackEvent(const struct FName& EventName);
	void ClientStopUIFeedbackEvent(const struct FName& EventName);
	void ClientStayWithParty(bool bStayWithParty);
	void ClientSetSpectatorCamera(const struct FVector& CameraLocation, const struct FRotator& CameraRotation);
	void ClientSetInviteFlags(const struct FJoinabilitySettings& Settings);
	void ClientSetActionMappingEnabled(const struct FName& ActionName, bool bEnabled);
	void ClientSendTutorialNotification(const struct FFortTutorialNotificationData& NewTutorialNotification);
	void ClientSendEventNotification(const struct FName& NotificationName, class UObject* NotificationParameter, bool bRemoveIfActive);
	void ClientSendClientNotification(const struct FFortClientNotificationData& NewClientNotification);
	void ClientRequestReadyCheck(const struct FText& QueryText, const struct FText& YesText, const struct FText& NoText);
	void ClientRegisterWithParty();
	void ClientReadyCheckComplete(bool bPassed);
	void ClientPingMinimap(const struct FVector& WorldLocation, const struct FLinearColor& PingColor);
	void ClientOpenChoiceUI(const struct FChoiceData& ChoiceItems);
	void ClientOnGenericPlayerInitialization();
	void ClientHideTutorialWidget(const struct FName& WidgetName);
	void ClientHandleNotification(const struct FString& TypeStr, const struct FString& PayloadStr);
	void ClientGivePlayerLocalAccountItem(class UFortAccountItemDefinition* ItemDefinition, int Count);
	void ClientForceProfileQuery();
	void ClientForceCancelBuildingTool();
	void ClientExecuteInventoryItem(const struct FGuid& ItemGuid, float Delay);
	void ClientDrawAttentionToUI(const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle);
	void ClientClearDisabledActionMappings();
	void ClientCancelCrafting();
	void ClientAddHeroSpecialization(class UFortHeroSpecialization* NewSpecialization);
	void CheatAll(const struct FString& Msg);
	void Cheat(const struct FString& Msg);
	void ActivateSlot(TEnumAsByte<FortniteGame_EFortQuickBars> InQuickBar, int Slot, float AcivateDelay);
};

// Class FortniteGame.FortCheatManager
// 0x004C (FullSize[0x00A8] - InheritedSize[0x005C])
class UFortCheatManager : public UCheatManager
{
public:
	TArray<struct FSpawnPickupEntry>                   SpawnablePickups;                                          // 0x005C(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F1DM[0x8];                                     // 0x0068(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bDebugInteractTrace : 1;                                   // 0x0070(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDebugPickupSpline : 1;                                    // 0x0070(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDebugFloorsOnMiniMap : 1;                                 // 0x0070(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bEnableScoreboard : 1;                                     // 0x0070(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDebugBounceCurve : 1;                                     // 0x0070(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDebugBeautyMode : 1;                                      // 0x0070(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDebugStructuralSupportSystem : 1;                         // 0x0070(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bInfiniteStamina : 1;                                      // 0x0070(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bShowGameDifficultyHUD : 1;                                // 0x0071(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bShowIntensityHUD : 1;                                     // 0x0071(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bShowSpawnPointsHUD : 1;                                   // 0x0071(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bShowMaxAIHUD : 1;                                         // 0x0071(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bUnlimitedHealth : 1;                                      // 0x0071(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bFreezeAILOD : 1;                                          // 0x0071(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bForceAILOD : 1;                                           // 0x0071(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XP1J[0x2];                                     // 0x0072(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortAILODLevel>          ForcedAILODValue;                                          // 0x0074(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R53F[0x3];                                     // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TAssetPtr<class UBuildingTextureData>              TransparentTextureData;                                    // 0x0078(0x0018) (Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8WJE[0x18];                                    // 0x0090(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCheatManager");
		return ptr;
	}



	void WriteLootReport();
	void WannaGun();
	void ViewStuck();
	void UpdateHomebaseGameplayEffects();
	void UnlockAllZones();
	void UnforceAILODs();
	void UncoverMap();
	void UnbanPlayer(const struct FString& PlayerName);
	void TutorialRemoveHighlight(const struct FName& Highlight);
	void TutorialRemoveHidden(const struct FName& Hidden);
	void TutorialListHighlights();
	void TutorialListHidden();
	void TutorialListAll();
	void TutorialAddHighlight(const struct FName& Highlight);
	void TutorialAddHidden(const struct FName& Hidden);
	void TriggerOutOfStaminaFeedback();
	void ToggleWalkOnWalls();
	void ToggleVoiceDebug();
	void ToggleUtilitiesGraph();
	void ToggleUnlimitedHealth();
	void ToggleTreeVisibility();
	void ToggleSpawnPointsHUD();
	void ToggleSpawnPATrolls();
	void ToggleShotLogging();
	void TogglePlayerNames();
	void TogglePIDValuesGraph();
	void TogglePIDContributionsGraph();
	void TogglePickupSpline();
	void ToggleNoCoolDown();
	void ToggleMaxAIHUD();
	void ToggleLogCharacterCustomization();
	void ToggleInvincibleCornerstones();
	void ToggleInteractTrace();
	void ToggleIntensityHUD();
	void ToggleIntensityGraph();
	void ToggleInfiniteStamina();
	void ToggleInfiniteDurability();
	void ToggleInfiniteAmmo();
	void ToggleIndestructibleKeep();
	void ToggleGameDifficultyHUD();
	void ToggleFreezeAILOD();
	void ToggleFloorsOnMiniMap();
	void ToggleFactorGraph();
	void ToggleEncounterEQSDebug();
	void ToggleDrawTurnTransitionDebug();
	void ToggleDrawTargetSelectionDebugByClass(class UClass* TargetSelectionDebugSourceClass);
	void ToggleDrawTargetSelectionDebug();
	void ToggleDrawRunVariationDebug();
	void ToggleCombatGraph();
	void ToggleBuildingActorsTransparency();
	void ToggleBuildAnimCheat();
	void ToggleAISpawning();
	void ToggleAISpawnCap();
	void ToggleAIDirectorLogging();
	void ToggleAIDespawning();
	void ToggleAIAnim();
	void TestUpgradeOutpostItem(const struct FString& ItemTemplateId);
	void TestStun(float StunStime);
	void TestSetOutpostDefenseActive(bool bActive);
	void TestOutpostUI();
	void TestLockWorld(const struct FString& WUID, bool bLock);
	void TestLeaveGame();
	void TestKnockback(float KnockbackMagnitude, float KnockbackZAngle);
	void TestJoin();
	void TestFogSave();
	void TestFogReplicate();
	void TestFogLoad();
	void TestDisconnect();
	void TestChangePartySize(int NewSize);
	void TestChangePartyPrivacy(bool bPrivate, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly);
	void TestCancelLobby();
	void TeleportToMissionActor();
	void TeleportToLocation(float X, float Y, float Z);
	void TeleportToActor(const struct FString& ClassOrInstanceName);
	void SwitchTeam();
	void SwitchHeroToClass(const struct FString& NewHeroID);
	void StopDummyDebugEncounter();
	class AFortPawn* SpawnPawn(const struct FString& PawnType);
	void SpawnGuardians();
	void SpawnAIGroupWithMutator(const struct FString& SpawnGroupName, const struct FString& MutatorName, int DummyInt);
	void SpawnAIGroupFromExternalSpawner(const struct FString& SpawnGroupName);
	void SpawnAIGroup(const struct FString& SpawnGroupName);
	void SimulateLootDrops();
	void SimulateLoot(const struct FName& TierGroup, int LootTier);
	void SetWorldLevel(float Level);
	void SetWorldDaysElapsed(float days);
	void SetRespawnTimerOverride(float TimeUntilRespawn);
	void SetReplStat(TEnumAsByte<FortniteGame_EFortReplicatedStat> Stat, int Amount);
	void SetPvPStalemateTime(int NumSeconds);
	void SetPvPRoundTime(int NumSeconds, int CriticalThreshold);
	void SetMaxClouds(int MaxClouds);
	void SetJumpStaminaCost(const struct FName& ModeName);
	void SetInteractionDistances(float InteractionDistance, float InteractionHighlightDistance);
	void SetInteractExtent(float Extent);
	void SetHealthPercent(float Percent);
	void SetGameStat(const struct FString& StatName, int Amount);
	void SetGameDifficultyOverride(float GameDifficultyOverrideValue);
	void SetEncounterTopUtilityPercentages(const struct FString& UtilitiesAndPercentages);
	void SetEncounterSpawnPointsCurve(const struct FString& CurveName);
	void SetEncounterSpawnPointsCap(int SpawnPointsCap);
	void SetEncounterSimulatedNumberOfPlayers(int NumPlayers);
	void SetEncounterGraphsHistoryLength(int Seconds);
	void SetEncounterDirections(TArray<TEnumAsByte<FortniteGame_EFortEncounterDirection>> Directions);
	void SetCurrentEncounterToDebug(int EncounterIndex);
	void SetCullValues(float DefaultCullObjectSize, float DefaultCullDistance, float MinCullObjectSize, float MinCullDistance, float MaxCullObjectSize, float MaxCullDistance);
	void SetCombatGraphHistoryLength(int Seconds);
	void SetCapturePercentage(float NewCapturePercentage);
	void SetCameraPrototype(const struct FName& ProtoName);
	void SetCameraFOVMultiplier(float Multiplier);
	void SetCameraDistanceMultiplier(float XMultiplier, float YMultiplier, float ZMultiplier);
	void SetBuildAnimCheatStartDelay(float MaxRandDelay);
	void SetBuildAnimCheatSpeedMultiplier(float NewMultiplier);
	void SetBuildAnimCheatHeight(float NewHeight);
	void SetBTProbability(float Propability);
	void SetBaseScaleLevelOverride(float BaseScaleLevelOverrideValue);
	void SetAimMode(uint32_t Mode);
	void SetActionMappingEnabled(const struct FName& Action, bool bEnabled);
	void SendQuestEvent(const struct FName& Type, const struct FName& TargetTag, const struct FName& SourceTag, const struct FName& ContextTag);
	void SendMissionEvent(const struct FString& MissionEventName);
	void SendCheatNotifications(int NumOfNotifications);
	void RunMonteCarlo(int X, int Y, const struct FString& TileGroup, int NumIterations);
	void ResetMaxAITracking();
	void ResetEncounterWave();
	void ReRandomizeTiles();
	void ReloadUMG();
	void ReloadUI();
	void ReInitHUD();
	void RegenerateZoneMissionsWithDifficultyLevel(bool bUseNewMissionGeneration, float DifficultyLevelOverride);
	void RegenerateZoneMissions(bool bUseNewMissionGeneration);
	void RefreshTheaters();
	void PrintTileWorld();
	void PrintShotReport();
	void OpenClassSelectScreen();
	void MyTownToggleFriendsHomeBase(const struct FString& FriendsAccountId, const struct FString& FriendsName);
	void MyTownToggleBetweenKeepAndManor(bool bNowShowKeep);
	void MyFortUpgradeBuilding(const struct FString& BuildingId);
	void MyFortTestLastRatings(const struct FString& BuildingId, int LastMaxLevel, int LastMaxRating);
	void MyFortTestDefaultHeroId();
	void MyFortSetChecksDisabled(bool bSet);
	void MyFortRequestUpdate();
	void MyFortGrantAllResources(int Amount);
	void MyFortFillWarehouse(TEnumAsByte<FortniteGame_EFortPersistentResources> ResourceType);
	void MyFortConsumeResources(int Amount, TEnumAsByte<FortniteGame_EFortPersistentResources> ResourceType);
	void MyFortConsumeAllResources(int Amount);
	void MyFortCollectAccumulatedResources(TEnumAsByte<FortniteGame_EFortPersistentResources> ResourceType);
	void MyFortAddWorker();
	void MyFortAddHeroSlot();
	void ModItemDurability(float InValue);
	void MissionForceSuccess(const struct FString& MissionName);
	void MissionForcePrimarySuccess();
	void MissionForceFailure(const struct FString& MissionName);
	void McpUpgradeItem(const struct FString& ItemToUpgrade);
	void McpResetPersistence();
	void McpRefreshProfile();
	void McpRefreshCatalog();
	void McpRedeemPurchases();
	void McpRecycleItem(const struct FString& ItemToRecycle);
	void McpOpenCardPack(const struct FString& CardPackItemId, int SelectionIdx);
	void McpLogout();
	void McpHostGrantAllPlayersSchematic(const struct FString& SchematicId);
	void McpHostGetPlayers();
	void McpHostGetAllPlayerCachedPersistence();
	void McpHeroRename(const struct FString& OldHeroName, const struct FString& NewHeroName);
	void McpHeroDelete(const struct FString& HeroName);
	void McpHeroCreate(const struct FString& HeroType, const struct FString& Name);
	void McpHeroAssignToBuilding(const struct FString& HeroName, const struct FString& BuildingType, int SlotIdx);
	void McpGrantSchematicXP(int Amount);
	void McpGrantPersonnelXP(int Amount);
	void McpGrantItem(const struct FString& ItemId);
	void McpGrantCurrency(int Amount);
	void McpGrantAllSchematics();
	void McpGetVersion();
	void McpGetSchematicXP();
	void McpGetPersonnelXP();
	void McpGetHexMission();
	void McpGetCurrencyAmount();
	void McpGetCachedPersistence();
	void McpEquipCharCosmetic(const struct FString& CharacterId, const struct FString& CosmeticId, int CosmeticType);
	void McpEarnScore(int ScoreAmount);
	void McpCompleteHexMission();
	void McpCompleteCurrentPrimaryMission(int NumMissionPoints);
	void McpCheat();
	void McpApplyAlteration(const struct FString& Schematic, const struct FString& Alteration);
	void LoadMissionGenerator(const struct FString& GeneratorName);
	void LoadMission(const struct FString& MissionName);
	void ListWeapons();
	void ListTraps();
	void ListSpawnGroups();
	void ListMissions();
	void ListMissionGenerators();
	void ListGadgets();
	void ListEnemyMutators();
	void ListEmotes();
	void ListDecorations();
	void ListCheats();
	void ListBannedPlayers();
	void ListAmmo();
	void ListAIUtilities();
	void ListActiveEncounters();
	void KillPawns(class UClass* aClass);
	void GiveWood(int Amount);
	void GiveWeapons(const struct FName& Tag);
	void GiveWeapon(const struct FString& WeaponName, int RequestedLevel);
	void GiveUsefulThings(int NumOfUsefulThings);
	void GiveTrap(const struct FString& TrapName, int RequestedLevel);
	void GiveStone(int Amount);
	void GiveSpecificItem(const struct FString& ItemPath, int ItemLevel);
	void GiveSBA(const struct FString& StrategicBuildingName);
	void GiveResources(int Amount);
	void GiveMetal(int Amount);
	void GiveHeroSpecialization(const struct FString& SpecializationName);
	void GiveGoodWeapons();
	void GiveGadgets(const struct FString& GadgetName, int Quantity, int ItemLevel);
	void GiveGadget(const struct FString& GadgetName, int ItemLevel);
	void GiveFakeBuildingGameplayEffect(const struct FString& BuildingTemplateId, int Level);
	void GiveCheatInventory();
	void GiveBluGlo(int Amount);
	void GiveAmmo(const struct FString& AmmoNameAndAmmount);
	void GiveAllWeapons();
	void GiveAllTraps(int NumItems);
	void GiveAllShotguns();
	void GiveAllRifles();
	void GiveAllPistols();
	void GiveAllMelee();
	void GiveAllIngredients(int NumIngredients);
	void GiveAllDecorations();
	void GiveAllConsumables(int NumItems);
	void GetWTFRotations();
	void GetWorldLockStatus(const struct FString& WUID);
	void GetWorldLevel();
	void GetWorldDifficulty();
	void GetReplStat(TEnumAsByte<FortniteGame_EFortReplicatedStat> Stat);
	void GetGameStat(const struct FString& StatName);
	void GetFocusedMissionInfo();
	void GetAllReplStats();
	void GeneratePolysInPathingRange(float MaxDistance, float MinDistance);
	void ForceShowScoreboard();
	void ForceSetHeroRemoteCharacter(int PartyMemberIndex, bool bEnabled);
	void ForceSaveWorld(const struct FString& SaveFilename);
	void ForceSaveMissionStateAndWorld(const struct FString& SaveFilename);
	void ForceNakedOutfit();
	void ForceHeroType(const struct FString& HeroPersistentName);
	void ForceAILODs(TEnumAsByte<FortniteGame_EFortAILODLevel> inForcedAILODValue);
	void FakeZoneScoreboard();
	void ExecuteNewMissionGeneration(float DifficultyLevel, const struct FString& GeneratorName);
	void EncounterTopUtilityPercentages();
	void EncounterSpawnProbabilities();
	void EncounterSetDifficultyLevel(float NewDifficulty);
	void EncounterInitialUtilities();
	void EncounterCurrentUtilities();
	void EnableNewCustomizationPanel(bool bEnable);
	void EnableAltKeybinds(bool bEnable);
	void DumpGameStats(const struct FString& FilterName);
	void DumpAllActorsWithAssetTags();
	void DumpActorsWithAssetTags(const struct FString& TagList);
	void DumpActiveGameplayEffects();
	void DisableAI();
	void DeleteWorld(const struct FString& WorldName);
	void DebugUseDedicatedServer(bool bUse);
	void DebugThisAI();
	void DebugStructuralSupport();
	void DebugRifts();
	void DebugLoadingScreen(const struct FString& MissionGen);
	void DebugKickPlayerDueToInactivity();
	void DebugHotSpots();
	void DebugHideLoadingScreen();
	void DebugForceEnsure();
	void DebugBuildingDetection();
	void DebugAttributeModifiers();
	void DebugAttributeClear();
	void DebugAttribute(struct FString* Attribute);
	void DebugAbilityTags();
	void CycleTheaterDisplayed();
	void CycleEncounterEQSQueryToDebug();
	void CycleCurrentEncounterToDebug();
	void CoverMap();
	void ConstructTileWorld(int MaxTiles, int X, int Y);
	void ClearRespawnTimer();
	void ClearKeepSave();
	void ClearEncounterSpawnPointsCurve();
	void ClearEncounterSpawnPointsCap();
	void ClearEncounterSimulatedNumberOfPlayers();
	void ClearBannedPlayers();
	void CheatScript(const struct FString& ScriptName);
	void BuildWith(const struct FString& ResourceTypeAndOrLevel);
	void BuildFree();
	void BounceContainer();
	void BeautyMode();
	void BanPlayer(const struct FString& PlayerName);
	void Badass();
	void BackpackSetSize(int Size);
	void ApplyWeaponAlteration(const struct FString& AlterationName);
	void AllowRespawn();
};

// Class FortniteGame.FortClientBotManager
// 0x00CC (FullSize[0x00E8] - InheritedSize[0x001C])
class UFortClientBotManager : public UObject
{
public:
	unsigned char                                      UnknownData_KZ8H[0x4];                                     // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHasMatchmade;                                             // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SKQA[0x3];                                     // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastRandomTurnTime;                                        // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPickLootTime;                                          // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPickEnemyTime;                                         // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastEnemyKilledTime;                                       // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastBuildingKilledTime;                                    // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EnemyLastSeenTime;                                         // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BuildingLastSeenTime;                                      // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastGoodInteraction;                                       // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastCheckGoodTarget;                                       // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIPawn*                                 EnemyTarget;                                               // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                                 PickupTarget;                                              // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingContainer*                          LootTarget;                                                // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingContainer*                          SearchTarget;                                              // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                              BuildingTarget;                                            // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L6NN[0x78];                                    // 0x005C(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHasHadPawn;                                               // 0x00D4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8DMB[0x3];                                     // 0x00D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ViewLocation;                                              // 0x00D8(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                             MyPawn;                                                    // 0x00E4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortClientBotManager");
		return ptr;
	}



};

// Class FortniteGame.FortVisibilityManager
// 0x009C (FullSize[0x02DC] - InheritedSize[0x0240])
class AFortVisibilityManager : public AActor
{
public:
	unsigned char                                      UnknownData_LQY3[0xC];                                     // 0x0240(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVisibiltyInfoArray                         VisibilityInfoArray;                                       // 0x024C(0x008C) (Net, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V90I[0x4];                                     // 0x02D8(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortVisibilityManager");
		return ptr;
	}



};

// Class FortniteGame.FortWeapon
// 0x03B4 (FullSize[0x05F4] - InheritedSize[0x0240])
class AFortWeapon : public AActor
{
public:
	unsigned char                                      UnknownData_UL4S[0xC];                                     // 0x0240(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsEquippingWeapon;                                        // 0x024C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsReloadingWeapon;                                        // 0x024D(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsChargingWeapon;                                         // 0x024E(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PBOF[0x1];                                     // 0x024F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortWeaponItemDefinition*                   WeaponData;                                                // 0x0250(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldDrawNativeReticle;                                  // 0x0254(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M9EQ[0x3];                                     // 0x0255(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  ReticleImage;                                              // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                      ReticleDefaultColor;                                       // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FColor                                      ReticleEnemyColor;                                         // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FColor                                      ReticleBuildingColor;                                      // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                                  HitNotifyReticleImage;                                     // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HitNotifyDisplayDuration;                                  // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  ReticleCenterImage;                                        // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReticleDefaultPrimaryStrikeAngle;                          // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReticleDefaultSecondaryStrikeAngle;                        // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CameraBase3PClass;                                         // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CameraTargeting3PClass;                                    // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CameraBase1PClass;                                         // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CameraTargeting1PClass;                                    // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  DestroyedSound;                                            // 0x028C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  OutOfAmmoSound;                                            // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  ReloadSounds[0x3];                                         // 0x0294(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  PrimaryFireSound[0x3];                                     // 0x02A0(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  PrimaryFireStopSound[0x3];                                 // 0x02AC(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  SecondaryFireSound[0x3];                                   // 0x02B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  SecondaryFireStopSound[0x3];                               // 0x02C4(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PrimaryFireSoundFadeOutTime;                               // 0x02D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  ImpactPhysicalSurfaceSounds[0x3F];                         // 0x02D4(0x00FC) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             ImpactPhysicalSurfaceEffects[0x3F];                        // 0x03D0(0x00FC) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ImpactCameraShake;                                         // 0x04CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                             FireAudioChannels[0x3];                                    // 0x04D0(0x000C) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      WeaponMesh;                                                // 0x04DC(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>                  DefaultWeaponMaterials;                                    // 0x04E0(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int                                                FireAudioChannelWantsToPlay[0x3];                          // 0x04EC(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsingSecondaryFireAudio;                                  // 0x04F8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CQ47[0x3];                                     // 0x04F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCanvasIcon                                 CurrentReticleIcon;                                        // 0x04FC(0x0014) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FCanvasIcon                                 CurrentHitNotifyReticleIcon;                               // 0x0510(0x0014) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FCanvasIcon                                 CurrentReticleCenterIcon;                                  // 0x0524(0x0014) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FColor                                      CurrentReticleColor;                                       // 0x0538(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              LastFireTime;                                              // 0x053C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPlayingFireFX;                                          // 0x0540(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E3MD[0x3];                                     // 0x0541(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimerIntervalAdjustment;                                   // 0x0544(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InputQueueTimePercent;                                     // 0x0548(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowTargeting;                                           // 0x054C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsTargeting;                                              // 0x054D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BZYR[0x2];                                     // 0x054E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     TargetSourceOffset;                                        // 0x0550(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     TargetSourceOffsetWhileTargeting;                          // 0x055C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bTraceThroughPawns;                                        // 0x0568(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D0EF[0x3];                                     // 0x0569(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastReloadTime;                                            // 0x056C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReloadDuration;                                            // 0x0570(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                       ItemEntryGuid;                                             // 0x0574(0x0010) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int                                                WeaponLevel;                                               // 0x0584(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AmmoCount;                                                 // 0x0588(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U0ZI[0x4];                                     // 0x058C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ChargeTime;                                                // 0x0590(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentShotLogIndex;                                       // 0x0594(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint32_t>                                   ShotLogFlags;                                              // 0x0598(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                               bInitializedWeaponItem;                                    // 0x05A4(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bUpdateLocalAmmoCount;                                     // 0x05A5(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7XTA[0x2];                                     // 0x05A6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortGameplayAbility*                        ActiveAbility;                                             // 0x05A8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle                  PrimaryAbilitySpecHandle;                                  // 0x05AC(0x0004) (Net, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle                  SecondaryAbilitySpecHandle;                                // 0x05B0(0x0004) (Net, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle                  ReloadAbilitySpecHandle;                                   // 0x05B4(0x0004) (Net, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAbilitySpecHandle>          EquippedAbilityHandles;                                    // 0x05B8(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>               EquippedAbilitySetHandles;                                 // 0x05C4(0x000C) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAlterationItemDefinition*>       AppliedAlterations;                                        // 0x05D0(0x000C) (Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WFNU[0x4];                                     // 0x05DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                EquipAnimation;                                            // 0x05E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                ReloadAnimation;                                           // 0x05E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                WeaponEquipMontage;                                        // 0x05E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                WeaponReloadMontage;                                       // 0x05EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortWeaponCoreAnimation> WeaponCoreAnimation;                                       // 0x05F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UV6F[0x3];                                     // 0x05F1(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWeapon");
		return ptr;
	}



	void UseWeaponDurability(float DurabilityScale);
	void StopWeaponFireFX();
	void SetWeaponVisibility(bool bDesiredVisibility, bool bForceUpdate);
	void SetShouldDrawNativeReticle(bool bInShouldDrawReticle);
	void ServerStartCharge();
	void ServerResetShotReport();
	void ResetTempWeaponMaterialOverride();
	void PlayWeaponFireFX(bool bSecondaryFire);
	void PlayReloadFX(TEnumAsByte<FortniteGame_EFortReloadFXState> ReloadStage);
	void PlayNativeImpactFX(const struct FHitResult& HitResult, const struct FGameplayCueParameters& GameplayCueParameters);
	void OnWeaponVisibilityChanged(bool bVisible);
	void OnWeaponAttached();
	void OnStopWeaponFireFX();
	void OnStartCharge();
	void OnSetTargeting(bool bNewIsTargeting);
	void OnRep_ReplicatedWeaponData();
	void OnRep_ReplicatedAppliedAlterations();
	void OnRep_AmmoCount();
	void OnReachedMinCharge();
	void OnReachedMaxCharge();
	void OnPlayWeaponFireFX(bool bPersistentFire);
	void OnPlayReloadFX(TEnumAsByte<FortniteGame_EFortReloadFXState> ReloadStage);
	void OnPlayImpactFX(const struct FHitResult& HitResult, TEnumAsByte<Engine_EPhysicalSurface> ImpactPhysicalSurface, class UParticleSystemComponent* SpawnedPSC);
	void OnPawnMontageStarted(class UAnimMontage* PawnMontage);
	void OnOutOfAmmoFire();
	void OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod, class UMaterialInstanceDynamic* DynamicMaterialInstance);
	void OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration);
	void OnEquippedWeaponDestroyWrapper();
	void OnEquippedWeaponDestory();
	void OnEndCharge();
	void OnAmmoCountChanged();
	void K2_OnUnEquip();
	bool IsReloading();
	struct FColor GetReticleColor();
	int GetRemainingAmmo();
	float GetReloadTime();
	float GetReloadProgress();
	float GetRange();
	int GetMagazineAmmoCount();
	int GetLocalRemainingAmmo();
	int GetLocalMagazineAmmoCount();
	struct FVector GetDamageStartLocation(struct FVector* AimDir);
	float GetCurrentMaxChargePercent();
	TEnumAsByte<FortniteGame_EFortWeaponCoreAnimation> GetCoreAnimation();
	float GetChargePercent();
	int GetBulletsPerClip();
	TArray<class UFortAlterationItemDefinition*> GetAlterations();
	void GetActiveAlterations(TArray<class UFortAlterationItemDefinition*>* outActiveAlterations);
	void GameplayCue_Weapons_ChargeUp(TEnumAsByte<GameplayAbilities_EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Weapons_Activation(TEnumAsByte<GameplayAbilities_EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Impact(TEnumAsByte<GameplayAbilities_EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	struct FColor DetermineReticleColor();
	void ClientReportShotFlags(uint32_t ShotFlags, int ShotIndex);
	void ClientGivenTo(class APawn* P);
	void ApplyTempWeaponMaterialOverride(class UMaterialInterface* MaterialOverride);
};

// Class FortniteGame.FortDecoTool
// 0x002C (FullSize[0x0620] - InheritedSize[0x05F4])
class AFortDecoTool : public AFortWeapon
{
public:
	bool                                               bButtonDown;                                               // 0x05F4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YKVO[0x3];                                     // 0x05F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortItemDefinition*                         ItemDefinition;                                            // 0x05F8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortDecoHelper*                             DecoHelper;                                                // 0x05FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      CarriedActor;                                              // 0x0600(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPlaceCarriedActor;                                        // 0x0604(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WARA[0x3];                                     // 0x0605(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TAssetPtr<class UParticleSystem>                   SpawnEffect;                                               // 0x0608(0x0018) (Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDecoTool");
		return ptr;
	}



	void ServerSpawnDeco(const struct FVector& Location, const struct FRotator& Rotation, class ABuildingSMActor* AttachedActor);
	void OnRep_ItemDefinition();
	void OnRep_CarriedActor();
	void OnCarriedActorDestroyed();
};

// Class FortniteGame.FortAbilityDecoTool
// 0x0020 (FullSize[0x0640] - InheritedSize[0x0620])
class AFortAbilityDecoTool : public AFortDecoTool
{
public:
	struct FAbilityToolSpawnParameters                 CachedSpawnParameters;                                     // 0x0620(0x0020) (Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityDecoTool");
		return ptr;
	}



	void GetSpawnParameters(struct FAbilityToolSpawnParameters* OutSpawnParamters);
	class UFortGameplayAbility* GetPlacementAbilityInstance();
	struct FGameplayAbilitySpecHandle GetPlacementAbilityHandle();
	class ABuildingActor* AbilitySpawnDeco(const struct FAbilityToolSpawnParameters& SpawnParameters);
};

// Class FortniteGame.FortCustomizableAbilityDecoTool
// 0x0000 (FullSize[0x0640] - InheritedSize[0x0640])
class AFortCustomizableAbilityDecoTool : public AFortAbilityDecoTool
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCustomizableAbilityDecoTool");
		return ptr;
	}



	void ServerReleaseTrigger();
	void ServerReleaseSecondaryFire();
	void ServerPressTrigger();
	void ServerPressSecondaryFire();
	void BPServerReleaseSecondaryFire();
	void BPServerPressSecondaryFire();
	void BPReleaseTrigger(class AFortDecoHelper* FortDecoHelper);
	void BPReleaseSecondaryFire(class AFortDecoHelper* FortDecoHelper);
	void BPPressTrigger(class AFortDecoHelper* FortDecoHelper);
	void BPPressSecondaryFire(class AFortDecoHelper* FortDecoHelper);
	void BPOnUnEquip();
	void BPOnSetDecoObjectPreview(class AFortDecoHelper* FortDecoHelper);
	void BPOnEquip(class AFortWeapon* OldWeapon);
};

// Class FortniteGame.FortTrapTool
// 0x0000 (FullSize[0x0620] - InheritedSize[0x0620])
class AFortTrapTool : public AFortDecoTool
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTrapTool");
		return ptr;
	}



};

// Class FortniteGame.FortWeap_BuildingToolBase
// 0x0018 (FullSize[0x060C] - InheritedSize[0x05F4])
class AFortWeap_BuildingToolBase : public AFortWeapon
{
public:
	class UStaticMeshComponent*                        PencilMeshComponent;                                       // 0x05F4(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       BlueprintPaperSocket;                                      // 0x05F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BlueprintPencilSocket;                                     // 0x0600(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerController*                       InstigatorController;                                      // 0x0608(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWeap_BuildingToolBase");
		return ptr;
	}



};

// Class FortniteGame.FortWeap_BuildingTool
// 0x00B4 (FullSize[0x06C0] - InheritedSize[0x060C])
class AFortWeap_BuildingTool : public AFortWeap_BuildingToolBase
{
public:
	class UMaterialInterface*                          BlueprintPaperMaterial;                                    // 0x060C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  BlueprintDiffuseTextures[0x4];                             // 0x0610(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  BlueprintEmissiveMaskTextures[0x4];                        // 0x0620(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 BlueprintPaperPulseCurve;                                  // 0x0630(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata*                   DefaultMetadata;                                           // 0x0634(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    BlueprintPaperMID;                                         // 0x0638(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                                   BlueprintPaperPulseTimeline;                               // 0x063C(0x0080) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortResourceType>        LastResourceType;                                          // 0x06BC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H3Y4[0x3];                                     // 0x06BD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWeap_BuildingTool");
		return ptr;
	}



	void OnRep_DefaultMetadata();
	void OnBlueprintPaperPulseUpdate(float InCurveVal);
};

// Class FortniteGame.FortWeap_EditingTool
// 0x0008 (FullSize[0x0614] - InheritedSize[0x060C])
class AFortWeap_EditingTool : public AFortWeap_BuildingToolBase
{
public:
	class ABuildingSMActor*                            EditActor;                                                 // 0x060C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEditConfirmed;                                            // 0x0610(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WNOZ[0x3];                                     // 0x0611(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWeap_EditingTool");
		return ptr;
	}



	void OnRep_EditActor();
};

// Class FortniteGame.FortWeaponRanged
// 0x0074 (FullSize[0x0668] - InheritedSize[0x05F4])
class AFortWeaponRanged : public AFortWeapon
{
public:
	bool                                               bAtMinimumReticleSpread;                                   // 0x05F4(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7IVV[0x3];                                     // 0x05F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentReticleSpread;                                      // 0x05F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentReticleSpreadMultiplier;                            // 0x05FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentStandingStillSpreadMultiplier;                      // 0x0600(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MuzzleSocketName;                                          // 0x0604(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       MuzzleFalloffSocketName;                                   // 0x060C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPersistentFireFX;                                         // 0x0614(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J5TP[0x3];                                     // 0x0615(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      TracerTemplate;                                            // 0x0618(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentNumBullets;                                         // 0x061C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                BurstFireCounter;                                          // 0x0620(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldDisplayAmmoCounter;                                 // 0x0624(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_64K9[0x33];                                    // 0x0625(0x0033) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                FireAnimation;                                             // 0x0658(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                FireDownsightsAnimation;                                   // 0x065C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                WeaponFireMontage;                                         // 0x0660(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                WeaponFireDownsightsMontage;                               // 0x0664(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWeaponRanged");
		return ptr;
	}



	bool ShouldSpawnBulletShellFX();
	bool ShouldDisplayAmmoCounter();
	float GetTimeToNextFire();
	struct FTransform GetMuzzleSocketTransform();
	struct FVector GetMuzzleLocation();
	class UParticleSystem* GetBulletShellFXTemplate();
};

// Class FortniteGame.FortWeap_WannaGun
// 0x0050 (FullSize[0x06B8] - InheritedSize[0x0668])
class AFortWeap_WannaGun : public AFortWeaponRanged
{
public:
	unsigned char                                      UnknownData_Q2SQ[0x1C];                                    // 0x0668(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LastHitActorScale;                                         // 0x0684(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRotator                                    LastHitActorRotation;                                      // 0x0690(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class UClass*                                      LastHitActorClass;                                         // 0x069C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TAssetPtr<class UBuildingTextureData>              TransparentTextureData;                                    // 0x06A0(0x0018) (Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWeap_WannaGun");
		return ptr;
	}



	void OnRep_LastHitActorClass();
};

// Class FortniteGame.WorldTileType
// 0x002C (FullSize[0x0048] - InheritedSize[0x001C])
class UWorldTileType : public UDataAsset
{
public:
	struct FString                                     TileID;                                                    // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             TileGroups;                                                // 0x0028(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                TileWeight;                                                // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortTileEdgeType>        North;                                                     // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortTileEdgeType>        East;                                                      // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortTileEdgeType>        South;                                                     // 0x003A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortTileEdgeType>        West;                                                      // 0x003B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             MapNames;                                                  // 0x003C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.WorldTileType");
		return ptr;
	}



};

// Class FortniteGame.WorldTileManager
// 0x0040 (FullSize[0x005C] - InheritedSize[0x001C])
class UWorldTileManager : public UObject
{
public:
	class AFortWorldManager*                           WorldManager;                                              // 0x001C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2S33[0x3C];                                    // 0x0020(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.WorldTileManager");
		return ptr;
	}



};

// Class FortniteGame.FortWorldManager
// 0x02DC (FullSize[0x051C] - InheritedSize[0x0240])
class AFortWorldManager : public AInfo
{
public:
	TArray<struct FFortLevelStreamingInfo>             StreamedLevels;                                            // 0x0240(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      bSaveToCloud : 1;                                          // 0x024C(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bStreamInBuildings : 1;                                    // 0x024C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bConstructTileWorld : 1;                                   // 0x024C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bUseSimMaps : 1;                                           // 0x024C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8YNI[0x3];                                     // 0x024D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EditorOnlyWorldLevelOverride;                              // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TheaterSlotOverride;                                       // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         GameDifficultyRowPIEOverride;                              // 0x0258(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              LootLevelOverrideForPIE;                                   // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortWorldManagerState>   WorldManagerState;                                         // 0x0268(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1YWL[0x3];                                     // 0x0269(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWorldTileManager*                           TileManager;                                               // 0x026C(0x0004) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                X_Size;                                                    // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Y_Size;                                                    // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Z_StructuralGrid_Size;                                     // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TileEdgeSize;                                              // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWorldTheme*                                 Theme;                                                     // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DefaultLootQuotaCategory;                                  // 0x0284(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTileLootData                           LootData;                                                  // 0x028C(0x00E0) (NativeAccessSpecifierPublic)
	int                                                MaxTiles;                                                  // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseFixedSeed;                                             // 0x0370(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AK63[0x3];                                     // 0x0371(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FixedSeed;                                                 // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWorldTileSubArray>                  Y;                                                         // 0x0378(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            ExplorationActorClass;                                     // 0x0384(0x0018) (Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumExplorationActors;                                      // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorationActorDistanceRangeMin;                          // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorationActorDistanceRangeMax;                          // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       ExplorationActorRequiredTags;                              // 0x03A8(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                                     FriendlyPlayerSpawnExtent;                                 // 0x03C0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     PadPlayerSpawnExtent;                                      // 0x03CC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              DangerPlayerSpawnExclusionRadius;                          // 0x03D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ObjectivePlayerSpawnExclusionRadius;                       // 0x03DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       OverrideInitialPlayerSpawnTags;                            // 0x03E0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       OverrideBackupPlayerSpawnTags;                             // 0x03F8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortStartingMissionInfo                    StartingMissionInfo;                                       // 0x0410(0x000C) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UFortWorldRecord*                            CurrentWorldRecord;                                        // 0x041C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortZoneRecord*                             CurrentZoneRecord;                                         // 0x0420(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1GS1[0x1C];                                    // 0x0424(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentZoneIndex;                                          // 0x0440(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bZoneCompleted;                                            // 0x0444(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZSUO[0x3];                                     // 0x0445(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFortDeferredNewActorData>           DeferredActors;                                            // 0x0448(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LICE[0xBC];                                    // 0x0454(0x00BC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              SpawnedExplorationActors;                                  // 0x0510(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWorldManager");
		return ptr;
	}



};

// Class FortniteGame.FortWorldSettings
// 0x0094 (FullSize[0x0408] - InheritedSize[0x0374])
class AFortWorldSettings : public AWorldSettings
{
public:
	unsigned char                                      UnknownData_UVUI[0x3C];                                    // 0x0374(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeAddedWorldReadyActor;                                  // 0x03B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int>                                        WorldCells;                                                // 0x03B4(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                     WorldCellsOrigin;                                          // 0x03C0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int                                                WorldCellsFlags;                                           // 0x03CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bShowTerrainJumpLinks : 1;                                 // 0x03D0(0x0001) BIT_FIELD (Edit, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bShowTerrainClimbLinks : 1;                                // 0x03D0(0x0001) BIT_FIELD (Edit, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bShowTerrainCollisions : 1;                                // 0x03D0(0x0001) BIT_FIELD (Edit, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bShowTerrainNavGraph : 1;                                  // 0x03D0(0x0001) BIT_FIELD (Edit, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bShowTerrainIsolatedRegions : 1;                           // 0x03D0(0x0001) BIT_FIELD (Edit, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bGenerateTestLevelSaves : 1;                               // 0x03D0(0x0001) BIT_FIELD (Edit, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDisableCullDistance : 1;                                  // 0x03D0(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YBNU[0x3];                                     // 0x03D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  TeamOnePvPMiniMapImage;                                    // 0x03D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  TeamTwoPvPMiniMapImage;                                    // 0x03D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   PvPMapWorldCenter;                                         // 0x03DC(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              PvPMapWorldWidth;                                          // 0x03E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PvPMapWorldHeight;                                         // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bPvPUseWidgetRotation : 1;                                 // 0x03EC(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3PRH[0x3];                                     // 0x03ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MapZOffset;                                                // 0x03F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    MapRotation;                                               // 0x03F4(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UTexture2D*                                  MapInitialMask;                                            // 0x0400(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bOverrideMainMapSettings : 1;                              // 0x0404(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDisableDormantAI : 1;                                     // 0x0404(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RBH1[0x3];                                     // 0x0405(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWorldSettings");
		return ptr;
	}



};

// Class FortniteGame.FortZoneTheme
// 0x00F0 (FullSize[0x010C] - InheritedSize[0x001C])
class UFortZoneTheme : public UDataAsset
{
public:
	TAssetPtr<class UClass>                            TheaterMapTileClass;                                       // 0x001C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UWorld>                            ZoneToUse;                                                 // 0x0034(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       ZoneName;                                                  // 0x004C(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       ZoneDescription;                                           // 0x0058(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       AbundantResources;                                         // 0x0064(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortZoneType>            ZoneType;                                                  // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GHQR[0x3];                                     // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TAssetPtr<class UClass>                            ZoneGameMode;                                              // 0x0074(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       ZoneTags;                                                  // 0x008C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            LobbyBeaconHostClass;                                      // 0x00A4(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ZoneIndex;                                                 // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PlaylistId;                                                // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TeamSize;                                                  // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TeamCount;                                                 // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxPartySize;                                              // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      IgnoreGeneratedRewards : 1;                                // 0x00D0(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V9B8[0x3];                                     // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PlayerSpawnPadClass;                                       // 0x00D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerSpawnPadObjectiveExclusionRadius;                    // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       InitialPlayerSpawnTags;                                    // 0x00DC(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       BackupPlayerSpawnTags;                                     // 0x00F4(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortZoneTheme");
		return ptr;
	}



};

// Class FortniteGame.FortAttributeLookupTable
// 0x0048 (FullSize[0x0064] - InheritedSize[0x001C])
class UFortAttributeLookupTable : public UDataAsset
{
public:
	TArray<struct FFortAttributeInfo>                  AttributeInfoList;                                         // 0x001C(0x000C) (Edit, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RFHY[0x3C];                                    // 0x0028(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAttributeLookupTable");
		return ptr;
	}



};

// Class FortniteGame.FortInventoryInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortInventoryInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortInventoryInterface");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_AssignmentTypeInterest
// 0x0140 (FullSize[0x025C] - InheritedSize[0x011C])
class UFortQueryTest_AssignmentTypeInterest : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue                   InvalidTypeStartInterest;                                  // 0x011C(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   InvalidTypeEndInterest;                                    // 0x0138(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   InvalidTypeTimeBeforeLerp;                                 // 0x0154(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   InvalidTypeLerpDuration;                                   // 0x0170(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   ValidTypeStartInterest;                                    // 0x018C(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   ValidTypeEndInterest;                                      // 0x01A8(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   ValidTypeTimeBeforeLerp;                                   // 0x01C4(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   ValidTypeLerpDuration;                                     // 0x01E0(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   StartInterestWhenUsingInvalidType;                         // 0x01FC(0x000C) (Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   EndInterestWhenUsingInvalidType;                           // 0x0208(0x000C) (Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   TimeBeforeLerpWhenUsingInvalidType;                        // 0x0214(0x000C) (Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   LerpDurationForInvalidType;                                // 0x0220(0x000C) (Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   StartInterestWhenUsingValidType;                           // 0x022C(0x000C) (Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   EndInterestWhenUsingValidType;                             // 0x0238(0x000C) (Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   TimeBeforeLerpWhenUsingValidType;                          // 0x0244(0x000C) (Protected, NativeAccessSpecifierProtected)
	struct FEnvFloatParam_DEPRECATED                   LerpDurationForValidType;                                  // 0x0250(0x000C) (Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_AssignmentTypeInterest");
		return ptr;
	}



};

// Class FortniteGame.FortInventory
// 0x0154 (FullSize[0x0394] - InheritedSize[0x0240])
class AFortInventory : public AActor
{
public:
	unsigned char                                      UnknownData_R0H6[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortItemList                               Inventory;                                                 // 0x0244(0x0110) (Net, SaveGame, RepNotify, NativeAccessSpecifierPrivate)
	bool                                               bRequiresLocalUpdate;                                      // 0x0354(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bRequiresSaving;                                           // 0x0355(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bIsShuttingDown;                                           // 0x0356(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PRJG[0xD];                                     // 0x0357(0x000D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UFortWorldItem*>                      PendingInstances;                                          // 0x0364(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortItem*>                           RecentlyAdded;                                             // 0x0370(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortItem*>                           RecentlyRemoved;                                           // 0x037C(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortItem*>                           RecentlyChanged;                                           // 0x0388(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortInventory");
		return ptr;
	}



	void HandleInventoryLocalUpdate();
};

// Class FortniteGame.CustomCharacterPart
// 0x0038 (FullSize[0x05F0] - InheritedSize[0x05B8])
class UCustomCharacterPart : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_QCFY[0x4];                                     // 0x05B8(0x0004) Fix Super Size
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x05BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USkeletalMesh*>                       MasterSkeletalMeshes;                                      // 0x05C0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	TArray<class UFortHeroType*>                       ClassesPermitted;                                          // 0x05CC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FName                                       OutfitName;                                                // 0x05D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSinglePieceMesh;                                          // 0x05E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CHCE[0x3];                                     // 0x05E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PartModifierBlueprint;                                     // 0x05E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomCharacterPartData*                    AdditionalData;                                            // 0x05E8(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSupportsColorSwatches;                                    // 0x05EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G1IL[0x3];                                     // 0x05ED(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterPart");
		return ptr;
	}



};

// Class FortniteGame.FortGlobals
// 0x0544 (FullSize[0x0560] - InheritedSize[0x001C])
class UFortGlobals : public UObject
{
public:
	struct FStreamableManager                          StreamableManager;                                         // 0x001C(0x0078) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BF4P[0x4];                                     // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     GameDataName;                                              // 0x0098(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ActiveTheaterListPath;                                     // 0x00A4(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     TestTheaterListPath;                                       // 0x00B0(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  XPAccountLevelsTable;                                      // 0x00BC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     XPAccountLevelsName;                                       // 0x00C0(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  XPHeroLevelsTable;                                         // 0x00CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     XPHeroLevelsName;                                          // 0x00D0(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                                 XPAccountItemLevelsTable;                                  // 0x00DC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     XPAccountItemLevelsName;                                   // 0x00E0(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                                 XPAccountItemRewardsTable;                                 // 0x00EC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     XPAccountItemRewardsName;                                  // 0x00F0(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  TraitCostsTable;                                           // 0x00FC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     TraitCostsTableName;                                       // 0x0100(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  SurfaceRatioDataTable;                                     // 0x010C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     AIWildcardsTableName;                                      // 0x0110(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T1RZ[0x3C];                                    // 0x011C(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     LobbyMap;                                                  // 0x0158(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultCullObjectSize;                                     // 0x0164(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultCullDistance;                                       // 0x0168(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinCullObjectSize;                                         // 0x016C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinCullDistance;                                           // 0x0170(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCullObjectSize;                                         // 0x0174(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCullDistance;                                           // 0x0178(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceLoadConstructorReferencesAtStartup;                  // 0x017C(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bEnableNewCustomizationPanel;                              // 0x017D(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bEnableNewEncounters;                                      // 0x017E(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bEnableDormantHusks;                                       // 0x017F(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bEnableAIDespawning;                                       // 0x0180(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bEnableNewAIEncounterTypeData;                             // 0x0181(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7KYF[0x2];                                     // 0x0182(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<TAssetPtr<class UFortWorldItemDefinition>, TAssetPtr<class UFortSchematicItemDefinition>> ItemToSchematicMap;                                        // 0x0184(0x0050) ELEMENT_SIZE_MISMATCH (ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UFortGameData*                               GameData;                                                  // 0x01C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z4N4[0x4];                                     // 0x01C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortObjectLibraryEntry                     ObjectLibraries[0x22];                                     // 0x01C8(0x02A8) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MJ4R[0xF0];                                    // 0x0470(0x00F0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGlobals");
		return ptr;
	}



};

// Class FortniteGame.FortMissionWeightedRewards
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortMissionWeightedRewards : public UDataAsset
{
public:
	TArray<struct FFortMissionWeightedReward>          Rewards;                                                   // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionWeightedRewards");
		return ptr;
	}



};

// Class FortniteGame.FortMissionInfo
// 0x0224 (FullSize[0x0240] - InheritedSize[0x001C])
class UFortMissionInfo : public UDataAsset
{
public:
	TAssetPtr<class UClass>                            MissionRef;                                                // 0x001C(0x0018) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<FortniteGame_EFortMissionType>         MissionType;                                               // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IEID[0x3];                                     // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       MissionTags;                                               // 0x0038(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              TimeOfDaySpeed;                                            // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortBadgeItemDefinition*                    MissionRewardBadge;                                        // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MissionRewardItemsLootTierGroup;                           // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxRewardLootTierPoints;                                   // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ParTime;                                                   // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortBadgeItemDefinition*                    UnderParBadge;                                             // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxMissionPoints;                                          // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVictoryTileRequired;                                      // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_94Z3[0x3];                                     // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       MissionDescription;                                        // 0x0074(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                DaysToLive;                                                // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortObjectiveBlock>                 ObjectiveBlocks;                                           // 0x0084(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionInfoTagRequirement>      RequiredBuildings;                                         // 0x0090(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              MinDistanceToOtherMissions;                                // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowMinimapIconsOnlyIfFocused;                            // 0x00A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A1I8[0x3];                                     // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ExpectedCompletionTime;                                    // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MissionEncounterTime;                                      // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortPlacementActorFinderInfo               PlacementActorInfo;                                        // 0x00AC(0x0014) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bStartPlayingOnLoad;                                       // 0x00C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SQCH[0x3];                                     // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       RewardsTitleText;                                          // 0x00C4(0x0018) ELEMENT_SIZE_MISMATCH (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       RewardsDescriptionText;                                    // 0x00D0(0x0018) ELEMENT_SIZE_MISMATCH (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       NonParticipationRewardsDescriptionText;                    // 0x00DC(0x0018) ELEMENT_SIZE_MISMATCH (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortMissionPopupWidgetData                 PopupWidgetData;                                           // 0x00E8(0x00E8) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortMissionWeightedRewards*                 WeightedRewards;                                           // 0x01D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       MissionName;                                               // 0x01D4(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEncounterProfile>               EncounterProfiles;                                         // 0x01E0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEncounterSequenceSettings>      EncounterSequences;                                        // 0x01EC(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TAssetPtr<class UFortDifficultyOptionSetMission>   MissionOptions;                                            // 0x01F8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       MissionDifficultyOptionTags;                               // 0x0210(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortMissionTaggedRewards>           TaggedRewards;                                             // 0x0228(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortMissionConfigDataParams                ConfigParams;                                              // 0x0234(0x000C) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionInfo");
		return ptr;
	}



};

// Class FortniteGame.FortTheaterMapViewer
// 0x0100 (FullSize[0x0340] - InheritedSize[0x0240])
class AFortTheaterMapViewer : public AActor
{
public:
	unsigned char                                      UnknownData_RS7P[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFortAvailableTheaterMissions>       MissionAvailabilityList;                                   // 0x0244(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	struct FBox                                        HexMapSize;                                                // 0x0250(0x001C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              HexTileWidth;                                              // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HexTileHeight;                                             // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                                   LastTheaterRefresh;                                        // 0x0274(0x0008) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FFortHexMapCoord                            PlayerMarkerTileCoord;                                     // 0x027C(0x000C) (Protected, NativeAccessSpecifierProtected)
	TArray<class AFortTheaterMapTile*>                 HexMap;                                                    // 0x0288(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int                                                CurrentTheaterIndex;                                       // 0x0294(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<bool>                                       LeaderTileAccessStates;                                    // 0x0298(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int                                                CurrentSelectedRegionIndex;                                // 0x02A4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortTheaterMapTile*                         CurrentSelectedTile;                                       // 0x02A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterMapData>                 TheaterList;                                               // 0x02AC(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortHexMapPlayerMarker*>             PlayerMarkers;                                             // 0x02B8(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int                                                NumValidHexMapTiles;                                       // 0x02C4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RTJ6[0x78];                                    // 0x02C8(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTheaterMapViewer");
		return ptr;
	}



};

// Class FortniteGame.FortMcpWorlds
// 0x0030 (FullSize[0x004C] - InheritedSize[0x001C])
class UFortMcpWorlds : public UObject
{
public:
	unsigned char                                      UnknownData_VZT3[0xC];                                     // 0x001C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     EnumerateWorldsUrl;                                        // 0x0028(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortActiveTheaterInfo                      TheaterInfo;                                               // 0x0034(0x0018) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMcpWorlds");
		return ptr;
	}



};

// Class FortniteGame.FortGenericRecord
// 0x001C (FullSize[0x0038] - InheritedSize[0x001C])
class UFortGenericRecord : public UObject
{
public:
	int                                                DataVersion;                                               // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LV0U[0x18];                                    // 0x0020(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGenericRecord");
		return ptr;
	}



};

// Class FortniteGame.FortWorldRecord
// 0x0140 (FullSize[0x0178] - InheritedSize[0x0038])
class UFortWorldRecord : public UFortGenericRecord
{
public:
	int                                                WorldSaveCount;                                            // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WorldDaysElapsed;                                          // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WorldLevel;                                                // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentZoneIndex;                                          // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortZoneInfoRecord>                 SavedZones;                                                // 0x0048(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortPlayerRecord>                   SavedPlayers;                                              // 0x0054(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FFortWorldData                              WorldMetadata;                                             // 0x0060(0x0084) (Transient, NativeAccessSpecifierPublic)
	struct FFortZoneInstanceDetails                    ZoneInstanceInfo;                                          // 0x00E4(0x0064) (Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortClusterInfoRecord>              SavedClusters;                                             // 0x0148(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                VictoryZoneIndex;                                          // 0x0154(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MapWidth;                                                  // 0x0158(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MapHeight;                                                 // 0x015C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortHexMapCoord                            PlayerMarkerTileCoord;                                     // 0x0160(0x000C) (NativeAccessSpecifierPublic)
	struct FString                                     WUID;                                                      // 0x016C(0x000C) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWorldRecord");
		return ptr;
	}



};

// Class FortniteGame.FortSpline
// 0x0030 (FullSize[0x004C] - InheritedSize[0x001C])
class UFortSpline : public UObject
{
public:
	bool                                               bConstantVelocity;                                         // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UK20[0x3];                                     // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortCatmullRomSpline                       Spline;                                                    // 0x0020(0x0018) (NativeAccessSpecifierPrivate)
	struct FInterpCurveFloat                           SplineLookupTable;                                         // 0x0038(0x0014) (ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSpline");
		return ptr;
	}



	void SetupSpline(TArray<struct FVector> ControlPoints, float InDuration);
	void SetDuration(float InDuration);
	bool IsValid();
	float GetVelocityCorrectedTime(float Time);
	struct FVector GetTangentFromTime(float Time);
	struct FVector GetStartPoint();
	float GetSplineLengthAtTime(float Time, float StepSize);
	float GetSplineLength(float StepSize);
	struct FVector GetPositionFromTime(float Time);
	int GetNumberOfControlPoints();
	struct FVector GetNormalFromTime(float Time);
	struct FVector GetEndPoint();
	float GetDuration();
	struct FVector GetBinormalFromTime(float Time);
	void EnableConstantVelocity(bool ConstVelEnabled);
	void DrawDebugSpline(class UObject* WorldContextObject, int Steps, float LifeTime, float Thickness, bool bPersistent, bool bJustDrawSpline, float BasisLength);
	void ClearSpline();
	void AddControlPoint(const struct FVector& Point, int INDEX);
};

// Class FortniteGame.FortQueryTest_GoalDiscouragement
// 0x001C (FullSize[0x0138] - InheritedSize[0x011C])
class UFortQueryTest_GoalDiscouragement : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderBoolValue                    DisableDiscouragementWhenUndermining;                      // 0x011C(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalDiscouragement");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_GoalDistance
// 0x000C (FullSize[0x0128] - InheritedSize[0x011C])
class UFortQueryTest_GoalDistance : public UFortQueryTest_GoalBase
{
public:
	TEnumAsByte<FortniteGame_EDistanceMode>            DistanceMode;                                              // 0x011C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NHWI[0x3];                                     // 0x011D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DistanceTo;                                                // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EEnvTestDistance>             TestMode;                                                  // 0x0124(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MB8A[0x3];                                     // 0x0125(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalDistance");
		return ptr;
	}



};

// Class FortniteGame.FortInteractInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortInteractInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortInteractInterface");
		return ptr;
	}



	bool ServerOnAttemptInteract(const struct FInteractionType& InteractType);
	void LocalOnInterruptInteract(const struct FInteractionType& InteractType);
	bool LocalOnAttemptInteract(const struct FInteractionType& InteractType);
	void LocalBeginLongUse();
	bool HasDisplayWidget(const struct FInteractionType& InteractType);
	struct FInteractContextInfo GetContextInfo(const struct FInteractionType& InteractType);
	bool CanShowContextInfo(const struct FInteractionType& InteractType);
	bool CanInteract(const struct FInteractionType& InteractType);
};

// Class FortniteGame.FortPickup
// 0x0178 (FullSize[0x03B8] - InheritedSize[0x0240])
class AFortPickup : public AActor
{
public:
	unsigned char                                      UnknownData_4XJA[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPickup;                                                  // 0x0244(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFortItemEntry                              PrimaryPickupItemEntry;                                    // 0x0250(0x007C) (Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortItemEntry>                      MultiItemPickupEntries;                                    // 0x02CC(0x000C) (Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FFortPickupLocationData                     PickupLocationData;                                        // 0x02D8(0x0044) (Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	int                                                OptionalOwnerID;                                           // 0x031C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                       OptionalMissionGuid;                                       // 0x0320(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UFortItem*                                   PrimaryPickupDummyItem;                                    // 0x0330(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPickupEffect>            PickupEffectBlueprint;                                     // 0x0334(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                           TouchCapsule;                                              // 0x033C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*                MovementComponent;                                         // 0x0340(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPickedUp;                                                 // 0x0344(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H46U[0x3];                                     // 0x0345(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TAssetPtr<class UCurveVector>                      SplineCurve;                                               // 0x0348(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             SpawnEffect;                                               // 0x0360(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class USoundBase>                        LandedSound;                                               // 0x0364(0x0018) (Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastLandedSoundPlayTime;                                   // 0x037C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AZNP[0x38];                                    // 0x0380(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPickup");
		return ptr;
	}



	void TossPickup(const struct FVector& FinalLocation, class APawn* ItemOwner, int OverrideMaxStackCount);
	void OnRep_PrimaryPickupItemEntry();
	void OnRep_PickupOwnerData();
	void OnRep_PickupLocationData();
	struct FText GetDisplayName();
};

// Class FortniteGame.FortFeedbackManager
// 0x0068 (FullSize[0x02A8] - InheritedSize[0x0240])
class AFortFeedbackManager : public AActor
{
public:
	TArray<struct FFortFeedbackEventData>              FeedbackEvents;                                            // 0x0240(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UClass*                                      AnnouncerPawnClass;                                        // 0x024C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn_FeedbackAnnouncer*                 Announcer;                                                 // 0x0250(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AController>>          SuppressedControllers;                                     // 0x0254(0x000C) (Net, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y9VY[0x48];                                    // 0x0260(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortFeedbackManager");
		return ptr;
	}



	void SuppressProceduralFeedback(TArray<class AController*> ControllersToSuppress);
	class AFortFeedbackManager* STATIC_GetFeedbackManager(class UObject* WorldContextObject);
	class AFortPawn_FeedbackAnnouncer* STATIC_GetAnnouncerPawn(class UObject* WorldContextObject);
};

// Class FortniteGame.FortIndicator
// 0x0030 (FullSize[0x004C] - InheritedSize[0x001C])
class UFortIndicator : public UObject
{
public:
	struct FVector                                     RelativeLocation;                                          // 0x001C(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MaxScale;                                                  // 0x0028(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinScale;                                                  // 0x002C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistance;                                               // 0x0030(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxScaleDistance;                                          // 0x0034(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinScaleDistance;                                          // 0x0038(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A1SR[0x10];                                    // 0x003C(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortIndicator");
		return ptr;
	}



};

// Class FortniteGame.FortMiniMapIndicator
// 0x0058 (FullSize[0x00A4] - InheritedSize[0x004C])
class UFortMiniMapIndicator : public UFortIndicator
{
public:
	unsigned char                                      UnknownData_IJOM[0x58];                                    // 0x004C(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMiniMapIndicator");
		return ptr;
	}



};

// Class FortniteGame.FortAIEncounterInfoOwnerInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortAIEncounterInfoOwnerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterInfoOwnerInterface");
		return ptr;
	}



	class UFortAIEncounterInfo* GetEncounterInfo();
};

// Class FortniteGame.FortTeamActorInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortTeamActorInterface : public UGenericTeamAgentInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTeamActorInterface");
		return ptr;
	}



	TEnumAsByte<FortniteGame_EFortTeam> GetTeam();
};

// Class FortniteGame.FortDamageableActorInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortDamageableActorInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDamageableActorInterface");
		return ptr;
	}



};

// Class FortniteGame.FortSpottableActorInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortSpottableActorInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSpottableActorInterface");
		return ptr;
	}



};

// Class FortniteGame.FortTargetSelectionInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortTargetSelectionInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTargetSelectionInterface");
		return ptr;
	}



	struct FTransform GetTargetingTransform(TEnumAsByte<FortniteGame_EFortAbilityTargetingSource> Source, class UFortGameplayAbility* SourceAbility);
};

// Class FortniteGame.FortPawn
// 0x0350 (FullSize[0x085C] - InheritedSize[0x050C])
class AFortPawn : public ACharacter
{
public:
	unsigned char                                      UnknownData_7MPQ[0x4];                                     // 0x050C(0x0004) Fix Super Size
	unsigned char                                      UnknownData_G8C3[0x20];                                    // 0x0510(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDataTableRowHandle                         PawnStatHandle;                                            // 0x0530(0x000C) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1OGG[0x4];                                     // 0x053C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SlidingFriction;                                           // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlidingBrakingDeceleration;                                // 0x0544(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortMovementStyle>       CurrentMovementStyle;                                      // 0x0548(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseBaseChanged;                                           // 0x0549(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5XYY[0x2];                                     // 0x054A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PawnUniqueID;                                              // 0x054C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                                 CurrentWeapon;                                             // 0x0550(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortWeapon*>                         CurrentWeaponList;                                         // 0x0554(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	float                                              Health;                                                    // 0x0560(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementDirection;                                         // 0x0564(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmoothedMovementDirection;                                 // 0x0568(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmoothedMovementDirectionInterpSpeed;                      // 0x056C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastSmoothedMovementDirection;                             // 0x0570(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmoothedMovementDirectionRate;                             // 0x0574(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastRateUpdateTime;                                        // 0x0578(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastYawRotation;                                           // 0x057C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawRotationRate;                                           // 0x0580(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallingStartedZ;                                           // 0x0584(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreNextFallingDamage;                                  // 0x0588(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YM5D[0x3];                                     // 0x0589(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       WeaponHandSocketName;                                      // 0x058C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      SpawnSpot;                                                 // 0x0594(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimPitch;                                                  // 0x0598(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       DeathTags;                                                 // 0x059C(0x0018) (Transient, NativeAccessSpecifierPublic)
	float                                              SpawnImmunityTime;                                         // 0x05B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsDying;                                                  // 0x05B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsHiddenForDeath;                                         // 0x05B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EM0D[0x2];                                     // 0x05BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MeleeRange;                                                // 0x05BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastMeleeTime;                                             // 0x05C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsKnockedback;                                            // 0x05C4(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsStunned;                                                // 0x05C5(0x0001) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D09H[0x2];                                     // 0x05C6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                AdditiveCringeCount;                                       // 0x05C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AdditiveCringeDuration;                                    // 0x05CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                         PushMomentum;                                              // 0x05D0(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UZH6[0x3C];                                    // 0x05DC(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshSocket*                         DeathHitSocket;                                            // 0x0618(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPostRenderTraceTime;                                   // 0x061C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPostRenderTraceSucceeded;                                 // 0x0620(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_POYI[0x3];                                     // 0x0621(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TeamBeaconMaxDist;                                         // 0x0624(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      TeamBeaconTextColor;                                       // 0x0628(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              LastTakeHitTimeTimeout;                                    // 0x062C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastDamagedTime;                                           // 0x0630(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                                 CurrentlyAttachedWeapon;                                   // 0x0634(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                         CachedNavFloor;                                            // 0x0638(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxFootstepDistance;                                       // 0x063C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  DefaultFootstepSound;                                      // 0x0640(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  DefaultFastFootstepSound;                                  // 0x0644(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  DefaultLandingSound;                                       // 0x0648(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  DefaultHardLandingSound;                                   // 0x064C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  DefaultJumpSound;                                          // 0x0650(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanCapsuleBeUsedForTargeting;                             // 0x0654(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2T48[0x3];                                     // 0x0655(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPawnDamageZones                            DamageZones[0x4];                                          // 0x0658(0x0040) (Edit, NativeAccessSpecifierPublic)
	unsigned char                                      DamageZoneActiveBitMask;                                   // 0x0698(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q3T5[0x3];                                     // 0x0699(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPawnLanded;                                              // 0x069C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHitPawn;                                                 // 0x06A8(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDied;                                                    // 0x06B4(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDeathEffects;                                            // 0x06C0(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T1ZF[0x38];                                    // 0x06CC(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDamaged;                                                 // 0x0704(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWeaponEquippedDelegate;                                  // 0x0710(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6G6F[0xC];                                     // 0x071C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                WeaponHolsterCounter;                                      // 0x0728(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWeaponHolstered;                                          // 0x072C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P9PP[0x3];                                     // 0x072D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StaySpottedTime;                                           // 0x0730(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SpottedEvent;                                              // 0x0734(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bSpotted : 1;                                              // 0x073C(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_85IC[0x3];                                     // 0x073D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortFeedbackBank*                           DefaultFeedback;                                           // 0x0740(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortPawnVocalChord>                 VocalChords;                                               // 0x0744(0x000C) (Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GK0R[0x4];                                     // 0x0750(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortHealthSet*                              HealthSet;                                                 // 0x0754(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDamageSet*                              DamageSet;                                                 // 0x0758(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMovementSet*                            MovementSet;                                               // 0x075C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHealthSynced;                                             // 0x0760(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9P0O[0x3];                                     // 0x0761(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAbilityDecisionWindowStackUpdated;                       // 0x0764(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                    // 0x0770(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortActiveMontageDecisionWindow>    DecisionWindowStack;                                       // 0x0774(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bPrimaryInputHeld;                                         // 0x0780(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bSecondaryInputHeld;                                       // 0x0781(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bPrimaryInputQueued;                                       // 0x0782(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JGLU[0x1];                                     // 0x0783(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       GameplayTags;                                              // 0x0784(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       DisplayName;                                               // 0x079C(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDamagerInfo>                        Damagers;                                                  // 0x07A8(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UFortHealthBarIndicator*                     HealthBarIndicator;                                        // 0x07B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthBarHeightMultiplier;                                 // 0x07B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 SpottedBrush;                                              // 0x07BC(0x0074) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              SpottedDuration;                                           // 0x0830(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     SpottedIconOffset;                                         // 0x0834(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HUB7[0x1C];                                    // 0x0840(0x001C) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPawn");
		return ptr;
	}



	void TriggerFeedbackEvent(const struct FName& EventName, class AFortPawn* InstigatorPawn, class AFortPawn* Recipient, float OverriddenDelay);
	void StopPushMomentum();
	bool StealFromActor(class AFortPawn* PawnToStealFrom);
	void StartPushMomentum(const struct FVector& NewPushMomentum, float Duration);
	void SetPawnVisibility(bool bNewHidden);
	void SetPawnAndControlRotation(const struct FRotator& NewRotation);
	void SetHolsterWeapon(bool bHolster);
	void SetHealth(float NewHealthVal);
	void SetFNameBasedOnHitDirection(const struct FVector& HitDirection, struct FName* NameResult, const struct FName& NameFront, const struct FName& NameBack, const struct FName& NameLeft, const struct FName& NameRight);
	void SetDamageZoneActiveStatus(TEnumAsByte<FortniteGame_EFortDamageZone> Zone, bool bActive);
	void ServerTeleportNearLocation(const struct FVector& ActorLocation);
	void ServerInternalEquipWeapon(class AFortWeapon* Weap);
	void PrototypeCharacterMovement(TEnumAsByte<Engine_EMovementMode> MovementMode, const struct FVector& LaunchVelocity);
	void PlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);
	float PlayLocalAnimMontage(class UAnimMontage* NewAnimMontage, float InPlayRate, const struct FName& StartSectionName);
	void PlayHitReactionAdditiveCringe();
	void PlayFootStepSound(int FootDown);
	bool PickUpActor(class AActor* PickupTarget, class UFortDecoItemDefinition* PlacementDecoItemDefinition);
	void PawnUniqueIDSet();
	void OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnStunnedEffectEnd();
	void OnStunnedEffectBegin();
	void OnStunned();
	void OnRep_VocalChords();
	void OnRep_PushMomentum();
	void OnRep_PawnUniqueID();
	void OnRep_DamageZoneActiveBitMask();
	void OnRep_CurrentWeapon();
	void OnRep_bWeaponHolstered();
	void OnMontageStarted(class UAnimMontage* Montage);
	void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamageZoneStatusChanged(TEnumAsByte<FortniteGame_EFortDamageZone> Zone, bool bStatus);
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnBumpPushedPawn(class AFortPawn* InstigatedBy, float PushTimeLeft);
	void OnBaseChanged(class AActor* NewBase);
	bool IsWeaponHolstered();
	bool IsFrontalHit(const struct FVector& HitDirection);
	bool IsDead();
	bool IsDamageZoneActive(TEnumAsByte<FortniteGame_EFortDamageZone> Zone);
	void InitializeDeathHitSocket(const struct FVector& WorldLocation, const struct FVector& WorldNormal);
	void HoldAnimationFrames(float StartTime, float HoldTime);
	void HideBodyOnDeath();
	bool HasCurrentMontage();
	void HandleIsHiddenForDeath();
	void HandleIsDying();
	struct FTransform GetTargetingTransform(TEnumAsByte<FortniteGame_EFortAbilityTargetingSource> Source, class UFortGameplayAbility* SourceAbility);
	void GetSphericalHitDirection(const struct FVector& HitDirection, float* Azimuth, float* Elevation);
	float GetShield();
	class UMaterialInstanceDynamic* GetPawnMID(int ElementIndex);
	class AActor* GetMyMovementBaseActor();
	struct FVector GetMovementPredictionPosition(float PredictionDeltaTime);
	float GetMeleeReticleStrikeAngle(bool bPrimaryInput);
	float GetMeleeRange();
	int GetMeleeComboCounter();
	float GetMaxShield();
	float GetMaxHealth();
	float GetHealthPercent();
	float GetHealth();
	class UAudioComponent* GetFeedbackAudioComponent();
	class UFortAIEncounterInfo* GetEncounterInfo();
	struct FRotator GetDefaultTargetingRotation();
	struct FVector GetDefaultTargetingOrigin();
	TEnumAsByte<FortniteGame_EFortDamageZone> GetDamageZone(const struct FName& BoneName);
	float GetCurrentMontageSectionTimeLeft();
	float GetCurrentFeedbackDuration();
	class UStaticMeshComponent* GetAssetStaticMeshComponentAttachment(const struct FName& SocketName);
	class USkeletalMeshComponent* GetAssetSkeletalMeshComponentAttachment(const struct FName& SocketName);
	struct FGameplayTag GetAbilityDecisionWindowTriggerTag(bool bPrimaryInput);
	void GameplayCue_InstantDeath(TEnumAsByte<GameplayAbilities_EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(TEnumAsByte<GameplayAbilities_EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue(TEnumAsByte<GameplayAbilities_EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void ForceKill(const struct FGameplayTag& DeathReason, class AController* KillerController, class AActor* KillerActor);
	void DoFatalDamage(class UAbilitySystemComponent* KillerAbilitySystemComponent);
	void DetachAssetFromSocket(const struct FName& SocketName);
	void ClientInternalEquipWeapon(class AFortWeapon* Weap);
	void AttachAssetToSocket(const struct FAssetAttachment& InAttachment);
	void ApplyKnockback(float KnockbackMagnitude, float KnockbackZAngle, const struct FVector& ImpulseDir);
	void AnimMontage_LocalSetNextSectionName(class UAnimMontage* AnimMontage, const struct FName& SectionName, const struct FName& NextSectionName);
	bool AnimMontage_LocalJumpToSectionName(const struct FName& SectionName);
	void AlignRotationToHitDirection(const struct FVector& HitDirection);
	void AlignRotationTo4WaysHitReaction(const struct FVector& HitDirection, float FrontOffset, float BackOffset, float LeftOffset, float RightOffset);
};

// Class FortniteGame.FortCarriedObjectHolderInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortCarriedObjectHolderInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCarriedObjectHolderInterface");
		return ptr;
	}



	void OnCarriedObjectDetach(class AActor* DetachedObject);
	void OnCarriedObjectAttach(class AActor* AttachedObject);
	void GetCarriedObjectAttachmentInfo(struct FCarriedObjectAttachmentInfo* OutAttachInfo);
	class USceneComponent* GetAttachmentComponent(const struct FName& SocketName);
	bool CanHoldObject(class AActor* CarriableObject);
};

// Class FortniteGame.FortAttributeSet
// 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
class UFortAttributeSet : public UAttributeSet
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAttributeSet");
		return ptr;
	}



};

// Class FortniteGame.FortHealthSet
// 0x00D0 (FullSize[0x00F0] - InheritedSize[0x0020])
class UFortHealthSet : public UFortAttributeSet
{
public:
	float                                              Health;                                                    // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHealth;                                                 // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentShield;                                             // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Shield;                                                    // 0x002C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageResistance;                                          // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReflectDamageAbsolute;                                     // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReflectDamageFromSource;                                   // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Damage;                                                    // 0x003C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldDamage;                                              // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealingSource;                                             // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealingBonusTarget;                                        // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Healing;                                                   // 0x004C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_POK0[0xA0];                                    // 0x0050(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHealthSet");
		return ptr;
	}



	void OnRep_Shield();
	void OnRep_MaxHealth();
	void OnRep_Health();
	void OnRep_CurrentShield();
};

// Class FortniteGame.FortHealthRegenInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortHealthRegenInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHealthRegenInterface");
		return ptr;
	}



	class UClass* GetShieldRegenGameplayEffectClass();
	class UGameplayEffect* GetShieldRegenGameplayEffect();
	class UGameplayEffect* GetShieldRegenDelayGameplayEffect();
	class UClass* GetHealthRegenGameplayEffectClass();
	class UGameplayEffect* GetHealthRegenGameplayEffect();
	class UGameplayEffect* GetHealthRegenDelayGameplayEffect();
};

// Class FortniteGame.FortRegenHealthSet
// 0x0028 (FullSize[0x0118] - InheritedSize[0x00F0])
class UFortRegenHealthSet : public UFortHealthSet
{
public:
	unsigned char                                      UnknownData_9PHG[0x4];                                     // 0x00F0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HealthRegenRate;                                           // 0x00F4(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthRegenDelay;                                          // 0x00F8(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthRegenThreshold;                                      // 0x00FC(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldRegenRate;                                           // 0x0100(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldRegenDelay;                                          // 0x0104(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShieldRegenThreshold;                                      // 0x0108(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IU2Z[0xC];                                     // 0x010C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortRegenHealthSet");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerPawn
// 0x0414 (FullSize[0x0C70] - InheritedSize[0x085C])
class AFortPlayerPawn : public AFortPawn
{
public:
	unsigned char                                      UnknownData_F1RO[0x4];                                     // 0x085C(0x0004) Fix Super Size
	class UClass*                                      HealthRegenDelayGameplayEffect;                            // 0x0860(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      HealthRegenGameplayEffect;                                 // 0x0864(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ShieldRegenDelayGameplayEffect;                            // 0x0868(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ShieldRegenGameplayEffect;                                 // 0x086C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortPawnStasisMode>      StasisMode;                                                // 0x0870(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortPawnStasisMode>      PreviousStasisMode;                                        // 0x0871(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsSprintJump;                                             // 0x0872(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SW2O[0x1];                                     // 0x0873(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SprintCancelTime;                                          // 0x0874(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanPredictJumpApex;                                       // 0x0878(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MCIO[0x3];                                     // 0x0879(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                CoolDownColor;                                             // 0x087C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                HeavyAttackColor;                                          // 0x088C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                SuperAttackColor;                                          // 0x089C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                FlashWhiteColor;                                           // 0x08AC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                DeniedByCoolDownColor;                                     // 0x08BC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              LastAbilityFailed;                                         // 0x08CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       LastAbilityFailedText;                                     // 0x08D0(0x0018) ELEMENT_SIZE_MISMATCH (Transient, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       LastAbilityFailedTags;                                     // 0x08DC(0x0018) (Transient, NativeAccessSpecifierPublic)
	class UAnimMontage*                                DeniedByCoolDownMontage;                                   // 0x08F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MoveSoundStimulusBroadcastInterval;                        // 0x08F8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_05TK[0x4];                                     // 0x08FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShowingOverdriveEffect;                                   // 0x0900(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortBuildingState>       BuildingState;                                             // 0x0901(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsTargeting;                                              // 0x0902(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6BA6[0x2D];                                    // 0x0903(0x002D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGuid                                       LastEquippedWeaponGUID;                                    // 0x0930(0x0010) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                BluePrintPlaceAnimation;                                   // 0x0940(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                BluePrintEditAnimation;                                    // 0x0944(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      InteractionActor;                                          // 0x0948(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPartChanged;                                             // 0x094C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    BlueprintPaperMID;                                         // 0x0958(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                                   BlueprintPaperPulseTimeline;                               // 0x095C(0x0080) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCustomColorComponent*                       AccessoryColorSwatchHandler[0x6];                          // 0x09DC(0x0018) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ARecastNavMesh*                              MyNavMesh;                                                 // 0x09F4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFortHero>                    Hero;                                                      // 0x09F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UCustomPlayerComponent*                      HACK_CustomPRIComponent;                                   // 0x0A00(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<FortniteGame_EFortCustomGender>        CharacterGender;                                           // 0x0A04(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<FortniteGame_EFortCustomBodyType>      CharacterBodyType;                                         // 0x0A05(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B20W[0x2];                                     // 0x0A06(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCustomCharacterPart*                        CharacterParts[0x6];                                       // 0x0A08(0x0018) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomColorSwatch*                          CharacterColorSwatches[0x2];                               // 0x0A20(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomColorSwatch*                          CharacterPartColorSwatches[0x6];                           // 0x0A28(0x0018) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                      CharacterPartSkeletalMeshComponents[0x6];                  // 0x0A40(0x0018) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomCharacterPart*                        PreviousCharacterParts[0x6];                               // 0x0A58(0x0018) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACustomCharacterPartModifier*                CharacterPartModifiers[0x6];                               // 0x0A70(0x0018) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortCharacterPartsRepMontageInfo           RepCharPartAnimMontageInfo;                                // 0x0A88(0x0014) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4KNK[0x4];                                     // 0x0A9C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CarriedObjectAttachmentSocket;                             // 0x0AA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TargettingZOffset;                                         // 0x0AA8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 MiniMapIconBrush;                                          // 0x0AAC(0x0074) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 AboveBelowMiniMapIconBrush;                                // 0x0B20(0x0074) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 FarOffMiniMapIconBrush;                                    // 0x0B94(0x0074) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              MaxIndicatorVisibilityDistForEnemies;                      // 0x0C08(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortPickup*>                         IncomingPickups;                                           // 0x0C0C(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortPickupEntryData>                PickupDirectionData;                                       // 0x0C18(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UParticleSystem*                             SpawnParticles;                                            // 0x0C24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  SpawnSound;                                                // 0x0C28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NumSecondsOnGroundBeforeStoppingRagdoll;                   // 0x0C2C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_72VD[0x8];                                     // 0x0C30(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bDamagedEnemy : 1;                                         // 0x0C38(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N8CD[0x7];                                     // 0x0C39(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           PlayerStatus;                                              // 0x0C40(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAnimNotifyState_RootMotionInterrupt*> RootMotionInterruptNotifyStack;                            // 0x0C44(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UAnimMontage*>                        RootMotionInterruptMontageStack;                           // 0x0C50(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WS7V[0x4];                                     // 0x0C5C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortVisibilityComponent*                    VisibilityComponent;                                       // 0x0C60(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                       BlendablesPostProcessComp;                                 // 0x0C64(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C2GW[0x8];                                     // 0x0C68(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerPawn");
		return ptr;
	}



	void ToggleGender();
	void ToggleBodyType();
	float TimeFromJumpApex();
	void SwitchToPreviousPart(const struct FString& PartName);
	void SwitchToNextPart(const struct FString& PartName);
	void SetVectorParameterValueForBodyParts(const struct FName& ParameterName, const struct FLinearColor& Value);
	void SetVectorParameterValueForAllCharacterParts(const struct FName& ParameterName, const struct FLinearColor& Value);
	void SetHomeActor(class AActor* NewActor);
	void SetFirstPersonCamera(bool bNewUseFirstPersonCamera);
	void ServerToggleGender();
	void ServerToggleBodyType();
	void ServerRootMotionInterruptNotifyStopMontage(class UAnimMontage* MontageToStop);
	void ServerPlayDeniedByCoolDown();
	void ServerHandlePickup(class AFortPickup* Pickup, float InFlyTime, const struct FVector& InStartDirection, bool bPlayPickupSound);
	void ServerCyclePart(TEnumAsByte<FortniteGame_EFortCustomPartType> Part, bool bNextPart);
	void ServerCycleOutfit(bool bNextOutfit);
	void ServerCycleColorSwatch(TEnumAsByte<FortniteGame_EColorSwatchType> SwatchType, bool bNext);
	void ServerCycleAccessoryColorSwatch(TEnumAsByte<FortniteGame_EFortCustomPartType> Part, bool bNext);
	void ServerChoosePart(TEnumAsByte<FortniteGame_EFortCustomPartType> Part, class UCustomCharacterPart* ChosenCharacterPart);
	void ServerChooseGender(TEnumAsByte<FortniteGame_EFortCustomGender> Gender);
	void RandomizeOutfit(const struct FString& GenderString);
	void RandomizeCharacter(const struct FString& GenderString);
	bool PartOutfitIsComplete(TEnumAsByte<FortniteGame_EFortCustomPartType> Part);
	void OnRep_CharPartAnimMontageInfo();
	void OnCoolDownStarted();
	void OnCoolDownEnded();
	void OnCharacterPartsReinitialized();
	void ListCharacterParts(const struct FString& GenderAndOrPartString);
	bool IsSprinting();
	void InternalServerSetTargeting(bool bNewTargeting);
	void HandleInStasis();
	float GetStamina();
	class USkeletalMeshComponent* GetSkeletalMeshForPartType(TEnumAsByte<FortniteGame_EFortCustomPartType> PartType);
	float GetPercentageOutfitComplete(TEnumAsByte<FortniteGame_EFortCustomPartType> Part);
	struct FVector GetNavLocation();
	float GetMaxStamina();
	float GetJumpZ();
	class AActor* GetHomeActor();
	void GetGender(bool* IsMale, bool* IsFemale);
	TEnumAsByte<FortniteGame_EFortCustomGender> GetCharacterGender();
	TEnumAsByte<FortniteGame_EFortCustomBodyType> GetCharacterBodyType();
	float DefaultTimeToJumpApex();
	void CyclePreviousOutfit();
	void CycleNextOutfit();
	void ClientNotifyAbilityFailed(class UGameplayAbility* FailedAbility, const struct FGameplayTagContainer& FailedReason);
	bool CanPredictJumpApex();
};

// Class FortniteGame.FortPlayerState
// 0x036C (FullSize[0x0614] - InheritedSize[0x02A8])
class AFortPlayerState : public APlayerState
{
public:
	unsigned char                                      UnknownData_IRQT[0xC];                                     // 0x02A8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bIsWorldDataOwner : 1;                                     // 0x02B4(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bIsGameSessionOwner : 1;                                   // 0x02B4(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_REB1[0x3B];                                    // 0x02B5(0x003B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bIsGameSessionAdmin : 1;                                   // 0x02F0(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bIsReadyToContinue : 1;                                    // 0x02F0(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bHasFinishedLoading : 1;                                   // 0x02F0(0x0001) BIT_FIELD (Net, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bHasStartedPlaying : 1;                                    // 0x02F0(0x0001) BIT_FIELD (Net, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3PXO[0x3];                                     // 0x02F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FUniqueNetIdRepl                            PartyOwnerUniqueId;                                        // 0x02F4(0x0008) (Net, RepNotify, NativeAccessSpecifierPublic)
	int                                                WorldPlayerId;                                             // 0x02FC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     HeroId;                                                    // 0x0300(0x000C) (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHeroType*                               HeroType;                                                  // 0x030C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EP3J[0x1C];                                    // 0x0310(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentCharXP;                                             // 0x032C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WDPI[0x54];                                    // 0x0330(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AFortPickup>                  MyBackpackPickup;                                          // 0x0384(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortCustomGender>        CharacterGender;                                           // 0x038C(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortCustomBodyType>      CharacterBodyType;                                         // 0x038D(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YZGE[0x2];                                     // 0x038E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCustomCharacterPart*                        CharacterParts[0x6];                                       // 0x0390(0x0018) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                          CharacterColorSwatches[0x2];                               // 0x03A8(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomPlayerComponent*                      CustomPRIComponent;                                        // 0x03B0(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AFortPlayerPawn>              CachedPawn;                                                // 0x03B4(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                          CharacterPartColorSwatches[0x6];                           // 0x03BC(0x0018) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortTeamInfo*                               PlayerTeam;                                                // 0x03D4(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FReplicatedStatValues                       ReplicatedStats_Campaign[0x21];                            // 0x03D8(0x0108) (Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FReplicatedStatValues                       ReplicatedStats_Zone[0x21];                                // 0x04E0(0x0108) (Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EReadyCheckState>         ReadyCheckState;                                           // 0x05E8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5UUK[0x3];                                     // 0x05E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      HomeActor;                                                 // 0x05EC(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortPlayerAttributeSets                    AttributeSets;                                             // 0x05F0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                    // 0x0608(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerAttributesProxyActor*             PlayerAttributesProxyActor;                                // 0x060C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B64D[0x4];                                     // 0x0610(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerState");
		return ptr;
	}



	void OnRep_SessionOwner();
	void OnRep_ScoreStatChanged();
	void OnRep_PlayerTeam();
	void OnRep_PlayerName();
	void OnRep_PartyOwner();
	void OnRep_HomeActor(class AActor* OldHomeActor);
	void OnRep_HeroType();
	void OnRep_HeroID();
	void OnRep_CurrentCharXP();
	void OnRep_CharacterParts();
	void OnRep_CharacterColorSwatches();
	void OnRep_AccessoryColorSwatches();
	struct FUniqueNetIdRepl GetUniqueID();
	class AFortPlayerAttributesProxyActor* GetPlayerAttributesProxyActor();
	class AFortPlayerPawn* GetCurrentPawn();
};

// Class FortniteGame.FortPlayerAttributesProxyActor
// 0x0020 (FullSize[0x0260] - InheritedSize[0x0240])
class AFortPlayerAttributesProxyActor : public AActor
{
public:
	unsigned char                                      UnknownData_LZMU[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortPlayerAttributeSets                    AttributeSets;                                             // 0x0244(0x0018) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                    // 0x025C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerAttributesProxyActor");
		return ptr;
	}



};

// Class FortniteGame.MyTownManager
// 0x0308 (FullSize[0x0324] - InheritedSize[0x001C])
class UMyTownManager : public UObject
{
public:
	unsigned char                                      UnknownData_MWFB[0x54];                                    // 0x001C(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortPlayerAttributesProxyActor*             HomebaseAttributesProxyActor;                              // 0x0070(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V45X[0x2B0];                                   // 0x0074(0x02B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.MyTownManager");
		return ptr;
	}



	void RegisterSlotCamera(int MapSlotId, class UCameraComponent* InCameraComponent);
};

// Class FortniteGame.HomeBaseContext
// 0x0098 (FullSize[0x00B4] - InheritedSize[0x001C])
class UHomeBaseContext : public UBlueprintContextBase
{
public:
	struct FScriptMulticastDelegate                    OnOpenBuildingPanel;                                       // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCloseBuildingPanel;                                      // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnOpenOverview;                                            // 0x0034(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCloseOverview;                                           // 0x0040(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWorkerPreviewStateChanged;                               // 0x004C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHomebaseInventoryUpdated;                                // 0x0058(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T007[0x14];                                    // 0x0064(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, class UHomeBaseMainBuilding*> CachedBuildings;                                           // 0x0078(0x0050) ELEMENT_SIZE_MISMATCH (ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.HomeBaseContext");
		return ptr;
	}



	void UnslotAllWorkers();
	bool ShouldShowBang(class UHomeBaseBuilding* Building);
	void RequestOpenOverview();
	void RequestOpenBuildingPanel(class UHomeBaseMainBuilding* Building);
	void RequestCloseOverview();
	void RequestCloseBuildingPanel();
	void OpenOverviewDelegate__DelegateSignature();
	void OpenBuildingPanelDelegate__DelegateSignature(const struct FString& BuildingTemplateId);
	void NotifyBuildingPanelOpened(class UHomeBaseMainBuilding* Building);
	void NotifyBuildingPanelClosed();
	bool IsPreviewingWorkerSlotting();
	bool IsBuildingPanelOpen();
	void GetWorkerSlottingPreviewState(class UFortWorker** OutWorkerItem, class UHomeBaseMainBuilding** OutHostBuilding, int* OutSlotIndex);
	TArray<struct FWorkerSetBonusState> GetWorkerSetBonusStates(TArray<class UFortWorker*> Workers);
	int GetWorkerRatingAtLevelForBuilding(class UFortWorker* WorkerItem, int WorkerLevel, class UHomeBaseMainBuilding* Building);
	void GetWorkerPreviewStatus(bool* OutIsPreviewing, class UFortWorker** OutWorker, bool* OutMatchesPersonality, bool* OutMatchesBuildingType, struct FWorkerSetBonusState* OutSetBonusState);
	void STATIC_GetStaticSetBonusData(const struct FGameplayTag& InSetBonusTag, TEnumAsByte<FortniteGame_EFortBrushSize> InBrushSize, int* OutRequiredWorkersCount, struct FText* OutSetBonusName, struct FSlateBrush* OutBrush);
	class UMyTownData* GetHomeBaseData();
	struct FString GetBuildingTemplateIdFromInstanceId(const struct FString& InstanceId);
	TArray<struct FSingleBuildingBonusDescription> GetBuildingBonusDescriptionsForSetBonus(const struct FGameplayTag& SetBonusTag);
	class UHomeBaseMainBuilding* GetBuilding(const struct FString& TemplateId);
	TArray<class UHomeBaseMainBuilding*> GetAllBuildings();
	int GetAccountLevel();
	void EndWorkerPreview();
	void CloseOverviewDelegate__DelegateSignature();
	void CloseBuildingPanelDelegate__DelegateSignature();
	void BeginWorkerPreview(class UFortWorker* WorkerItem, class UHomeBaseMainBuilding* BuildingToOccupy, int WorkerSlotToOccupy);
	void AutoSlotAllWorkers();
};

// Class FortniteGame.BlueprintContextLibrary
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UBlueprintContextLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BlueprintContextLibrary");
		return ptr;
	}



	class UBlueprintContextBase* STATIC_GetContext(class UObject* ContextObject, class UClass* Class);
};

// Class FortniteGame.FortSpawnableByPlacementSystemInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortSpawnableByPlacementSystemInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSpawnableByPlacementSystemInterface");
		return ptr;
	}



	struct FGuid GetMissionGuid();
	class AFortMission* GetMission();
};

// Class FortniteGame.BuildingActor
// 0x01D8 (FullSize[0x0418] - InheritedSize[0x0240])
class ABuildingActor : public AActor
{
public:
	unsigned char                                      UnknownData_BPF0[0x30];                                    // 0x0240(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortBuildingType>        BuildingType;                                              // 0x0270(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MGC1[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGuid                                       MyGuid;                                                    // 0x0274(0x0010) (Net, ZeroConstructor, DuplicateTransient, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FText                                       InteractionText;                                           // 0x0284(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       DisplayName;                                               // 0x0290(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                OwnerPersistentID;                                         // 0x029C(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            AreaClass;                                                 // 0x02A0(0x0018) (Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            NavigationLinksClass;                                      // 0x02B8(0x0018) (Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentBuildingLevel;                                      // 0x02D0(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaximumBuildingLevel;                                      // 0x02D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bUpgradeUsesSameClass : 1;                                 // 0x02D8(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bSupportsQuickUpgrade : 1;                                 // 0x02D8(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bDisplayLevelInInfoWidget : 1;                             // 0x02D8(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bAllowUpgradeRegardlessOfPlayerBuildLevel : 1;             // 0x02D8(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IZA4[0x3];                                     // 0x02D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BuildingAttributeSetClass;                                 // 0x02DC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBuildingActorSet*                       BuildingAttributeSet;                                      // 0x02E0(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                    // 0x02E4(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSurpressHealthBar;                                        // 0x02E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bRecentlyDamaged;                                          // 0x02E9(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RR4R[0x6];                                     // 0x02EA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       DefaultTags;                                               // 0x02F0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       ConstTags;                                                 // 0x0308(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       StaticGameplayTags;                                        // 0x0320(0x0018) (Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EDynamicBuildingPlacementType> DynamicBuildingPlacementType;                              // 0x0338(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_ENavigationObstacleOverride> NavigationObstacleOverride;                                // 0x0339(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_83KC[0x2];                                     // 0x033A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bDestroyed : 1;                                            // 0x033C(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bPersistToWorld : 1;                                       // 0x033C(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bRefreshFullSaveDataBeforeZoneSave : 1;                    // 0x033C(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bBeingDragged : 1;                                         // 0x033C(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bRotateInPlaceGame : 1;                                    // 0x033C(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bIsNavigationModifier : 1;                                 // 0x033C(0x0001) BIT_FIELD (Edit, BlueprintVisible, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bBlockNavigationLinks : 1;                                 // 0x033C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCanExportNavigationCollisions : 1;                        // 0x033C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCanExportNavigationObstacle : 1;                          // 0x033D(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bMirrorNavLinksX : 1;                                      // 0x033D(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bMirrorNavLinksY : 1;                                      // 0x033D(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bIgnoreMoveGoalCollisionRadius : 1;                        // 0x033D(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bForceDisableRootNavigationRelevance : 1;                  // 0x033D(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bForceAutomationPass : 1;                                  // 0x033D(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bWorldReadyCalled : 1;                                     // 0x033D(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bUseDefaultCullDistance : 1;                               // 0x033D(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bBeingRotatedOrScaled : 1;                                 // 0x033E(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bBeingTranslated : 1;                                      // 0x033E(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bRotateInPlaceEditor : 1;                                  // 0x033E(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bEditorPlaced : 1;                                         // 0x033E(0x0001) BIT_FIELD (Net, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bPlayerPlaced : 1;                                         // 0x033E(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bShouldTick : 1;                                           // 0x033E(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bUsesDayPhaseChange : 1;                                   // 0x033E(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bIsDynamic : 1;                                            // 0x033E(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bIsDynamicOnDedicatedServer : 1;                           // 0x033F(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bIsMovable : 1;                                            // 0x033F(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bRegisteredForDayPhaseChange : 1;                          // 0x033F(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bUseAbilitySystemComponent : 1;                            // 0x033F(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bForceDamagePing : 1;                                      // 0x033F(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              LDMaxDrawDistance;                                         // 0x0340(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LifespanAfterDeath;                                        // 0x0344(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bDoNotBlockBuildings : 1;                                  // 0x0348(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDestroyOnPlayerBuildingPlacement : 1;                     // 0x0348(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bUseCentroidForBlockBuildingsCheck : 1;                    // 0x0348(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bIsPlayerBuildable : 1;                                    // 0x0348(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V1HQ[0x3];                                     // 0x0349(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDied;                                                    // 0x034C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDamaged;                                                 // 0x0358(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bFireBuiltAndDestroyedEvents;                              // 0x0364(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LPXQ[0x3];                                     // 0x0365(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortMission*                                AssociatedMissionParam;                                    // 0x0368(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EPhysicalSurface>               PrimarySurfaceType;                                        // 0x036C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortBaseWeaponDamage>    WeaponResponseType;                                        // 0x036D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X9TJ[0x2];                                     // 0x036E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortPlacementActor*                         OriginatingPlacementActor;                                 // 0x0370(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteract;                                                // 0x0374(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bAllowInteract;                                            // 0x0380(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bAllowHostileBlueprintInteraction;                         // 0x0381(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HTHA[0x2];                                     // 0x0382(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCurveTableRowHandle                        InteractionSpeed;                                          // 0x0384(0x000C) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5TAU[0x1C];                                    // 0x0390(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DataVersion;                                               // 0x03AC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastTakeHitTimeTimeout;                                    // 0x03B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortDamageSource>                   CurFrameDmgSources;                                        // 0x03B4(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                              CullDistance;                                              // 0x03C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        HealthOverride;                                            // 0x03C4(0x000C) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              SnapGridSize;                                              // 0x03D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VertSnapGridSize;                                          // 0x03D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     SnapOffset;                                                // 0x03D8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     CentroidOffset;                                            // 0x03E4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     BaseLocToPivotOffset;                                      // 0x03F0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FString                                     CustomState;                                               // 0x03FC(0x000C) (Net, ZeroConstructor, SaveGame, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTeam>                Team;                                                      // 0x0408(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_51GQ[0x3];                                     // 0x0409(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bIsNavigationRelevant : 1;                                 // 0x040C(0x0001) BIT_FIELD (Edit, NoDestructor, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bUseHotSpotAsMoveGoalReplacement : 1;                      // 0x040C(0x0001) BIT_FIELD (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RUTB[0x3];                                     // 0x040D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBuildingActorHotSpotConfig*                 HotSpotConfig;                                             // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3N48[0x4];                                     // 0x0414(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingActor");
		return ptr;
	}



	bool UseDefaultHealthBar();
	void SilentDie();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void SetNavigationModifier(bool bEnableModifier);
	void SetCustomState(const struct FString& NewState);
	void SetCanExportNavigationObstacle(bool InCanExportNavigationObstacle);
	void PlacedByPlacementTool();
	void OnWorldReady();
	void OnRep_CustomState();
	void OnRep_CurrentBuildingLevel();
	void OnMatchStarted();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDayPhaseChanged(TEnumAsByte<FortniteGame_EFortDayPhase> CurrentDayPhase, TEnumAsByte<FortniteGame_EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnBuildingActorInitialized(TEnumAsByte<FortniteGame_EFortBuildingInitializationReason> InitializationReason, TEnumAsByte<FortniteGame_EFortBuildingPersistentState> BuildingPersistentState);
	bool IsPlayerBuilt();
	bool IsDamaged();
	bool IsAcceptablePositionForPlacement(const struct FVector& InLocation, const struct FRotator& InRotation, class AFortDecoTool* DecoTool, bool bIsCDO, struct FText* OutFailureReason);
	void InitializeKismetSpawnedBuildingActor(class ABuildingActor* BuildingOwner, class AFortPlayerController* SpawningController);
	bool HasHealthLeft();
	void HandleDestroyed();
	class AFortPlayerState* GetOwningPlayerState();
	class AController* GetOwningController();
	float GetMissingHealth();
	float GetMaxHealth();
	float GetHealthPercent();
	float GetHealth();
	struct FString GetCustomState();
	int GetCurrentBuildingLevel();
	struct FVector GetCentroid();
	void GameplayCue_InstantDeath(TEnumAsByte<GameplayAbilities_EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Healing(TEnumAsByte<GameplayAbilities_EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(TEnumAsByte<GameplayAbilities_EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void CustomStateChanged();
	void BlueprintOnInteract(class AFortPawn* InteractingPawn);
	void BlueprintOnBeginInteract();
	struct FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn);
	struct FText BlueprintGetFailedInteractionString(class AFortPawn* InteractingPawn);
	bool BlueprintCanInteract(class AFortPawn* InteractingPawn);
};

// Class FortniteGame.FortDamageSourceInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortDamageSourceInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDamageSourceInterface");
		return ptr;
	}



};

// Class FortniteGame.BuildingGameplayActor
// 0x0070 (FullSize[0x0488] - InheritedSize[0x0418])
class ABuildingGameplayActor : public ABuildingActor
{
public:
	unsigned char                                      UnknownData_QEZH[0x8];                                     // 0x0418(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScalableFloat                              InitialMaxHealth;                                          // 0x0420(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortAbilitySet*                             AbilitySet;                                                // 0x0434(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDamageSet*                              DamageSet;                                                 // 0x0438(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         DamageStatHandle;                                          // 0x043C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bIgnoreInstigatorCollision;                                // 0x0448(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bAddOwnerVelocity;                                         // 0x0449(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B2IX[0x2];                                     // 0x044A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBuildingGameplayActorAbilityDeliveryInfo   DeliverableAbilityInfo;                                    // 0x044C(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7BBJ[0x8];                                     // 0x047C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProjectileMovementComponent*                ProjectileMovementComponent;                               // 0x0484(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingGameplayActor");
		return ptr;
	}



	void SetInitialVelocity(const struct FVector& InitialVelocity);
	void SetIgnoreInstigatorCollision(bool bShouldIgnore);
	void K2_RemoveGameplayCue(const struct FGameplayTag& GameplayCueTag);
	void K2_ExecuteGameplayCueWithParams(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters);
	void K2_ExecuteGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayEffectContextHandle& Context);
	void K2_AddGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayEffectContextHandle& Context);
	struct FTransform GetTargetingSourceTransform(TEnumAsByte<FortniteGame_EFortAbilityTargetingSource> Source);
	void EnableAbilityDeliveryInfo(const struct FGameplayTag& BucketTag);
	void DisableAbilityDeliveryInfo(const struct FGameplayTag& BucketTag);
};

// Class FortniteGame.BuildingCapturePointActor
// 0x0090 (FullSize[0x0518] - InheritedSize[0x0488])
class ABuildingCapturePointActor : public ABuildingGameplayActor
{
public:
	unsigned char                                      bUseHUDIndicator : 1;                                      // 0x0488(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YRW4[0x3];                                     // 0x0489(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       HUDStyle;                                                  // 0x048C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     HUDOffset;                                                 // 0x0494(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bHUDClampToScreenEdge : 1;                                 // 0x04A0(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L6UE[0x7];                                     // 0x04A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USphereComponent*                            CollisionComponent;                                        // 0x04A8(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bActivated : 1;                                            // 0x04AC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7UXK[0x3];                                     // 0x04AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EContentionRules>         ContentionRules;                                           // 0x04B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZUTK[0x3];                                     // 0x04B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TEnumAsByte<FortniteGame_EFortTeam>>        TeamsBarredFromCapture;                                    // 0x04B4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              PercentIncreasePerPlayerCaptor;                            // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentIncreasePerAICaptor;                                // 0x04C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentDecreaseNoCaptor;                                   // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bLocked : 1;                                               // 0x04CC(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VAR2[0x3];                                     // 0x04CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UnlockInterval;                                            // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EUnlockRules>             UnlockRules;                                               // 0x04D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZRIZ[0x3];                                     // 0x04D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumCapturingPoint;                                         // 0x04D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTeam>                TeamCapturingPoint;                                        // 0x04DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTeam>                TeamControllingPoint;                                      // 0x04DD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTeam>                TeamOwningPoint;                                           // 0x04DE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_ECaptureState>            CaptureState;                                              // 0x04DF(0x0001) (Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CapturePercentage;                                         // 0x04E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReplicatedCapturePercentage;                               // 0x04E4(0x0004) (Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCapturePointStateChanged;                                // 0x04E8(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamOwningPointChanges;                                  // 0x04F4(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5KW7[0x18];                                    // 0x0500(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingCapturePointActor");
		return ptr;
	}



	void SetActivatedState(bool bInActivated);
	void OnRep_ReplicatedCapturePercentage();
	void OnRep_CaptureState();
	void OnRep_bLocked();
	void OnRep_bActivated();
	void OnLeaveCapturePoint(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnEnterCapturePoint(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnCapturePointStateChange(TEnumAsByte<FortniteGame_ECaptureState> InState, TEnumAsByte<FortniteGame_EFortTeam> InTeam);
	void OnCapturePointLockStateChange(bool bInLocked);
	void OnCapturePointActiveStateChange(bool bInActive);
	TEnumAsByte<FortniteGame_ECaptureState> GetCaptureState();
};

// Class FortniteGame.BuildingFlagSpawn
// 0x0050 (FullSize[0x04D8] - InheritedSize[0x0488])
class ABuildingFlagSpawn : public ABuildingGameplayActor
{
public:
	unsigned char                                      UnknownData_9NPL[0x4];                                     // 0x0488(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     HUDIndicatorRelativeOffset;                                // 0x048C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bPickupOnTouch;                                            // 0x0498(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OTTI[0x3];                                     // 0x0499(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CarriedObjectClass;                                        // 0x049C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RelativeTranslation;                                       // 0x04A0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class AFortCarriedObject*                          SpawnedObject;                                             // 0x04AC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       EmptyString;                                               // 0x04B0(0x0018) ELEMENT_SIZE_MISMATCH (Protected, NativeAccessSpecifierProtected)
	struct FText                                       SearchString;                                              // 0x04BC(0x0018) ELEMENT_SIZE_MISMATCH (Protected, NativeAccessSpecifierProtected)
	float                                              SpawnDelay;                                                // 0x04C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VTWF[0xC];                                     // 0x04CC(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingFlagSpawn");
		return ptr;
	}



	void SpawnCarriedObject();
	void OnCarriedObjectDetachedEvent();
	void OnCarriedObjectAttachedEvent();
	bool IsSpawnedObjectAwayFromBase();
};

// Class FortniteGame.BuildingItemCollectorActor
// 0x004C (FullSize[0x04D4] - InheritedSize[0x0488])
class ABuildingItemCollectorActor : public ABuildingGameplayActor
{
public:
	unsigned char                                      UnknownData_5M78[0x1C];                                    // 0x0488(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortItemCollectorBehavior> ItemCollectorBehavior;                                     // 0x04A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortItemCollectorState>  ItemCollectorState;                                        // 0x04A5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTeam>                ControllingTeam;                                           // 0x04A6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PS1Y[0x1];                                     // 0x04A7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortWorldItemDefinition*                    ItemToDeposit;                                             // 0x04A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 MaxDepositCurve;                                           // 0x04AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int>                                        TeamDepositAmounts;                                        // 0x04B0(0x000C) (Edit, Net, ZeroConstructor, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<int>                                        TeamDepositGoals;                                          // 0x04BC(0x000C) (Edit, Net, ZeroConstructor, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6GHY[0xC];                                     // 0x04C8(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingItemCollectorActor");
		return ptr;
	}



	void UpdateTeamDepositValues(TArray<int> DepositAmounts, TArray<int> DepositGoals);
	void SetItemCollectorState(TEnumAsByte<FortniteGame_EFortItemCollectorState> InItemCollectorState);
	void OnTeamReachedDepositGoal(TEnumAsByte<FortniteGame_EFortTeam> InControllingTeam);
	void OnRep_TeamDepositGoals();
	void OnRep_TeamDepositAmounts();
	void OnRep_ItemCollectorState();
	void OnRep_ControllingTeam();
	void OnItemCollectorStateChanged(TEnumAsByte<FortniteGame_EFortItemCollectorState> InItemCollectorState);
	int GetTeamReachedGoalCount(TEnumAsByte<FortniteGame_EFortTeam> InTeam);
	int GetTeamDepositGoal(TEnumAsByte<FortniteGame_EFortTeam> InTeam);
	int GetTeamDepositAmount(TEnumAsByte<FortniteGame_EFortTeam> InTeam);
	int GetNumberOfTeamCaptures(TEnumAsByte<FortniteGame_EFortTeam> InTeam);
};

// Class FortniteGame.SBAGrantedBuildingGameplayActor
// 0x0004 (FullSize[0x048C] - InheritedSize[0x0488])
class ASBAGrantedBuildingGameplayActor : public ABuildingGameplayActor
{
public:
	struct FTeamStrategicBuildingHandle                OwningSBAHandle;                                           // 0x0488(0x0004) (Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.SBAGrantedBuildingGameplayActor");
		return ptr;
	}



	class AStrategicBuildingActor* GetOwnerStrategicBuildingActor();
};

// Class FortniteGame.StrategicBuildingActor
// 0x00D8 (FullSize[0x0560] - InheritedSize[0x0488])
class AStrategicBuildingActor : public ABuildingGameplayActor
{
public:
	float                                              HealthBarVisibilityDistance;                               // 0x0488(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealthBarVisibilityDistanceSquared;                        // 0x048C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               TouchBoxComponent;                                         // 0x0490(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortStrategicBuildingCategory> StrategicBuildingCategory;                                 // 0x0494(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XJL0[0x3];                                     // 0x0495(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UFortAbilitySet*>                     PermanentInherentAbilitySets;                              // 0x0498(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FStrategicBuildingLevelInformation>  LevelInfo;                                                 // 0x04A4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              ProximityPulseInterval;                                    // 0x04B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      DeathPenaltyAbility;                                       // 0x04B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             DeathParticles;                                            // 0x04B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  DeathSound;                                                // 0x04BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortGadgetItemDefinition*                   SpawnedFromItemDefinition;                                 // 0x04C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTeamStrategicBuildingHandle                SBAHandle;                                                 // 0x04C4(0x0004) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FStrategicBuildingActiveConstructionInfo    ConstructionProgress;                                      // 0x04C8(0x0014) (Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FStrategicBuildingLevelActiveCriteriaProgress> LevelProgress;                                             // 0x04DC(0x000C) (Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>               StrategicBuildingAbilitySets;                              // 0x04E8(0x000C) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>               PersistentlyAppliedAbilitySets;                            // 0x04F4(0x000C) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              DeferredTouchActorsToProcess;                              // 0x0500(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5NF7[0x40];                                    // 0x050C(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bIsActive : 1;                                             // 0x054C(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bHasGEsToApplyOnTouch : 1;                                 // 0x054C(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bHasGEsToApplyOnPulseTimer : 1;                            // 0x054C(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D28H[0x3];                                     // 0x054D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortVisibilityComponent*                    VisibilityComponent;                                       // 0x0550(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  MiniMapIcon;                                               // 0x0554(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TKHX[0x8];                                     // 0x0558(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.StrategicBuildingActor");
		return ptr;
	}



	void SetupVisibilityComponent();
	void SetupIndicators();
	void ProcessDeferredTouchActors();
	void OnRep_ConstructionProgress();
	void OnRep_bIsActive();
	void OnConstructionTickPlayEffects(float DeltaTime, float ElapsedPct, int ConstructionLvl);
	void OnConstructionStartedPlayEffects(float ServerStartTime, float ServerEndTime, float CurrentServerTime, float ElapsedPct, int ConstructionLvl);
	void OnConstructionEndedPlayEffects(int ConstructionLevel);
	void OnActiveStatusChanged(bool bNewActiveStatus);
	bool IsActive();
	void GiveItemFromStrategicBuildingToPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int NumberToGive);
	float GetMaxLevelUnlockProgress(int InLevel);
	struct FVector GetDeathEffectsScale();
	struct FRotator GetDeathEffectsRotation();
	struct FVector GetDeathEffectsLocation();
	float GetCurrentLevelUnlockProgress(int InLevel);
	bool AttemptIncrementLevelUnlockProgress(int InLevel, float InProgressDelta);
	void ApplyProximityPulseEffects();
};

// Class FortniteGame.FortPvPBaseCornerstone
// 0x0024 (FullSize[0x0584] - InheritedSize[0x0560])
class AFortPvPBaseCornerstone : public AStrategicBuildingActor
{
public:
	unsigned char                                      bInvincible : 1;                                           // 0x0560(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AHXL[0x3];                                     // 0x0561(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCornerstoneDamaged;                                      // 0x0564(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCornerstoneOutOfHealth;                                  // 0x0570(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VWC8[0x8];                                     // 0x057C(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPBaseCornerstone");
		return ptr;
	}



	void SetInvincibility(bool bInInvincible);
	void OnRep_bInvincible();
	void OnInvincibilityChanged(bool bIsInvincible);
};

// Class FortniteGame.BuildingRift
// 0x0070 (FullSize[0x0488] - InheritedSize[0x0418])
class ABuildingRift : public ABuildingActor
{
public:
	float                                              DistToTarget;                                              // 0x0418(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PathLengthToTarget;                                        // 0x041C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BDHR[0x4];                                     // 0x0420(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpawnDelay;                                                // 0x0424(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnvQuery*                                   EnvironmentQuery;                                          // 0x0428(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FEnvNamedValue>                      QueryParams;                                               // 0x042C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                              QueryRadius;                                               // 0x0438(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                             FreeSpawnSlots;                                            // 0x043C(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortSpawnSlotData>                  UsedSpawnSlots;                                            // 0x0448(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S7VN[0x8];                                     // 0x0454(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bRiftIsVisible;                                            // 0x045C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bRiftIsActive;                                             // 0x045D(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsReadyToSpawnAI;                                         // 0x045E(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bHasBadRiftSlots;                                          // 0x045F(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BXNI[0x28];                                    // 0x0460(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingRift");
		return ptr;
	}



	void OnSpawnAI();
	void OnRep_RiftIsVisible();
	void OnRep_RiftIsActive();
	void OnRemoved();
	void OnReceiveSpawnedAIPawn(class AFortAIPawn* SpawnedAI);
	void OnPlaced();
	void OnDeactivated();
	void OnActivated();
	void BroadcastRiftSpawningAI();
};

// Class FortniteGame.FortTakerRift
// 0x001C (FullSize[0x04A4] - InheritedSize[0x0488])
class AFortTakerRift : public ABuildingRift
{
public:
	TAssetPtr<class UParticleSystem>                   TakerRiftParticle;                                         // 0x0488(0x0018) (Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    TakerRiftParticleComponent;                                // 0x04A0(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTakerRift");
		return ptr;
	}



};

// Class FortniteGame.FortCrackEffect
// 0x0098 (FullSize[0x02D8] - InheritedSize[0x0240])
class AFortCrackEffect : public AActor
{
public:
	unsigned char                                      UnknownData_D59G[0xC];                                     // 0x0240(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bFadingOut;                                                // 0x024C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MTEC[0x3];                                     // 0x024D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ABuildingSMActor>             ParentBuilding;                                            // 0x0250(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	unsigned char                                      bHit : 1;                                                  // 0x0258(0x0001) BIT_FIELD (Net, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WKJ8[0x3];                                     // 0x0259(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CrackHitCount;                                             // 0x025C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CrackLevel;                                                // 0x0260(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxCrackLevel;                                             // 0x0264(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                         StartingLocation;                                          // 0x0268(0x000C) (Edit, BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal                   StartingNormal;                                            // 0x0274(0x000C) (Edit, BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal                   HitNormal;                                                 // 0x0280(0x000C) (Net, RepNotify, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EPhysicalSurface>               PhysicalSurfaceType;                                       // 0x028C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I4J9[0x3];                                     // 0x028D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TAssetPtr<class UPhysicalMaterial>                 WoodMaterial;                                              // 0x0290(0x0018) (Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UPhysicalMaterial>                 StoneMaterial;                                             // 0x02A8(0x0018) (Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UPhysicalMaterial>                 MetalMaterial;                                             // 0x02C0(0x0018) (Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCrackEffect");
		return ptr;
	}



	void OnStartDirectionEffect();
	void OnRep_PhysicalSurfaceType();
	void OnRep_HitNormal();
	void OnHitCrack();
	void OnFadeOut();
	void OnBounceAnimationUpdate(const struct FFortBounceData& BounceData);
	void NetOnHitCrack();
	void NetFadeOut();
	bool HasStartingPosition();
};

// Class FortniteGame.FortAttachToActorInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortAttachToActorInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAttachToActorInterface");
		return ptr;
	}



	class AActor* GetActorAttachedTo();
};

// Class FortniteGame.BuildingSMActor
// 0x052C (FullSize[0x0944] - InheritedSize[0x0418])
class ABuildingSMActor : public ABuildingActor
{
public:
	unsigned char                                      UnknownData_44ZI[0x4];                                     // 0x0418(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBuildingTextureData*                        TextureData[0x4];                                          // 0x041C(0x0010) (Edit, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 StaticMesh;                                                // 0x042C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTierMeshSets>                       AlternateMeshes;                                           // 0x0430(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                AltMeshIdx;                                                // 0x043C(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ForcedLootTier;                                            // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortResourceType>        ResourceType;                                              // 0x0444(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_24GS[0x3];                                     // 0x0445(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bAllowBuildingCheat : 1;                                   // 0x0448(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bMirrored : 1;                                             // 0x0448(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, DisableEditOnTemplate, SaveGame, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bNoCollision : 1;                                          // 0x0448(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bNoCameraCollision : 1;                                    // 0x0448(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bNoPawnCollision : 1;                                      // 0x0448(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bNoAIPawnCollision : 1;                                    // 0x0448(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	unsigned char                                      bNoWeaponCollision : 1;                                    // 0x0448(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bNoRangedWeaponCollision : 1;                              // 0x0448(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bNoProjectileCollision : 1;                                // 0x0449(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDoNotBlockInteract : 1;                                   // 0x0449(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bBlocksCeilingPlacement : 1;                               // 0x0449(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bBlocksAttachmentPlacement : 1;                            // 0x0449(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bSupportsRepairing : 1;                                    // 0x0449(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bRandomYawOnPlacement : 1;                                 // 0x0449(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bRandomScaleOnPlacement : 1;                               // 0x0449(0x0001) BIT_FIELD (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1ZD3[0x2];                                     // 0x044A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   RandomScaleRange;                                          // 0x044C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortBounceData                             BounceData;                                                // 0x0454(0x0030) (Transient, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        BASEEffectMeshComponent;                                   // 0x0484(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBuildingNavObstacle>                NavObstacles;                                              // 0x0488(0x000C) (Edit, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	class UClass*                                      CachedNavAreaHusk;                                         // 0x0494(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CachedNavAreaSmasher;                                      // 0x0498(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PGSY[0x14];                                    // 0x049C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ExpectedUpgradeLevel;                                      // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        HealthLevelModifierHandle;                                 // 0x04B4(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AFortCrackEffect>>     WeakSpotEffects;                                           // 0x04C0(0x000C) (Net, ZeroConstructor, Transient, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                               bAllowWeakSpots;                                           // 0x04CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseComplexForWeakSpots;                                   // 0x04CD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_014S[0x2];                                     // 0x04CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector_NetQuantize100                      ReplicatedDrawScale3D;                                     // 0x04D0(0x000C) (Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstanceConstant*                   ReplicatedMIC;                                             // 0x04DC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        StaticMeshComponent;                                       // 0x04E0(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       DestructionLootTierGroup;                                  // 0x04E4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       DestructionLootTierKey;                                    // 0x04EC(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingResourceAmountOverride;                            // 0x04F4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int                                                MaxResourcesToSpawn;                                       // 0x0500(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPropagatesBounceEffects;                                  // 0x0504(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RNLG[0x3];                                     // 0x0505(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             BreakEffect;                                               // 0x0508(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             DeathParticles;                                            // 0x050C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       DeathParticleSocketName;                                   // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UParticleSystem>                   FallbackDeathParticles;                                    // 0x0518(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  DeathSound;                                                // 0x0530(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             ConstructedEffect;                                         // 0x0534(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bNeedsDamageOverlay;                                       // 0x0538(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S8FG[0x3];                                     // 0x0539(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FRandomDayphaseFX>                   RandomDayphaseFXList;                                      // 0x053C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TAssetPtr<class UParticleSystem>                   FallbackConstructedEffect;                                 // 0x0548(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UParticleSystem>                   RepairEffect;                                              // 0x0560(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class USoundBase>                        ConstructionCompleteSound;                                 // 0x0578(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                             ConstructionAudioComponent;                                // 0x0590(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>            AnimatingMIDs;                                             // 0x0594(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        DamageOverlayComponent;                                    // 0x05A0(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    MIDDamageOverlay;                                          // 0x05A4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UMaterialInterface>                DamageMaterial;                                            // 0x05A8(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UCurveFloat>                       BounceCurve;                                               // 0x05C0(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageAmountStart;                                         // 0x05D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastDamageAmount;                                          // 0x05DC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHitResult                                  LastDamageHit;                                             // 0x05E0(0x0080) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4UQQ[0x54];                                    // 0x0660(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     BuildingPlacementDistance;                                 // 0x06B4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UBuildingEditModeMetadata*                   EditModePatternData;                                       // 0x06C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_27F6[0x8];                                     // 0x06C4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortConnectivityComponentData              ConnectivityData;                                          // 0x06CC(0x0010) (SaveGame, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          AnimatingMaterial;                                         // 0x06DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AnimatingSubObjects;                                       // 0x06E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumFrameSubObjects;                                        // 0x06E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      EditModeSupportClass;                                      // 0x06E8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeSupport*                    EditModeSupport;                                           // 0x06EC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealthToAutoBuild;                                         // 0x06F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccumulatedAutoBuildTime;                                  // 0x06F4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsInitiallyBuilding;                                      // 0x06F8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EBuildingReplacementType> BuildingReplacementType;                                   // 0x06F9(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EBuildingAnim>            CurBuildingAnimType;                                       // 0x06FA(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_53OP[0x1];                                     // 0x06FB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurAnimSubObjectNum;                                       // 0x06FC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurBuildingAnimStartTime;                                  // 0x0700(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurAnimSubObjectTargetNum;                                 // 0x0704(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UMaterialInterface>                BlueprintParentMaterial;                                   // 0x0708(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>            BlueprintMIDs;                                             // 0x0720(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        BlueprintMeshComp;                                         // 0x072C(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UCurveFloat>                       EditCurve;                                                 // 0x0730(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UCurveVector>                      BlueprintDamageCurve;                                      // 0x0748(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UCurveFloat>                       FullHealthAnimCurve;                                       // 0x0760(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UCurveFloat>                       RepairAnimCurve;                                           // 0x0778(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UCurveFloat>                       DynamicLODEffectCurve;                                     // 0x0790(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerStateZone*                        EditingPlayer;                                             // 0x07A8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LogicalBuildingIdx;                                        // 0x07AC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ICZ3[0x1C];                                    // 0x07B0(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  ConnectivityIcon;                                          // 0x07CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     BuildingAttachmentPointOffset;                             // 0x07D0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              BuildingAttachmentRadius;                                  // 0x07DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EBuildingAttachmentSlot>  BuildingAttachmentSlot;                                    // 0x07E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EBuildingAttachmentType>  BuildingAttachmentType;                                    // 0x07E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4XZT[0x2];                                     // 0x07E2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ABuildingSMActor*                            ParentActorToAttachTo;                                     // 0x07E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EPlacementType>           BuildingPlacementType;                                     // 0x07E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BXC4[0x3];                                     // 0x07E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayerGridSnapSize;                                        // 0x07EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingSMActor*>                    AttachedBuildingActors;                                    // 0x07F0(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ABuildingSMActor*>                    BuildingActorsAttachedTo;                                  // 0x07FC(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                            AttachmentPlacementBlockingActor;                          // 0x0808(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingConnectivityComponent*              ConnectivityComponent;                                     // 0x080C(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       LockedString;                                              // 0x0810(0x0018) ELEMENT_SIZE_MISMATCH (Protected, NativeAccessSpecifierProtected)
	struct FTimeline                                   RepairAnimTimeline;                                        // 0x081C(0x0080) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bAllowResourceDrop : 1;                                    // 0x089C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bHideOnDeath : 1;                                          // 0x089C(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bPlayDestructionEffects : 1;                               // 0x089C(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bSupportedDirectly : 1;                                    // 0x089C(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bForciblyStructurallySupported : 1;                        // 0x089C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bRegisterWithStructuralGrid : 1;                           // 0x089C(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bUnderConstruction : 1;                                    // 0x089C(0x0001) BIT_FIELD (Net, SaveGame, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bUnderRepair : 1;                                          // 0x089C(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCollisionBlockedByPawns : 1;                              // 0x089D(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bRequiresPlacementAnim : 1;                                // 0x089D(0x0001) BIT_FIELD (Net, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bRequiresDynamicLODEffect : 1;                             // 0x089D(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bDoDynamicShrinkAndDestroyEffect : 1;                      // 0x089D(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCurrentlyBeingEdited : 1;                                 // 0x089D(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K3RQ[0x2];                                     // 0x089E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ABuildingSMActor*                            DamagerOwner;                                              // 0x08A0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                                   DynamicLODEffectTimeline;                                  // 0x08A4(0x0080) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TT03[0x20];                                    // 0x0924(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingSMActor");
		return ptr;
	}



	void UpdateRepairMaterialAnim(float CurveValue);
	void UpdateLODOverrideEffect(float CurveValue);
	void UpdateDynamicShrinkAndDestroyEffectt(float CurveValue);
	void RepairBuilding(class AFortPlayerController* RepairingController);
	void OnRepairStarted();
	void OnRep_WeakSpotPositions();
	void OnRep_ResourceType(TEnumAsByte<FortniteGame_EFortResourceType> OldType);
	void OnRep_ReplicatedMIC();
	void OnRep_ReplicatedDrawScale3D();
	void OnRep_MetaData();
	void OnRep_EditingPlayer();
	void OnRep_bUnderRepair();
	void OnRep_bUnderConstruction();
	void OnRep_BuildingReplacementType();
	void OnRep_bRequiresDynamicLODEffect();
	void OnRep_bDoDynamicShrinkAndDestroyEffect();
	void OnRep_bCollisionBlockedByPawns();
	void OnLODOverrideEffectFinished();
	void OnDynamicShrinkAndDestroyEffectFinished();
	void OnDetachFromBuilding(class ABuildingSMActor* AttachedToBuilding, bool bBeingDestroyed);
	void OnBounceAnimationUpdate(const struct FFortBounceData& Data);
	void OnAttachToBuilding(class ABuildingSMActor* AttachedToBuilding);
	void MulticastPlayFullHealthEffects();
	bool IsStructurallySupported();
	bool HasDestructionLoot();
	int GetLogicalBuildingIndex();
	class UStaticMeshComponent* GetBuildingMeshComponent();
	class UMaterialInstanceDynamic* GetAnimatingMID(int ElementIndex);
	void ForceIntoStructuralGridDuringRuntime();
	void DetachBuildingActorFromMe(class ABuildingSMActor* ActorToAttach, bool bBeingDestroyed);
	void BlueprintOnStructurallyUnstable();
	void BlueprintAttemptBuildingUpgrade(class AFortPlayerController* PC, int UpgradeLevelDelta);
	void AttachBuildingActorToMe(class ABuildingSMActor* ActorToAttach, bool bForceAttachment);
};

// Class FortniteGame.BuildingContainer
// 0x0138 (FullSize[0x0A7C] - InheritedSize[0x0944])
class ABuildingContainer : public ABuildingSMActor
{
public:
	float                                              SearchingSoundFadeOutDuration;                             // 0x0944(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   SearchingSoundCueLoop;                                     // 0x0948(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   LootRepeatSoundCue;                                        // 0x094C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OnDamageSoundCue;                                          // 0x0950(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OnDeathSoundCue;                                           // 0x0954(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 SearchedMesh;                                              // 0x0958(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>                  SearchedMaterialOverrides;                                 // 0x095C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	float                                              SearchBounceRadiusOverride;                                // 0x0968(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SearchLootTierGroup;                                       // 0x096C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_ELootQuotaLevel>          QuotaLevel;                                                // 0x0974(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I5VC[0x3];                                     // 0x0975(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       ContainerLootTierKey;                                      // 0x0978(0x0008) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanSpawnAtLowerQuotaLevels;                               // 0x0980(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PBDM[0x3];                                     // 0x0981(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   NumItemsToDropRange;                                       // 0x0984(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*                    LootTestingData;                                           // 0x098C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LootNoiseRange;                                            // 0x0990(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LootNoiseLoudness;                                         // 0x0994(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LootSpawnLocation;                                         // 0x0998(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     LootFinalLocation;                                         // 0x09A4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FText                                       EmptyString;                                               // 0x09B0(0x0018) ELEMENT_SIZE_MISMATCH (NativeAccessSpecifierPublic)
	struct FText                                       SearchString;                                              // 0x09BC(0x0018) ELEMENT_SIZE_MISMATCH (NativeAccessSpecifierPublic)
	TAssetPtr<class UCurveFloat>                       InteractFullBounceCurve;                                   // 0x09C8(0x0018) (Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UCurveFloat>                       InteractFullBounceNormalCurve;                             // 0x09E0(0x0018) (Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UCurveFloat>                       InteractEmptyBounceCurve;                                  // 0x09F8(0x0018) (Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UCurveFloat>                       InteractEmptyBounceNormalCurve;                            // 0x0A10(0x0018) (Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortRarity>              HighestRarity;                                             // 0x0A28(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JQ41[0x3];                                     // 0x0A29(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bAlwaysShowContainer : 1;                                  // 0x0A2C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDestroyContainerOnSearch : 1;                             // 0x0A2C(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bAlreadySearched : 1;                                      // 0x0A2C(0x0001) BIT_FIELD (BlueprintVisible, Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XABF[0x3];                                     // 0x0A2D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAudioComponent*                             SearchingAudioComponent;                                   // 0x0A30(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bBuriedTreasure : 1;                                       // 0x0A34(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bHasRaisedTreasure : 1;                                    // 0x0A34(0x0001) BIT_FIELD (Edit, BlueprintVisible, Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bRegenerateLoot : 1;                                       // 0x0A34(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7CIB[0x3];                                     // 0x0A35(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LootedWeaponsDurabilityModifier;                           // 0x0A38(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeUntilLootRegenerates;                                  // 0x0A3C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSearchBounceData                       SearchBounceData;                                          // 0x0A40(0x0010) (Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseLocationForDrop;                                       // 0x0A50(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F0ML[0x3];                                     // 0x0A51(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCurveTableRowHandle                        SearchSpeed;                                               // 0x0A54(0x000C) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EKON[0x1C];                                    // 0x0A60(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingContainer");
		return ptr;
	}



	void RaiseTreasure();
	void OnSetSearched();
	void OnSearchInterrupted();
	void OnRep_bAlreadySearched();
	void OnRaiseTreasure();
	void OnLootReset();
	void OnLootRepeat();
	void OnLoot();
	void OnBeginSearch();
	int GetLootTier();
	void BounceContainer();
};

// Class FortniteGame.KeepItemContainer
// 0x0058 (FullSize[0x0AD4] - InheritedSize[0x0A7C])
class AKeepItemContainer : public ABuildingContainer
{
public:
	unsigned char                                      UnknownData_9ZP6[0x4];                                     // 0x0A7C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                HostUpgradeLevel;                                          // 0x0A80(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AFortPlayerState>>     SearchedBy;                                                // 0x0A84(0x000C) (Net, ZeroConstructor, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EKeepContainerType>       ContainerType;                                             // 0x0A90(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseDefaultLootLogic;                                      // 0x0A91(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bResetThisWhenKeepResets;                                  // 0x0A92(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_362V[0x1];                                     // 0x0A93(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       ContainerNameKey;                                          // 0x0A94(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  ContainerDataTable;                                        // 0x0A9C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowChoiceUI;                                             // 0x0AA0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DEFN[0x3];                                     // 0x0AA1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TEnumAsByte<FortniteGame_EFortItemType>>    ItemsInChoiceUI;                                           // 0x0AA4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LZJT[0xC];                                     // 0x0AB0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortRarity>              BestAvailableRarity;                                       // 0x0ABC(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BXDF[0x3];                                     // 0x0ABD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxItems;                                                  // 0x0AC0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XT6D[0x10];                                    // 0x0AC4(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.KeepItemContainer");
		return ptr;
	}



	void RestoreLoot();
	void ResetContainer(class AFortPlayerController* FortPC);
	void OnRep_SearchedBy();
	void OnRep_HostUpgradeLevel();
	void InitializeContainer(int InitUpgradeLevel);
	int GetLootTierOverride();
	struct FName GetContainerNameAndLevelKey();
};

// Class FortniteGame.KeepItemCoreContainer
// 0x0000 (FullSize[0x0AD4] - InheritedSize[0x0AD4])
class AKeepItemCoreContainer : public AKeepItemContainer
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.KeepItemCoreContainer");
		return ptr;
	}



};

// Class FortniteGame.BuildingCorner
// 0x0008 (FullSize[0x094C] - InheritedSize[0x0944])
class ABuildingCorner : public ABuildingSMActor
{
public:
	class ABuildingSMActor*                            PrimaryWall;                                               // 0x0944(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                            SecondaryWall;                                             // 0x0948(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingCorner");
		return ptr;
	}



};

// Class FortniteGame.BuildingPropCorner
// 0x0000 (FullSize[0x094C] - InheritedSize[0x094C])
class ABuildingPropCorner : public ABuildingCorner
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingPropCorner");
		return ptr;
	}



};

// Class FortniteGame.BuildingDeco
// 0x0004 (FullSize[0x0948] - InheritedSize[0x0944])
class ABuildingDeco : public ABuildingSMActor
{
public:
	bool                                               bCastShadow;                                               // 0x0944(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W0Q7[0x3];                                     // 0x0945(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingDeco");
		return ptr;
	}



};

// Class FortniteGame.BuildingDoor
// 0x0008 (FullSize[0x094C] - InheritedSize[0x0944])
class ABuildingDoor : public ABuildingSMActor
{
public:
	class USoundBase*                                  DoorOpeningSound;                                          // 0x0944(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  DoorClosingSound;                                          // 0x0948(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingDoor");
		return ptr;
	}



};

// Class FortniteGame.BuildingFloor
// 0x0004 (FullSize[0x0948] - InheritedSize[0x0944])
class ABuildingFloor : public ABuildingSMActor
{
public:
	unsigned char                                      UnknownData_MX28[0x4];                                     // 0x0944(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingFloor");
		return ptr;
	}



	bool IsBalcony();
};

// Class FortniteGame.BuildingStairs
// 0x0004 (FullSize[0x094C] - InheritedSize[0x0948])
class ABuildingStairs : public ABuildingFloor
{
public:
	TEnumAsByte<FortniteGame_EBuildingStairsRailing>   RailingType;                                               // 0x0948(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A5MI[0x3];                                     // 0x0949(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingStairs");
		return ptr;
	}



};

// Class FortniteGame.BuildingFoundation
// 0x0044 (FullSize[0x0988] - InheritedSize[0x0944])
class ABuildingFoundation : public ABuildingSMActor
{
public:
	TArray<class UBuildingGroup*>                      BuildingGroups;                                            // 0x0944(0x000C) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TAssetPtr<class UWorld>>                    AdditionalWorlds;                                          // 0x0950(0x000C) (Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       BuildingGroupTagsToPickFrom;                               // 0x095C(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EBuildingFoundationType>  FoundationType;                                            // 0x0974(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2L1O[0x3];                                     // 0x0975(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       LevelToStream;                                             // 0x0978(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NW8N[0x8];                                     // 0x0980(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingFoundation");
		return ptr;
	}



	void OnRep_LevelToStream();
};

// Class FortniteGame.BuildingFoundation3x3
// 0x0000 (FullSize[0x0988] - InheritedSize[0x0988])
class ABuildingFoundation3x3 : public ABuildingFoundation
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingFoundation3x3");
		return ptr;
	}



};

// Class FortniteGame.BuildingFoundation5x10
// 0x0000 (FullSize[0x0988] - InheritedSize[0x0988])
class ABuildingFoundation5x10 : public ABuildingFoundation
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingFoundation5x10");
		return ptr;
	}



};

// Class FortniteGame.BuildingFoundation5x5
// 0x0000 (FullSize[0x0988] - InheritedSize[0x0988])
class ABuildingFoundation5x5 : public ABuildingFoundation
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingFoundation5x5");
		return ptr;
	}



};

// Class FortniteGame.WorldTileFoundation
// 0x0024 (FullSize[0x09AC] - InheritedSize[0x0988])
class AWorldTileFoundation : public ABuildingFoundation
{
public:
	unsigned char                                      NumRotations;                                              // 0x0988(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7K86[0x23];                                    // 0x0989(0x0023) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.WorldTileFoundation");
		return ptr;
	}



};

// Class FortniteGame.BuildingPillar
// 0x0000 (FullSize[0x0944] - InheritedSize[0x0944])
class ABuildingPillar : public ABuildingSMActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingPillar");
		return ptr;
	}



};

// Class FortniteGame.BuildingPlayerPrimitivePreview
// 0x0000 (FullSize[0x0944] - InheritedSize[0x0944])
class ABuildingPlayerPrimitivePreview : public ABuildingSMActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingPlayerPrimitivePreview");
		return ptr;
	}



};

// Class FortniteGame.BuildingProp
// 0x0000 (FullSize[0x0944] - InheritedSize[0x0944])
class ABuildingProp : public ABuildingSMActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingProp");
		return ptr;
	}



};

// Class FortniteGame.BuildingPropWall
// 0x0008 (FullSize[0x094C] - InheritedSize[0x0944])
class ABuildingPropWall : public ABuildingProp
{
public:
	struct FBuildingActorNavArea                       AreaPatternOverride;                                       // 0x0944(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EBuildingWallArea>        AreaShapeType;                                             // 0x0948(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U6SF[0x3];                                     // 0x0949(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingPropWall");
		return ptr;
	}



};

// Class FortniteGame.FortConstructorBASE
// 0x023C (FullSize[0x0B80] - InheritedSize[0x0944])
class AFortConstructorBASE : public ABuildingProp
{
public:
	unsigned char                                      UnknownData_RH9P[0x4];                                     // 0x0944(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FBASEGameplayEffect>                 BASEBuildingApplicationEffects;                            // 0x0948(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FBASEGameplayEffect>                 BASEFriendlyApplicationEffects;                            // 0x0954(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FBASEGameplayEffect>                 BASEEnemyApplicationEffects;                               // 0x0960(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                                InBASETag;                                                 // 0x096C(0x0008) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                NodesToAffect;                                             // 0x0974(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BaseLevel;                                                 // 0x0978(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPatternBASEEffect>                  BASEEffectPatterns;                                        // 0x097C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortBaseWeaponStats                        DamageStats;                                               // 0x0988(0x00EC) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortDamageSet*                              DamageAttributeSet;                                        // 0x0A74(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABuildingSMActor*>                    ReplicatedAffectedNeighbors;                               // 0x0A78(0x000C) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SWUW[0xFC];                                    // 0x0A84(0x00FC) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortConstructorBASE");
		return ptr;
	}



	void StopBuildingActorVisuals(class ABuildingSMActor* BuildingActor, class UStaticMeshComponent* EffectMeshComp);
	void StartBuildingActorVisuals(class ABuildingSMActor* BuildingActor, class UStaticMeshComponent* EffectMeshComp);
	void OnRep_ReplicatedAffectedNeighbors();
	void OnPlaced(class UAbilitySystemComponent* InstigatorAbilitySystemComponent);
	void OnPawnRemovedFromBase(class AFortPawn* Pawn);
	void OnPawnAddedToBase(class AFortPawn* Pawn);
	void OnBasePawnDied(float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum, class AFortPawn* Pawn);
	void OnBasePawnDestroyed(class AFortPawn* Pawn);
	void OnBaseCollisionUnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBaseCollisionTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	TArray<class ABuildingSMActor*> GetBuildingActorsInBase();
	void AddToEffectListWithLevelOverride(TArray<struct FBASEGameplayEffect>* EffectList, class UClass* Effect, int Level);
	void AddToEffectList(TArray<struct FBASEGameplayEffect>* EffectList, class UClass* Effect);
};

// Class FortniteGame.FortTrack
// 0x00E4 (FullSize[0x0A28] - InheritedSize[0x0944])
class AFortTrack : public ABuildingProp
{
public:
	struct FScriptMulticastDelegate                    OnTrackGraphChanged;                                       // 0x0944(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FText                                       ToggleSwitchText;                                          // 0x0950(0x0018) ELEMENT_SIZE_MISMATCH (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              ToggleInteractTime;                                        // 0x095C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTrackMeshTrackPieceTypeConfig              MeshesByTrackPieceType[0x3];                               // 0x0960(0x0048) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class AFortTrack*                                  NeighborsByDirection[0x4];                                 // 0x09A8(0x0010) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_ETrackIncline>            InclinesByDirection[0x4];                                  // 0x09B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SwitchState;                                               // 0x09BC(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ConfigurationIdx;                                          // 0x09C0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        TrackMeshComp1;                                            // 0x09C4(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        TrackMeshComp2;                                            // 0x09C8(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                            SplineComp1;                                               // 0x09CC(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                            SplineComp2;                                               // 0x09D0(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             SwitchCompBase;                                            // 0x09D4(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                         SwitchComp;                                                // 0x09D8(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MBC8[0x4C];                                    // 0x09DC(0x004C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTrack");
		return ptr;
	}



	void OnSwitchStateChanged(int NewSwitchState, int OldSwitchState, int NumSwitchStates);
	void OnRep_SwitchState();
	void OnRep_ConfigurationIdx();
	void OnConfigurationChanged(int NewConfigurationIdx, int OldConfigurationIdx);
	bool IsConnectedToTrackList(TArray<class AFortTrack*> TargetTracks);
	bool IsConnectedToTrack(class AFortTrack* TargetTrack);
	void InitializeTrack(class UStaticMeshComponent* InTrackMeshComp1, class UStaticMeshComponent* InTrackMeshComp2, class USplineComponent* InSplineComp1, class USplineComponent* InSplineComp2, class USceneComponent* InSwitchCompBase, class UPrimitiveComponent* InSwitchComp);
	void GetSplineFromPositionAndOrientation(const struct FVector& InLocation, const struct FRotator& InRotation, class USplineComponent** OutSpline, float* OutDistanceAlongSpline, bool* OutReverseDirection);
	void GetSplineFromIncomingNeighbor(class AFortTrack* InNeighbor, class USplineComponent** OutSpline, bool* OutReverseDirection);
	float GetPathDistanceToTrack(class AFortTrack* TargetTrack, class USplineComponent* InCurrentSpline, float CurrentDistanceAlongSpline, bool InReverseDirection);
	void GetOutgoingNeighborFromSpline(class USplineComponent* InSpline, bool InReverseDirection, class AFortTrack** OutNeighbor);
};

// Class FortniteGame.OutpostStructureBase
// 0x000C (FullSize[0x0950] - InheritedSize[0x0944])
class AOutpostStructureBase : public ABuildingProp
{
public:
	class UFortAbilitySet*                             AbilitySet;                                                // 0x0944(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                OutpostOwnerStructureLevel;                                // 0x0948(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortOutpostItemDefinition*                  ItemDefinition;                                            // 0x094C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.OutpostStructureBase");
		return ptr;
	}



	void OnRep_OutpostOwnerStructureLevel();
	void OnOutpostOwnerStructureLevelChanged();
	int GetOutpostOwnerStructureLevel();
};

// Class FortniteGame.BuildingOutpostCraftingTable
// 0x0004 (FullSize[0x0954] - InheritedSize[0x0950])
class ABuildingOutpostCraftingTable : public AOutpostStructureBase
{
public:
	class UClass*                                      ActivationEffect;                                          // 0x0950(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingOutpostCraftingTable");
		return ptr;
	}



	bool IsActive(class AFortPlayerControllerOutpost* InPC);
	int GetNumberOfItemsRemaining(class AFortPlayerControllerOutpost* InPC);
	int GetNumberOfItemsPerActivation(class AFortPlayerControllerOutpost* InPC);
	void GetActivationCost(class AFortPlayerControllerOutpost* InPC, TArray<struct FFortItemQuantityPair>* OutWorldItems);
	void Deactivate(class AFortPlayerControllerOutpost* InPC);
	bool CanActivate(class AFortPlayerControllerOutpost* InPC);
	void Activate(class AFortPlayerControllerOutpost* InPC);
};

// Class FortniteGame.BuildingOutpostFabricator
// 0x0010 (FullSize[0x0960] - InheritedSize[0x0950])
class ABuildingOutpostFabricator : public AOutpostStructureBase
{
public:
	TArray<class UFortWorldItemDefinition*>            AlwaysAvailableItemsToFabricate;                           // 0x0950(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              FabricationDuration;                                       // 0x095C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingOutpostFabricator");
		return ptr;
	}



	bool IsDisintegrating(class AFortPlayerControllerOutpost* FortPC);
	int GetStoredGooAmount(class AFortPlayerControllerOutpost* FortPC);
	TArray<class UFortItem*> GetPlayerItems(class AFortPlayerControllerOutpost* FortPC, TEnumAsByte<FortniteGame_EFortInventoryFilter> InventoryFilter, const struct FString& SearchFilter);
	int GetMaxGooCapacity(class AFortPlayerControllerOutpost* FortPC);
	int GetIncomingGooAmountProgress(class AFortPlayerControllerOutpost* FortPC);
	int GetIncomingGooAmount(class AFortPlayerControllerOutpost* FortPC);
	int GetGooToFabricateAmount(class UFortWorldItem* Item);
	int GetGooFromDisintegrationAmount(class UFortWorldItem* Item);
	struct FDateTime GetDisintegrationStartTime(class AFortPlayerControllerOutpost* FortPC);
	int GetDisintegrationSecondsRemaining(class AFortPlayerControllerOutpost* FortPC);
	int GetDisintegrationMinutesRemaining(class AFortPlayerControllerOutpost* FortPC);
	int GetDisintegrationDurationInSecondsForItem(class UFortWorldItem* Item, int Count);
	int GetDisintegrationDurationInSeconds(class AFortPlayerControllerOutpost* FortPC);
	TArray<class UFortItem*> GetAvailableRecipes(class AFortPlayerControllerOutpost* FortPC, TEnumAsByte<FortniteGame_EFortInventoryFilter> InventoryFilter, const struct FString& SearchFilter);
	void FabricateItem(class AFortPlayerControllerOutpost* FortPC, class UFortWorldItemDefinition* ItemDef);
	void DisintegrateItem(class AFortPlayerControllerOutpost* FortPC, class UFortWorldItem* Item, int Count);
	int CanDisintegrateItem(class AFortPlayerControllerOutpost* FortPC, class UFortWorldItem* Item, int Count);
	void AbortDisintegration(class AFortPlayerControllerOutpost* FortPC);
};

// Class FortniteGame.BuildingOutpostStorageVault
// 0x0000 (FullSize[0x0950] - InheritedSize[0x0950])
class ABuildingOutpostStorageVault : public AOutpostStructureBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingOutpostStorageVault");
		return ptr;
	}



	void MoveItemToStorage(class AFortPlayerControllerOutpost* Player, class UFortWorldItem* Item, int Count);
	void MoveItemFromStorage(class AFortPlayerControllerOutpost* Player, class UFortWorldItem* Item, int Count);
	TArray<class UFortItem*> GetStoredItems(class AFortPlayerControllerOutpost* Player, TEnumAsByte<FortniteGame_EFortInventoryFilter> InventoryFilter, const struct FString& SearchFilter);
	TArray<class UFortItem*> GetPlayerItems(class AFortPlayerControllerOutpost* Player, TEnumAsByte<FortniteGame_EFortInventoryFilter> InventoryFilter, const struct FString& SearchFilter);
	int GetOccupiedSlotsNum(class AFortPlayerControllerOutpost* Player);
	int GetMaxSlotsNum(class AFortPlayerControllerOutpost* Player);
};

// Class FortniteGame.BuildingOutpostStormshieldUpgrade
// 0x0004 (FullSize[0x0954] - InheritedSize[0x0950])
class ABuildingOutpostStormshieldUpgrade : public AOutpostStructureBase
{
public:
	bool                                               bDefended;                                                 // 0x0950(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bBuilt;                                                    // 0x0951(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X3J0[0x2];                                     // 0x0952(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingOutpostStormshieldUpgrade");
		return ptr;
	}



	void WasDefended();
	void OnRep_bDefended();
	void OnRep_bBuilt();
	void EmergencySetBuildFlag(bool bNewBuild);
	bool CanBuild(class AFortPlayerControllerOutpost* InBuildingPlayer, bool bLog);
	void Build(class AFortPlayerControllerOutpost* InBuildingPlayer);
	void BlueprintOnDefended();
	void BlueprintOnBuilt();
};

// Class FortniteGame.BuildingOutpostStormshieldCore
// 0x000C (FullSize[0x0960] - InheritedSize[0x0954])
class ABuildingOutpostStormshieldCore : public ABuildingOutpostStormshieldUpgrade
{
public:
	TArray<struct FString>                             AccountsWithEditPermission;                                // 0x0954(0x000C) (ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingOutpostStormshieldCore");
		return ptr;
	}



};

// Class FortniteGame.BuildingRoof
// 0x0000 (FullSize[0x0944] - InheritedSize[0x0944])
class ABuildingRoof : public ABuildingSMActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingRoof");
		return ptr;
	}



};

// Class FortniteGame.FortAIAssignment
// 0x007C (FullSize[0x0098] - InheritedSize[0x001C])
class UFortAIAssignment : public UObject
{
public:
	struct FFortAIAssignmentIdentifier                 AssignmentIdentifier;                                      // 0x001C(0x0020) (Protected, NativeAccessSpecifierProtected)
	class UFortAIAssignmentSettings*                   AssignmentSettings;                                        // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAIGoalProvider*                         GoalProvider;                                              // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortAIController*>                   ControllersOnAssignment;                                   // 0x0044(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1HZ3[0x3C];                                    // 0x0050(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFortAIGoal>                         Goals;                                                     // 0x008C(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIAssignment");
		return ptr;
	}



};

// Class FortniteGame.FortAIPawn
// 0x05F4 (FullSize[0x0E50] - InheritedSize[0x085C])
class AFortAIPawn : public AFortPawn
{
public:
	float                                              GoalRange;                                                 // 0x085C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortNavObstacleComponent*                   NavObstacleComponent;                                      // 0x0860(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z8XB[0x4];                                     // 0x0864(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortAIEncounterInfo*                        EncounterInfo;                                             // 0x0868(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnSetIndex;                                             // 0x086C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                       SpawnGroupGuid;                                            // 0x0870(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int                                                EnemyIndexInSpawnGroup;                                    // 0x0880(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasEngaged;                                               // 0x0884(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8LDB[0x3];                                     // 0x0885(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EncounterAIStartMovingAndThinkingDelay;                    // 0x0888(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EncounterAIFinishSpawningDelay;                            // 0x088C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFinishSpawning;                                           // 0x0890(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsDebugSpawnedAI;                                         // 0x0891(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bEncounterExpectedLifespanExpired;                         // 0x0892(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FWAK[0x1];                                     // 0x0893(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                EncounterExpectedLifespanTimerHandle;                      // 0x0894(0x0004) (NativeAccessSpecifierPublic)
	class AActor*                                      SpawnRift;                                                 // 0x0898(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      SpawnSourceActor;                                          // 0x089C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortressAIType>          AIType;                                                    // 0x08A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortHotSpotSlot>         HotspotType;                                               // 0x08A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortPartialPathUsage>    PartialPathUsage;                                          // 0x08A2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortAILODLevel>          CurrentFortAILODLevel;                                     // 0x08A3(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRequiresNormalLOD;                                        // 0x08A4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QGNQ[0x3F];                                    // 0x08A5(0x003F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBehaviorTree*                               BehaviorTree;                                              // 0x08E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultNavFilter;                                          // 0x08E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HuntingNavFilter;                                          // 0x08EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_87IG[0x4];                                     // 0x08F0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RecentlySeenInterval;                                      // 0x08F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bDebugAI : 1;                                              // 0x08F8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bDebugAIAnim : 1;                                          // 0x08F8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bUseSmartLinks : 1;                                        // 0x08F8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bUseBuildingAttackingHotspots : 1;                         // 0x08F8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCanMoveThroughWalls : 1;                                  // 0x08F8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCanSleep : 1;                                             // 0x08F8(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bUseCrowdSimulation : 1;                                   // 0x08F8(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_222X[0x3];                                     // 0x08F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPendingSuicide;                                           // 0x08FC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bNeedsDeathNotification;                                   // 0x08FD(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bKilledByPlayer;                                           // 0x08FE(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bDespawnedDueToInactivity;                                 // 0x08FF(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bNotifySpawnRift;                                          // 0x0900(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I9BZ[0x3];                                     // 0x0901(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     BumpNormal;                                                // 0x0904(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortMovementStyle>       MovementStyles[0x4];                                       // 0x0910(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortMovementUrgency>     MovementUrgency;                                           // 0x0914(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YQGS[0x3];                                     // 0x0915(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       TurnTransitionGameplayAbilityTag;                          // 0x0918(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0LGR[0x4];                                     // 0x0930(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TAssetPtr<class UParticleSystem>                   DeathParticles;                                            // 0x0934(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHeadshotHideHead;                                       // 0x094C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LSW3[0x3];                                     // 0x094D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumRunVariations;                                          // 0x0950(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentRunVariationIndex;                                  // 0x0954(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RunVariationRadius;                                        // 0x0958(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                EyeIndex;                                                  // 0x095C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SkinIndex;                                                 // 0x0960(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                DefaultEyeColor;                                           // 0x0964(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              DefaultEyeBrightness;                                      // 0x0974(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                DefaultSkinColor;                                          // 0x0978(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              DefaultSkinGlow;                                           // 0x0988(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortItemEntry                              StolenItem;                                                // 0x098C(0x007C) (Transient, NativeAccessSpecifierPublic)
	bool                                               bIsCharging;                                               // 0x0A08(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsSleeping;                                               // 0x0A09(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GGQ4[0x2];                                     // 0x0A0A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     SpawnLocation;                                             // 0x0A0C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    SpawnRotation;                                             // 0x0A18(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABuildingActor>               SleepingFloor;                                             // 0x0A24(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FLinearColor                                MinimapDefaultIconColor;                                   // 0x0A2C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int8_t                                             MinimapGoalByTagColorIndex;                                // 0x0A3C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IE7H[0x13];                                    // 0x0A3D(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 MiniMapIconBrush;                                          // 0x0A50(0x0074) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 MiniMapAboveBelowIconBrush;                                // 0x0AC4(0x0074) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bShowMinimapFarOffDirectionArrow;                          // 0x0B38(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8RV1[0x3];                                     // 0x0B39(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimapViewableDistane;                                    // 0x0B3C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMinimapGoalByTagColorsData>         MinimapGoalByTagColors;                                    // 0x0B40(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortTeam>                Team;                                                      // 0x0B4C(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0RJF[0x3];                                     // 0x0B4D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundBase*                                  ImpactPhysicalSurfaceSounds[0x3F];                         // 0x0B50(0x00FC) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             ImpactPhysicalSurfaceEffects[0x3F];                        // 0x0C4C(0x00FC) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SQ3G[0x4];                                     // 0x0D48(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   MiniMapScale;                                              // 0x0D4C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VKVO[0x40];                                    // 0x0D54(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortCombatEvents>        FollowPlayerEvent;                                         // 0x0D94(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_092E[0x3];                                     // 0x0D95(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UFortAbilitySet*>                     DefaultGameplayAbilitySets;                                // 0x0D98(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAbilitySet*>                     SpawnInheritedCharacterAbilitySets;                        // 0x0DA4(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UFortAbilitySystemComponent*                 AIPawnAbilitySystemComponent;                              // 0x0DB0(0x0004) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       WallAttackGameplayAbilityTags;                             // 0x0DB4(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       WallRangedAttackGameplayAbilityTags;                       // 0x0DCC(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       CeilingAttackGameplayAbilityTags;                          // 0x0DE4(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       FloorAttackGameplayAbilityTags;                            // 0x0DFC(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTagContainer>               FailedAbilityQueryTags;                                    // 0x0E14(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A6FQ[0x30];                                    // 0x0E20(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIPawn");
		return ptr;
	}



	void TurnOnSleepingOptimizations();
	void StartMovingAndThinking();
	bool ShouldStopOnMelee();
	bool ShouldPerformMeleeLungeAttacks();
	bool ShouldPauseAfterMelee();
	void SetSkinColor(const struct FLinearColor& NewSkinColor, float NewSkinBrightness);
	void SetRequiresNormalLOD(bool bRequiresNormalLOD);
	void SetMovementUrgency(TEnumAsByte<FortniteGame_EFortMovementUrgency> Urgency);
	void SetIsCharging(bool bNewIsCharging);
	void SetEyeColor(const struct FLinearColor& NewEyeColor, float NewEyeBrightness);
	void SetEncounterInfo(class UFortAIEncounterInfo* InEncounterInfo);
	void SetAIType(TEnumAsByte<FortniteGame_EFortressAIType> InAIType);
	void OnSpawnedFromRift();
	void OnSleepingAIsFloorBuildingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	void OnRep_FinishSpawning();
	void OnRep_CurrentFortAILODLevel();
	void OnRep_bIsSleeping();
	void OnForceSpawnEffectCompletion();
	void OnEndSleepEffects();
	void OnDetermineProximateState(class AActor* GoalActor);
	void OnBeginSleepEffects();
	bool IsValidNavigationLocation(const struct FVector& Location);
	bool HasStolenItem();
	void HandleReachedGoalState(class AActor* GoalActor);
	void HandleFailedToReachGoalState(class AActor* GoalActor);
	int GetWildcardDataAsInt(const struct FFortWildcardData& Data);
	float GetWildcardDataAsFloat(const struct FFortWildcardData& Data);
	float GetTimeSinceLastHit();
	struct FRotator GetSpawnRotation();
	struct FVector GetSpawnLocation();
	float GetProximityNotifyDistXY();
	TEnumAsByte<FortniteGame_EFortMovementUrgency> STATIC_GetMovementUrgency(class AFortAIPawn* FortAIPawn);
	TEnumAsByte<FortniteGame_EFortMovementStyle> STATIC_GetMovementStyle(class AFortAIPawn* FortAIPawn);
	int GetLocalWildcardAsInt(const struct FFortLocalWildcardData& Data);
	float GetLocalWildcardAsFloat(const struct FFortLocalWildcardData& Data);
	class USoundBase* GetImpactPhysicalSurfaceSound(const struct FHitResult& Impact);
	class UParticleSystem* GetImpactPhysicalSurfaceEffect(const struct FHitResult& Impact);
	float STATIC_GetGroundSpeedForUrgency(class AFortAIPawn* FortAIPawn, TEnumAsByte<FortniteGame_EFortMovementUrgency> Urgency);
	void FinishSpawning();
	void FailsafeKill();
	void DropStolenItem();
	void DetermineReachedGoalState();
	void DetermineProximateState();
	void DetermineFailedToReachGoalState();
	void DestroyStolenItem();
	bool CanOpenDoors();
	void BroadcastSpawnFromRift();
	void AddFortAbilitySet(class UFortAbilitySet* FortAbilitySet);
};

// Class FortniteGame.FortAIController
// 0x0098 (FullSize[0x0368] - InheritedSize[0x02D0])
class AFortAIController : public AAIController
{
public:
	unsigned char                                      UnknownData_AZE1[0x8];                                     // 0x02D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bUsingNavMesh : 1;                                         // 0x02D8(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bAlwaysNotifyBumpWall : 1;                                 // 0x02D8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bInstantRotation : 1;                                      // 0x02D8(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bTurnTransitionsEnabled : 1;                               // 0x02D8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ITCA[0x3];                                     // 0x02D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortPathFollowingComponent*                 FortPathFollowingComp;                                     // 0x02DC(0x0004) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8K04[0x8];                                     // 0x02E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      TargetActor;                                               // 0x02E8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAIHotSpotSlotInfo                          CurrentHotSpot;                                            // 0x02EC(0x0008) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              GoalInfoUpdateRate;                                        // 0x02F4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      GoalActor;                                                 // 0x02F8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GoalVisibilityPersistanceTime;                             // 0x02FC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GECK[0x58];                                    // 0x0300(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortAIPawn*                                 MyFortPawn;                                                // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4G2I[0xC];                                     // 0x035C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIController");
		return ptr;
	}



	void WakeUp();
	void UnregisterForGoalDetection();
	void UnlockMovementResource();
	void UnlockBehaviorResource();
	void SetupCustomVIM(class UClass* VIM);
	void SetTeam(TEnumAsByte<FortniteGame_EFortTeam> InTeam);
	void SetPawnAIType(TEnumAsByte<FortniteGame_EFortressAIType> NewAIType, class AActor* SpawnSpot);
	void SetIsSleeping(bool bNewSleepStatus);
	void SetGoalActor(class AActor* InActor, bool bLocationAlwaysKnown);
	void SetAlwaysGameplayRelevant(bool bInAlwaysGameplayRelevant);
	void SendAnimNotification(const struct FString& EventName);
	void OnBuildingActorGoalDestroyed();
	void LockMovementResource();
	void LockBehaviorResource();
	bool STATIC_IsIgnoringProximity(class AFortAIController* FortAIController);
	bool IsAllowedToSleep();
	void IgnoreProximityForDuration(float DurationToIgnore);
	class AActor* GetTargetActor();
	class AActor* GetGoalActor();
	class ABuildingSMActor* GetClosestSupportingBuildingActor(class ABuildingSMActor* BuildingSMActor);
	struct FVector GetBestKnownActorLocation(class AActor* ActorInQuestion, float* LastStimulusAge);
	bool CreateBuildingActor(class UClass* BuildingClass, const struct FVector& BuildLoc, const struct FRotator& BuildRot, bool bMirrored);
};

// Class FortniteGame.FortAIDataProvider_Ability
// 0x0038 (FullSize[0x0054] - InheritedSize[0x001C])
class UFortAIDataProvider_Ability : public UAIDataProvider
{
public:
	struct FGameplayTagContainer                       AbilityTag;                                                // 0x001C(0x0018) (Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       AbilityBehaviorDistanceTag;                                // 0x0034(0x0018) (Edit, NativeAccessSpecifierPublic)
	float                                              BehaviorDistance;                                          // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTargetSelectionRange;                                   // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIDataProvider_Ability");
		return ptr;
	}



};

// Class FortniteGame.FortAIDataProvider_GoalProviderAbility
// 0x0000 (FullSize[0x0054] - InheritedSize[0x0054])
class UFortAIDataProvider_GoalProviderAbility : public UFortAIDataProvider_Ability
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIDataProvider_GoalProviderAbility");
		return ptr;
	}



};

// Class FortniteGame.FortAIDataProvider_AIDirector
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortAIDataProvider_AIDirector : public UAIDataProvider
{
public:
	float                                              AIRelevantDistanceToPlayer;                                // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIDataProvider_AIDirector");
		return ptr;
	}



};

// Class FortniteGame.FortAIDataProvider_Pawn
// 0x0010 (FullSize[0x002C] - InheritedSize[0x001C])
class UFortAIDataProvider_Pawn : public UAIDataProvider
{
public:
	float                                              SightRadius;                                               // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearingRadius;                                             // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ViewLocationOffsetFromGround;                              // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxStepHeight;                                             // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIDataProvider_Pawn");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter
// 0x0000 (FullSize[0x002C] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter : public UFortDifficultyOption
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesFree
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_UtilitiesFree : public UFortDifficultyOptionEncounter
{
public:
	int                                                NumFreeUtilitySlots;                                       // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesFree");
		return ptr;
	}



};

// Class FortniteGame.FortPatrolWardInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortPatrolWardInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPatrolWardInterface");
		return ptr;
	}



	TEnumAsByte<FortniteGame_EWardAffectType> GetAffectingType();
	float GetAffectingDistance();
};

// Class FortniteGame.FortAIDirector
// 0x0700 (FullSize[0x0940] - InheritedSize[0x0240])
class AFortAIDirector : public AActor
{
public:
	unsigned char                                      UnknownData_ZZRQ[0x8];                                     // 0x0240(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCurveTableRowHandle                        MaxAliveCurve;                                             // 0x0248(0x000C) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        MinAliveCurve;                                             // 0x0254(0x000C) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FIntensityData                              IntensityInfo;                                             // 0x0260(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortAIEncounterPIDController               AIDirectorPIDController;                                   // 0x0280(0x0058) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortAIEncounterPIDControllerSettings       PIDControllerSettings;                                     // 0x02D8(0x0024) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FUtilityData                                UtilityContributionData[0x10];                             // 0x02FC(0x0380) (Edit, NativeAccessSpecifierPublic)
	float                                              UnreachableLocationPathCost;                               // 0x067C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortPlayerPerformanceEstimateSettings      PlayerPerformanceEstimateSettings;                         // 0x0680(0x0030) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      bUsePrototypeEnemies : 1;                                  // 0x06B0(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L8FT[0x3];                                     // 0x06B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TEnumAsByte<FortniteGame_EFortEncounterDirection>> DebugEncounterDirections;                                  // 0x06B4(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	float                                              BurstSpawnThreatVisualsEndDelay;                           // 0x06C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortAIEncounterSpawnGroupCapsProfile> EncounterSpawnGroupCapSettings;                            // 0x06C4(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIEncounterSpawnPointsProfile>  EncounterSpawnPointsSettings;                              // 0x06D0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              DiscreteEncounterUtilityDesireMappings[0x4];               // 0x06DC(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortAIUtility>           InitialDynamicUtilities[0x4];                              // 0x06EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEncounterEnvironmentQueryInfo              SpawnLocationPlacementQueries[0x4];                        // 0x06F0(0x0070) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFortAIDirectorDataTrackingSettings*         DataTrackingSettings;                                      // 0x0760(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bDebugEncounterQueries : 1;                                // 0x0764(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C06O[0x3];                                     // 0x0765(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortEncounterPawnNumberCaps                DefaultEncounterPawnCaps;                                  // 0x0768(0x0010) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7IIG[0x18];                                    // 0x0778(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UReporterGraph*                              IntensityGraph;                                            // 0x0790(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                              UtilitiesGraph;                                            // 0x0794(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                              PIDValuesGraph;                                            // 0x0798(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                              PIDContributionsGraph;                                     // 0x079C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bNightActive : 1;                                          // 0x07A0(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bAIDisabled : 1;                                           // 0x07A0(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bRegisteredForDayPhaseChange : 1;                          // 0x07A0(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bUseSpawnCap : 1;                                          // 0x07A0(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_75SF[0x3];                                     // 0x07A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NightCount;                                                // 0x07A4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABuildingRift*>                       RiftSpawnPoints;                                           // 0x07A8(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              NightEncounterFailureBreatherTime;                         // 0x07B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EncounterPawnSpawnInterval;                                // 0x07B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultNightEncounter;                                     // 0x07BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DummyDebugEncounter;                                       // 0x07C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BaseEncounterClass;                                        // 0x07C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxActiveAlive;                                            // 0x07C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumActiveAlive;                                            // 0x07CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumActiveDormant;                                          // 0x07D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YM0P[0x3C];                                    // 0x07D4(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPendingSpawnInfo>                   PendingSpawns;                                             // 0x0810(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AFortAIPawn>>          PendingDespawns;                                           // 0x081C(0x000C) (ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FDormantSpawnInfo>                   DormantSpawnSets;                                          // 0x0828(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              DormantClusterRadius;                                      // 0x0834(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       DormantSpawnPointTags;                                     // 0x0838(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       DormantSpawnModifierTags;                                  // 0x0850(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              MinAISpawnDistanceFromPlayers;                             // 0x0868(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumDormantAlive;                                           // 0x086C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortPlacementActor*>                 DormantSpawnPoints;                                        // 0x0870(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAIEncounterInfo*>                ActiveEncounters;                                          // 0x087C(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFortAIEncounterInfo*                        ActiveDefaultEncounter;                                    // 0x0888(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAIEncounterInfo*                        ActiveDummyDebugEncounter;                                 // 0x088C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortAIEncounterSequence*>            EncounterSequences;                                        // 0x0890(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UEQSRenderingComponent*                      EQSRenderingComp;                                          // 0x089C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                DebugGraphUpdateFrequency;                                 // 0x08A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxNormalLODDistanceToPlayer;                              // 0x08A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIRelevantDistanceToPlayer;                                // 0x08A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EncounterRelevantDistanceToPlayer;                         // 0x08AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6H7V[0x40];                                    // 0x08B0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PatrolWards[0xC];                                          // 0x08B0(0x000C) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortAIDirector.PatrolWards
	unsigned char                                      UnknownData_EABH[0x4];                                     // 0x08FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxTotalActiveAliveAI;                                     // 0x0900(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxEncounterActiveAliveAI;                                 // 0x0904(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxSPUsed;                                                 // 0x0908(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PMZA[0x4];                                     // 0x090C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FUtilityTypeFloatPair>               DebugEncounterTopUtilityPercentages;                       // 0x0910(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UCurveFloat*>                         DebugEncounterSpawnPointsCurves;                           // 0x091C(0x000C) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int                                                SimulatedNumberOfPlayersForAIEncounters;                   // 0x0928(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J95V[0x14];                                    // 0x092C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIDirector");
		return ptr;
	}



	void UnregisterPatrolWard();
	bool STATIC_ShouldSpawnGuardians();
	void RegisterPatrolWard();
	void ReceivePawnSpawned(class AFortPawn* SpawnedPawn);
	void PostDayPhaseChanged(TEnumAsByte<FortniteGame_EFortDayPhase> CurrentDayPhase, TEnumAsByte<FortniteGame_EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	void OnStopSpawningPATrolls();
	void OnStartSpawningPATrolls();
	void OnRestStarted();
	void OnReadyToSpawnGuardians(TArray<class ABuildingContainer*> BuildingContainersToGuard);
	void OnRampStarted();
	void OnPlayerSpawn(class AFortPlayerPawn* PlayerPawn);
	void OnPlayerDied(class AFortPlayerPawn* PlayerPawn);
	void OnPeakStarted();
	void OnPawnDied(class AFortAIPawn* KilledPawn);
	void OnFadeStarted();
	void OnDirectorDeactivated();
	void OnDayPhaseChanged(TEnumAsByte<FortniteGame_EFortDayPhase> CurrentDayPhase, TEnumAsByte<FortniteGame_EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	bool IsPointTooCloseToPatrolWards(const struct FVector& Point, TEnumAsByte<FortniteGame_EWardAffectType> WardEffectTypeFilter);
	bool IsLineTooCloseToPatrolWards(const struct FVector& LineStart, const struct FVector& LineEnd);
	bool IsAnyEncounterGoalWithinDistanceOfPoint(const struct FVector& Point, float Distance, bool bOnlyActiveEncounters);
	bool IsAnyAIRelevantToPlayer(class AFortPlayerPawn* Player);
	bool IsAnyActiveEncounterRelevantToPlayer(class AFortPlayerPawn* Player);
	int GetNumPlayers();
	class ABuildingRift* GetClosestRift(const struct FVector& TestPosition, float MinDistance, float MaxDistance);
	void Deactivate();
	void Activate();
};

// Class FortniteGame.FortAIDirectorDataManager
// 0x00B4 (FullSize[0x02F4] - InheritedSize[0x0240])
class AFortAIDirectorDataManager : public AActor
{
public:
	class UObject*                                     OwnerObject;                                               // 0x0240(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAIDirectorEventData>                EventsToTrack;                                             // 0x0244(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIDirectorFactorData>           FactorsToTrack;                                            // 0x0250(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B5X3[0x78];                                    // 0x025C(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TEnumAsByte<FortniteGame_EFortAIDirectorEvent>> EventsBeingTracked;                                        // 0x02D4(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<TEnumAsByte<FortniteGame_EFortAIDirectorFactor>> FactorsBeingTracked;                                       // 0x02E0(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8GII[0x8];                                     // 0x02EC(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIDirectorDataManager");
		return ptr;
	}



	void TriggerEvent(const struct FFortAIDirectorEvent& TriggeredEvent);
	float GetGetAIDirectorEventValue(TEnumAsByte<FortniteGame_EFortAIDirectorEvent> Event);
	float GetAIDirectorFactorValue(TEnumAsByte<FortniteGame_EFortAIDirectorFactor> AIDirectorFactor);
};

// Class FortniteGame.FortAIDirectorDataTrackingSettings
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UFortAIDirectorDataTrackingSettings : public UDataAsset
{
public:
	class UClass*                                      PlayerDataManager;                                         // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      EncounterDataManager;                                      // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIDirectorDataTrackingSettings");
		return ptr;
	}



};

// Class FortniteGame.FortAIDirectorEventManager
// 0x003C (FullSize[0x027C] - InheritedSize[0x0240])
class AFortAIDirectorEventManager : public AActor
{
public:
	unsigned char                                      UnknownData_6EZY[0x3C];                                    // 0x0240(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIDirectorEventManager");
		return ptr;
	}



};

// Class FortniteGame.FortAIEncounterGoalSelectionTable
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortAIEncounterGoalSelectionTable : public UDataAsset
{
public:
	TArray<struct FEncounterGoalSelectionTableEntry>   EncounterGoalSelectionCriteria;                            // 0x001C(0x000C) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterGoalSelectionTable");
		return ptr;
	}



};

// Class FortniteGame.FortAISpawnerInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortAISpawnerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAISpawnerInterface");
		return ptr;
	}



	bool OnReceiveSpawnGroup();
	bool IsReadyToReceiveNewSpawnGroup();
};

// Class FortniteGame.FortIntensityCurveSequence
// 0x0010 (FullSize[0x002C] - InheritedSize[0x001C])
class UFortIntensityCurveSequence : public UDataAsset
{
public:
	TArray<struct FDataTableRowHandle>                 IntensityCurves;                                           // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortIntensityCurveSequenceType> SequenceType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G0TI[0x3];                                     // 0x0029(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortIntensityCurveSequence");
		return ptr;
	}



};

// Class FortniteGame.FortAIEncounterInfo
// 0x07DC (FullSize[0x07F8] - InheritedSize[0x001C])
class UFortAIEncounterInfo : public UObject
{
public:
	unsigned char                                      UnknownData_J9R5[0x4];                                     // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortAISpawnGroupProgressionInfo*            SpawnGroupProgressionInfo;                                 // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSpawnPointsPercentageCurveSequenceInstanceInfo SpawnPointsPercentageCurveSequence;                        // 0x0024(0x0008) (Protected, NativeAccessSpecifierProtected)
	struct FFortIntensityCurveSequenceInstanceInfo     IntensityCurveSequence;                                    // 0x002C(0x0008) (Protected, NativeAccessSpecifierProtected)
	float                                              BurstSpawnPointsPercentage;                                // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpawnPointsMultiplier;                                     // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseBreathers;                                             // 0x003C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_09TF[0x3];                                     // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCurveTableRowHandle                        LowPlayerPerformanceBreatherTimeSecondsCurve;              // 0x0040(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        NormalPlayerPerformanceBreatherTimeSecondsCurve;           // 0x004C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        HighPlayerPerformanceBreatherTimeSecondsCurve;             // 0x0058(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              EncounterTimeSeconds;                                      // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FUtilityTypeFloatPair>               LockedUtilityValues;                                       // 0x0068(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int                                                NumFreeUtilities;                                          // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UtilityAdjustmentPeriodSeconds;                            // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinSpawnDistance;                                          // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpawnDistance;                                          // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumDirections;                                             // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bChangeDirectionsOnRest;                                   // 0x0088(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T6A9[0x3];                                     // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpawnPointsPercentageLimit;                                // 0x008C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                PawnNumberLimit;                                           // 0x0090(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortEncounterPawnNumberCaps                PawnNumberCaps;                                            // 0x0094(0x0010) (Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEncounterSpawnDirectionsChosen;                          // 0x00A4(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnGroupCapsProfile       EncounterSpawnGroupCapsProfile;                            // 0x00B0(0x0024) (NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnPointsProfile          EncounterSpawnPointsProfile;                               // 0x00D4(0x0030) (NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        DesiredHostilityCurve;                                     // 0x0104(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UFortIntensityCurveSequenceProgression*      IntensitySequenceProgression;                              // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SEXY[0x58];                                    // 0x0114(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AliveMultiplier;                                           // 0x016C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortEncounterSpawnLimitType> SpawnLimitType;                                            // 0x0170(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3U3Z[0x3];                                     // 0x0171(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SpawnLimit;                                                // 0x0174(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PawnNumberLimitProgress;                                   // 0x0178(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnPointsLimitProgress;                                  // 0x017C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnLimitReached;                                        // 0x0180(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHasSpawnedAllBurstSpawnAI;                                // 0x0181(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bOverrideAliveCounts;                                      // 0x0182(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8492[0x1];                                     // 0x0183(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MinAliveOverride;                                          // 0x0184(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxAliveOverride;                                          // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HostilityThreshold;                                        // 0x018C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PeakTimeSeconds;                                           // 0x0190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreatherTimeSeconds;                                       // 0x0194(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRampTimeSeconds;                                        // 0x0198(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinTimeBetweenBreathesSeconds;                             // 0x019C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFadeTimeSeconds;                                        // 0x01A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeEndIntensity;                                          // 0x01A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeEndRemainingSpawnPointsPercentage;                     // 0x01A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CompletionPercentageToDisableBreathers;                    // 0x01AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEncounterAllEnemiesKilled;                               // 0x01B0(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEncounterEnemySpawned;                                   // 0x01BC(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEncounterCompleted;                                      // 0x01C8(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XNXE[0x3];                                     // 0x01D4(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDisplayThreatVisuals;                                     // 0x01D7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_47ST[0x4];                                     // 0x01D8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BaseDesiredUtilities[0x10];                                // 0x01DC(0x0040) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       UtilitiesRequiredTags[0x10];                               // 0x021C(0x0180) (Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       InjectedTagForUtilityCheck;                                // 0x039C(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_97J2[0x4];                                     // 0x03B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxLargeSpawnGroupDiscountInterval;                        // 0x03B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSelectionToSpawningDelay;                               // 0x03BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_57GL[0x3C];                                    // 0x03C0(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FUtilityTypeFloatPair>               CurrentDesiredUtilities;                                   // 0x03FC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              UtilityRecentSelectionPenalties[0x10];                     // 0x0408(0x0040) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UtilityEffectivenessMeasurements[0x10];                    // 0x0448(0x0040) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        UtilityEffectivenessMultiplierCurve;                       // 0x0488(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              UtilityEffectivenessInfluenceCap;                          // 0x0494(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FUtilityTypeFloatPair>               CurrentTopUtilityPercentages;                              // 0x0498(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<FortniteGame_EFortAIUtility>>   UsedTopUtilities;                                          // 0x04A4(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int                                                NumUtilitiesConsidered;                                    // 0x04B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReactivityPercentage;                                      // 0x04B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAdjustUtilitiesDuringRest;                                // 0x04B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bDespawnAIsDuringRest;                                     // 0x04B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PSXX[0x2];                                     // 0x04BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastPlayerCombatFactorUpdateTime;                          // 0x04BC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastUtilityAdjustTime;                                     // 0x04C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastSpawnPointAdjustmentTime;                              // 0x04C4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastLargeGroupSpawnTime;                                   // 0x04C8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAIEncounterSpawnGroupWeights>       EnemySpawnData;                                            // 0x04CC(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortAIEncounterPIDController               EncounterPIDController;                                    // 0x04D8(0x0058) (NativeAccessSpecifierPublic)
	int                                                CurrentSpawnPointsCap;                                     // 0x0530(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentSpawnPointsUsed;                                    // 0x0534(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V3DX[0x8];                                     // 0x0538(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FailSafeMinSpawnPoints;                                    // 0x0540(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpawnGroupInstanceInfo>             ActiveSpawnGroups;                                         // 0x0544(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              EncounterEngagementDistance;                               // 0x0550(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinRelevantBuildingDamagedDistance;                        // 0x0554(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRelevantBuildingDamagedDistance;                        // 0x0558(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H2EW[0x10];                                    // 0x055C(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      CurrentGroupSpawnPoint;                                    // 0x056C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortEncounterState>      EncounterState;                                            // 0x0570(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortEncounterPacingState> PacingState;                                               // 0x0571(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KHZO[0x2];                                     // 0x0572(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastPacingStateTransitionTime;                             // 0x0574(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAIEncounterWaveProgressEstimation      WaveProgressEstimate;                                      // 0x0578(0x001C) (NativeAccessSpecifierPublic)
	float                                              DesiredDifficultyLevel;                                    // 0x0594(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DifficultyLevelOverride;                                   // 0x0598(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIDirector*                             MyAIDirector;                                              // 0x059C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortGoalActorEncounterDataManagerPair> DataManagers;                                              // 0x05A0(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                      TargetObjective;                                           // 0x05AC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnlyActiveAtNight;                                        // 0x05B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AYIN[0x3];                                     // 0x05B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumRiftsToUse;                                             // 0x05B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinRiftsToUse;                                             // 0x05B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumRiftsUsed;                                              // 0x05BC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortEncounterSettings                      EncounterSettings;                                         // 0x05C0(0x0030) (NativeAccessSpecifierPublic)
	float                                              EncounterStartTime;                                        // 0x05F0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HostilityCurveStartTime;                                   // 0x05F4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo              DefaultEnvironmentQueryInfo;                               // 0x05F8(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo              FallbackEnvironmentQueryInfo;                              // 0x0614(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo              OverrideEnvironmentQueryInfo;                              // 0x0630(0x001C) (NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo              CurrentEnvironmentQueryInfo;                               // 0x064C(0x001C) (NativeAccessSpecifierPublic)
	bool                                               bNukeWavesAtDaybreak;                                      // 0x0668(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bNukeWavesAtEncounterEnd;                                  // 0x0669(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bNukeWavesAtEncounterDeactivation;                         // 0x066A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MPLV[0x1];                                     // 0x066B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ObjectiveSafeRadius;                                       // 0x066C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ActiveEnemyCap;                                            // 0x0670(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentHostilityLevel;                                     // 0x0674(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HostilityScalePerPlayerCount[0x4];                         // 0x0678(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEncounterRampStarted;                                    // 0x0688(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEncounterPeakStarted;                                    // 0x0694(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEncounterFadeStarted;                                    // 0x06A0(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEncounterRestStarted;                                    // 0x06AC(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      RiftClassTemplate;                                         // 0x06B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NQ9U[0x4];                                     // 0x06BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCanBeActive;                                              // 0x06C0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5536[0x3];                                     // 0x06C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<TWeakObjectPtr<class AActor>, struct FFortAISpawnerData> ExternalAISpawners;                                        // 0x06C4(0x0050) ELEMENT_SIZE_MISMATCH (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UFortAIEncounterRiftManager*                 RiftManager;                                               // 0x0700(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AssociatedMissionName;                                     // 0x0704(0x000C) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ORKP[0x4];                                     // 0x0710(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UFortAIAssignment*>                   EncounterAssignments;                                      // 0x0714(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortAIAssignmentSettings*                   DefaultEncounterAssignmentSettings;                        // 0x0720(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GLH4[0x18];                                    // 0x0724(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxActiveAlive;                                            // 0x073C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxSpawnPointsUsed;                                        // 0x0740(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 OverrideSpawnPointsCurve;                                  // 0x0744(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KA6B[0x94];                                    // 0x0748(0x0094) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseAILifespans;                                           // 0x07DC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_36J2[0x3];                                     // 0x07DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       ModifierTags;                                              // 0x07E0(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterInfo");
		return ptr;
	}



	void UnRegisterAISpawner(class AActor* InAISpawner);
	class AFortAIPawn* SpawnAIPawnReservedForEnemySpawner(class AActor* EnemySpawner, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation);
	void SpawnAIGroup(class UFortAISpawnGroup* SpawnGroupToSpawn, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, class AActor* SpawnSource, TArray<class UFortAbilitySet*> AbilitySetsToGrantOnSpawn, bool bAllowAssigningToExternalSpawners, float SecondsBetweenSpawns);
	void SetEncounterActivationState(bool bEncounterActivityState);
	bool ReserveNextAIPawn(const struct FFortAISpawnerData& FortAISpawnerData, struct FFortSpawnAIRequest* FortAISpawnRequest);
	void RequestActivation(int ActivationDelay);
	void RegisterAISpawner(class AActor* InAISpawner);
	void OnRestStarted();
	void OnRampStarted();
	void OnPeakStarted();
	void OnGoalTakeDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	void OnFadeStarted();
	bool GroupHasAIRemainingToSpawn(const struct FFortAISpawnerData& FortAISpawnerData);
	float GetEncounterTimeSeconds();
	class AFortAIDirectorDataManager* GetEncounterDataManager();
	bool GetCurrentSpawnAreaDirections(TArray<TEnumAsByte<FortniteGame_EFortEncounterDirection>>* OutDirections);
	bool EnemySpawnerGroupHasAIRemainingToSpawn(class AActor* EnemySpawner);
	bool EncounterHasReservedSpawnRequestForEnemySpawner(class AActor* EnemySpawner);
	class UFortAIAssignment* CreateEncounterAssignment(class UFortAIAssignmentSettings* AssignmentSettings, class AActor* GoalActor);
};

// Class FortniteGame.ThreatCloud
// 0x01BC (FullSize[0x03FC] - InheritedSize[0x0240])
class AThreatCloud : public AActor
{
public:
	TArray<class UBoxComponent*>                       LightningSourceAreas;                                      // 0x0240(0x000C) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 MiniMapIconBrush;                                          // 0x024C(0x0074) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                              MiniMapIconPercent;                                        // 0x02C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 MiniMapFarOffIconBrush;                                    // 0x02C4(0x0074) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FLinearColor                                ActiveTint;                                                // 0x0338(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FLinearColor                                InActiveTint;                                              // 0x0348(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              ActiveTransitionTime;                                      // 0x0358(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GBJF[0x8];                                     // 0x035C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MiniMapFarOffIconDegreesOfArc;                             // 0x0364(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3S2L[0x4];                                     // 0x0368(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AThreatCloud>>         NeighboringClouds;                                         // 0x036C(0x000C) (ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FThreatCloudInfluenceInfo>           CloudInfluenceInfos;                                       // 0x0378(0x000C) (ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int                                                NumHorizontalAndVerticalNeighbors;                         // 0x0384(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                NumDiagonalNeighbors;                                      // 0x0388(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                NumSecondaryNeighbors;                                     // 0x038C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBox                                        ThreatBoxVolume;                                           // 0x0390(0x001C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              RandomFloats[0x4];                                         // 0x03AC(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                NumberOfInfluencingClouds;                                 // 0x03BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9HI2[0x24];                                    // 0x03C0(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CloudBuildUpPercentage;                                    // 0x03E4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CloudBuildUpTime;                                          // 0x03E8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CloudBuildUpStartTime;                                     // 0x03EC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                             GoalActorLocations;                                        // 0x03F0(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.ThreatCloud");
		return ptr;
	}



	float UpdateCloudBuildUp();
	void SetCloudMeshScale(class UStaticMeshComponent* CloudStaticMesh, const struct FVector& Scale);
	void SetCloudMeshAndScaleValues(TArray<class UStaticMeshComponent*> CloudStaticMeshComponents, bool bIncludeNegativeValues, TArray<struct FVector> FinalCloudScales);
	void SetCloudInfluenceInfo(TArray<class UStaticMeshComponent*> CloudStaticMeshComponents, TArray<struct FVector> FinalCloudScales, TArray<class UMaterialInstanceDynamic*> CloudMIDs, float BoundingBoxPadding);
	void OnThreatVolumeChanged();
	void OnNumSecondaryNeighborsChanged();
	void OnNeighborsChanged(bool bPrimaryNeighborsChanged, bool bSecondaryNeighborsChanged, TArray<int> IndicesOfNewImmediateNeighbors, TArray<int> IndicesOfDyingImmediateNeighbors);
	void OnNeighborChanged(int NeighborIndex);
	void OnLightningStrike(const struct FVector& StartLocation, const struct FVector& EndLocation, class ABuildingRift* Rift, bool bLightningStruckRift);
	void OnCloudStart();
	void OnCloudScaleChanged(class UStaticMeshComponent* MeshInfluenced, class UMaterialInstanceDynamic* MIDInfluenced, class UStaticMeshComponent* MeshInfluencer, const struct FVector& InfluencerScale, float InfluencerScalePercentage, int InfluencerIndex);
	void OnCloudInfluenceCalculated();
	void OnCloudDeactivated(TEnumAsByte<FortniteGame_EFortThreatDeactivationType> DeactivationType, float DeactivationDuration);
	void OnCloudActivated();
	void OnBeginDeath();
	struct FBox GetThreatVolume();
	void GetRelevantCloudMeshes(class UStaticMeshComponent* SourceCloudMeshComponent, float BoundingBoxPadding, TArray<class UStaticMeshComponent*>* OutInfluencingCloudMeshComponents);
	float GetRandomFloat4();
	float GetRandomFloat3();
	float GetRandomFloat2();
	float GetRandomFloat1();
	int GetNumberOfSecondaryNeighbors();
	int GetNumberOfImmediateNeighbors(bool bHorizontalAndVertical, bool bDiagonal);
	void GetNeighborClouds(TArray<class AThreatCloud*>* NeighborClouds);
	void GetNeighborCloudIndices(TArray<int>* NeighborCloudIndices);
	void GetGoalActorLocations(TArray<struct FVector>* OutGoalActorLocations);
	float GetCloudBuildUpPercentage();
};

// Class FortniteGame.FortThreatVisualsManager
// 0x00BC (FullSize[0x02FC] - InheritedSize[0x0240])
class AFortThreatVisualsManager : public AActor
{
public:
	unsigned char                                      UnknownData_HVBV[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CloudBlueprint;                                            // 0x0244(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CloudRadius;                                               // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ThreatBoxVolumeTopPadding;                                 // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ThreatBoxVolumeBottomPadding;                              // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CloudBuildUpPercentageForNeighborConsideration;            // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CloudBuildUpTickInterval;                                  // 0x0258(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FThreatLocationArray                        ThreatLocations;                                           // 0x025C(0x008C) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                             GoalActorLocations;                                        // 0x02E8(0x000C) (Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YR47[0x8];                                     // 0x02F4(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortThreatVisualsManager");
		return ptr;
	}



	void UpdateCloudBuildUp();
	bool StormsExist();
	void OnThreatCloudsChanged(TArray<struct FThreatLocationInfo> ThreatLocationInfo);
	void OnRep_ThreatLocations();
	void OnRep_GoalActorLocations();
	void OnBeginThreatVisualsPrecursor(class AActor* SourceActor, const struct FVector& EndLocation);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
	class AThreatCloud* GetThreatCloud(const struct FThreatLocationInfo& ThreatLocInfo);
	void DeactivateThreatClouds(TEnumAsByte<FortniteGame_EFortThreatDeactivationType> DeactivationType, TArray<struct FThreatGridIndex> GridIndices, float DeactivationDuration);
	void BeginThreatVisualsPrecursor(class AActor* SourceActor, const struct FVector& ThreatLocation);
	void ActivateThreatClouds(TArray<struct FThreatGridIndex> GridIndices);
};

// Class FortniteGame.FortAIEncounterRiftManager
// 0x0130 (FullSize[0x014C] - InheritedSize[0x001C])
class UFortAIEncounterRiftManager : public UObject
{
public:
	unsigned char                                      UnknownData_AXJW[0x4];                                     // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortAIEncounterInfo*                        MyEncounter;                                               // 0x0020(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIDirector*                             AIDirector;                                                // 0x0024(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnArea                   CurrentSpawnArea;                                          // 0x0028(0x0028) (NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnArea                   FutureSpawnArea;                                           // 0x0050(0x0028) (NativeAccessSpecifierPublic)
	float                                              UpdateIntervalTimeSeconds;                                 // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ACWO[0x4];                                     // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumRiftsToUse;                                             // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinRiftsToUse;                                             // 0x0084(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortEncounterSettings                      EncounterSettings;                                         // 0x0088(0x0030) (NativeAccessSpecifierPublic)
	float                                              ExtraSpawnLocationPercentage;                              // 0x00B8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo              CurrentEnvironmentQueryInfo;                               // 0x00BC(0x001C) (NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo              FallbackEnvironmentQueryInfo;                              // 0x00D8(0x001C) (NativeAccessSpecifierPublic)
	struct FFortAIEncounterQueryDirectionTracker       EncounterQueryDirectionTracker;                            // 0x00F4(0x0034) (NativeAccessSpecifierPublic)
	class UClass*                                      RiftClassTemplate;                                         // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastObjectiveBatchPathCostUpdateTime;                      // 0x012C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPlayerBatchPathCostUpdateTime;                         // 0x0130(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MLE7[0x18];                                    // 0x0134(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterRiftManager");
		return ptr;
	}



	class AFortMission* GetAssociatedMission();
};

// Class FortniteGame.FortAIEncounterSequence
// 0x0034 (FullSize[0x0050] - InheritedSize[0x001C])
class UFortAIEncounterSequence : public UObject
{
public:
	struct FFortGeneratedEncounterSequence             GeneratedEncounterSequence;                                // 0x001C(0x0024) (Protected, NativeAccessSpecifierProtected)
	int                                                CurrentEncounterIndexInSequence;                           // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAIEncounterInfo*                        CurrentEncounter;                                          // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAIDirector*                             AssociatedAIDirector;                                      // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMission*                                AssociatedMission;                                         // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterSequence");
		return ptr;
	}



	void StopCurrentEncounter();
	class UFortAIEncounterInfo* StartCurrentEncounter(TEnumAsByte<FortniteGame_EFortEncounterSequenceResult>* OutRequestResult, TArray<class AActor*> TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& OverrideEnvironmentQueryInfo, class AActor* OptionalQueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int ActivationDelay);
	TEnumAsByte<FortniteGame_EFortEncounterSequenceResult> Previous();
	TEnumAsByte<FortniteGame_EFortEncounterSequenceResult> Next();
	bool IsOnFinalIndexInSequence();
	bool HasEncounter();
	int GetNumEncountersInSequence();
	int GetEncounterIndexInSequence();
	class UFortAIEncounterInfo* GetCurrentEncounter();
	bool EncounterBelongsToSequence(class UFortAIEncounterInfo* InEncounter);
};

// Class FortniteGame.FortAIEncounterTargetInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortAIEncounterTargetInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterTargetInterface");
		return ptr;
	}



	bool IsFloatingTarget();
	float GetObjectiveCompletionPercentage();
};

// Class FortniteGame.FortAIFunctionLibrary
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortAIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIFunctionLibrary");
		return ptr;
	}



	void STATIC_MakeNoiseEventAtLocation(class AActor* NoiseMaker, float MaxRange, const struct FVector& NoiseLocation);
	void STATIC_MakeNoiseEvent(class AActor* NoiseMaker, float MaxRange);
};

// Class FortniteGame.FortAIGoalManager
// 0x00D4 (FullSize[0x0314] - InheritedSize[0x0240])
class AFortAIGoalManager : public AActor
{
public:
	unsigned char                                      UnknownData_MPMA[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxHorizontalTilesToUndermineGoal;                         // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxVerticalTilesToUndermineGoal;                           // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAIAssignment*>                   WorldAssignments;                                          // 0x024C(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortAIAssignment*>                   WorldEnemyAssignments;                                     // 0x0258(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortAIAssignment*                           DefaultAttackPlayersAssignment;                            // 0x0264(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5635[0x48];                                    // 0x0268(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UEnvQuery*>                           CombinedQueries;                                           // 0x02B0(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5N5J[0x3C];                                    // 0x02BC(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortAIAssignmentSettings*                   DefaultEncounterAssignmentSettings;                        // 0x02F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAIAssignmentSettings*                   DefaultUnderminingAssignmentSettings;                      // 0x02FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAIAssignmentSettings*                   DefaultEnemyAssignmentSettings;                            // 0x0300(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPawnGoalSelectionTableEntry>        PawnGoalSelectionTable;                                    // 0x0304(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EPWP[0x4];                                     // 0x0310(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIGoalManager");
		return ptr;
	}



	void STATIC_RemoveWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier);
	void STATIC_RemoveGoalsFromWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, TArray<struct FFortAIGoalInfo> GoalInfos);
	void STATIC_RemoveGoalFromWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const struct FFortAIGoalInfo& GoalInfo);
	void STATIC_MakeGoalsFromLocationsAndActor(TArray<struct FFortAIGoalInfo>* Goals, class UObject* WorldContextObject, TArray<struct FVector> GoalLocations, class AActor* GoalActor);
	void STATIC_MakeGoalsFromLocations(TArray<struct FFortAIGoalInfo>* Goals, class UObject* WorldContextObject, TArray<struct FVector> GoalLocations);
	void STATIC_MakeGoalsFromActors(TArray<struct FFortAIGoalInfo>* Goals, class UObject* WorldContextObject, TArray<class AActor*> GoalActors, bool bActorsAlwaysPerceived, bool bGoalActorsAllowUndermining);
	void STATIC_MakeGoalFromLocation(struct FFortAIGoalInfo* Goal, class UObject* WorldContextObject, const struct FVector& GoalLocation);
	void STATIC_MakeGoalFromActor(struct FFortAIGoalInfo* Goal, class UObject* WorldContextObject, class AActor* GoalActor, bool bActorAlwaysPerceived, bool bGoalActorAllowsUndermining);
	void STATIC_CreateWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& WorldAssignmentIdentifier, class UFortAIAssignmentSettings* AssignmentSettings, class UClass* GoalProvider, struct FFortAIAssignmentIdentifier* AssignmentIdentifier, TEnumAsByte<FortniteGame_EAssignmentCreationResult>* CreationResult);
	class UFortAIAssignment* AddWorldAssignment(class UFortAIAssignmentSettings* AssignmentSettings, class AActor* GoalActor);
	void STATIC_AddGoalToWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const struct FFortAIGoalInfo& GoalInfo);
	void STATIC_AddGoalsToWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, TArray<struct FFortAIGoalInfo> GoalInfos);
	void AddGoalActorToAssignment(class UFortAIAssignment* Assignment, class AActor* GoalActor);
	void AddGoal(class AActor* GoalActor, class UFortAIAssignmentSettings* GoalSettings);
};

// Class FortniteGame.BuildingTrap
// 0x00AC (FullSize[0x09F0] - InheritedSize[0x0944])
class ABuildingTrap : public ABuildingSMActor
{
public:
	unsigned char                                      UnknownData_KEWN[0x8];                                     // 0x0944(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 TrapRangeMesh;                                             // 0x094C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 TrapPreviewMesh;                                           // 0x0950(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrapItemDefinition*                     TrapData;                                                  // 0x0954(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       AttachmentHintText;                                        // 0x0958(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFortTargetFilter                           TriggerFilter;                                             // 0x0964(0x0014) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UFortAbilitySet*                             AbilitySet;                                                // 0x0978(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDamageSet*                              DamageAttributeSet;                                        // 0x097C(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAlterationItemDefinition*>       AppliedAlterations;                                        // 0x0980(0x000C) (Net, ZeroConstructor, SaveGame, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>               AlterationAbilitySetHandles;                               // 0x098C(0x000C) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                            AttachedTo;                                                // 0x0998(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                            LastAttachedTo;                                            // 0x099C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DelayBeforeDestroyAfterDurabilityExpired;                  // 0x09A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OBFE[0x4];                                     // 0x09A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPrimitiveComponent*>                 TriggerComponents;                                         // 0x09A8(0x000C) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UPrimitiveComponent*>                 DamageComponents;                                          // 0x09B4(0x000C) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>                StaticMeshes;                                              // 0x09C0(0x000C) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int                                                TrapLevel;                                                 // 0x09CC(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HR2M[0x20];                                    // 0x09D0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingTrap");
		return ptr;
	}



	void TriggerIfAppropriate();
	void OnTriggerTouch(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_ReplicatedAppliedAlterations();
	void OnRep_AttachedTo();
	void OnReloadEnd();
	void OnReloadBegin();
	void OnPlaced();
	void OnOutOfDurability();
	void OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod);
	void OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration);
	void OnFinishedBuilding();
	void OnDestroy();
	bool HasDurability();
	int GetTrapLevel();
	TArray<class AActor*> GetTouchingDamageTargets(const struct FFortTargetFilter& Filter);
	float GetReloadTime();
	float GetMaxDurability();
	struct FTransform GetFireLocationAndRotation();
	float GetFireDelay();
	float GetDurabilityPercent();
	float GetDamageDelay();
	struct FVector GetCenter();
	float GetBuildTime();
	class ABuildingSMActor* GetBuildingAttachedTo();
	float GetArmTime();
	TArray<class UFortAlterationItemDefinition*> GetAlterations();
	void FinishTrigger();
	bool BP_ShouldTrigger(TArray<class AActor*> TouchingActors);
	void AttemptRetrigger(float Seconds);
	void AddTriggerComponent(class UPrimitiveComponent* TriggerComponent);
	void AddDamageComponent(class UPrimitiveComponent* DamageComponent);
};

// Class FortniteGame.BuildingTrapCeiling
// 0x0000 (FullSize[0x09F0] - InheritedSize[0x09F0])
class ABuildingTrapCeiling : public ABuildingTrap
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingTrapCeiling");
		return ptr;
	}



};

// Class FortniteGame.BuildingTrapFloor
// 0x0000 (FullSize[0x09F0] - InheritedSize[0x09F0])
class ABuildingTrapFloor : public ABuildingTrap
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingTrapFloor");
		return ptr;
	}



};

// Class FortniteGame.BuildingTrapWall
// 0x0000 (FullSize[0x09F0] - InheritedSize[0x09F0])
class ABuildingTrapWall : public ABuildingTrap
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingTrapWall");
		return ptr;
	}



};

// Class FortniteGame.BuildingWall
// 0x00AC (FullSize[0x09F0] - InheritedSize[0x0944])
class ABuildingWall : public ABuildingSMActor
{
public:
	unsigned char                                      UnknownData_WRZG[0x4];                                     // 0x0944(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FClimbLinkData                              ClimbLink;                                                 // 0x0948(0x002C) (DuplicateTransient, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EBuildingWallArea>        AreaShapeType;                                             // 0x0974(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KTJ5[0x3];                                     // 0x0975(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DoorClass;                                                 // 0x0978(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     DoorOffset;                                                // 0x097C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TAssetPtr<class UClass>                            DoorObstacleClass;                                         // 0x0988(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        DoorComponent;                                             // 0x09A0(0x0004) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNavLinkCustomComponent*                     DoorSmartLinkComp;                                         // 0x09A4(0x0004) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        DoorBlueprintMeshComp;                                     // 0x09A8(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>            DoorAnimatingMIDs;                                         // 0x09AC(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bDoorOpen : 1;                                             // 0x09B8(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bDoorCollisionDisabled : 1;                                // 0x09B8(0x0001) BIT_FIELD (Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VB9V[0x3];                                     // 0x09B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    DoorDesiredRotation;                                       // 0x09BC(0x000C) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GS9U[0x20];                                    // 0x09C8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBuildingActorNavArea                       AreaPatternOverride;                                       // 0x09E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCreateClimbLink : 1;                                      // 0x09EC(0x0001) BIT_FIELD (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W4GL[0x3];                                     // 0x09ED(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingWall");
		return ptr;
	}



	void OnRep_bDoorOpen();
	void OnRep_bDoorCollisionDisabled();
};

// Class FortniteGame.KeepHeartBase
// 0x002C (FullSize[0x0970] - InheritedSize[0x0944])
class AKeepHeartBase : public ABuildingSMActor
{
public:
	TAssetPtr<class UClass>                            BuildingInstructionsHandlerClass;                          // 0x0944(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L3SN[0x10];                                    // 0x095C(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortSaveFileBuildingInstructionsHandler*    SaveFileInstructionsHandler;                               // 0x096C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.KeepHeartBase");
		return ptr;
	}



	void SetAllowLooting(bool bAllowed);
	bool SaveUserKeep(class AFortPlayerController* FortPC);
	bool ResetUserKeep(class AFortPlayerController* FortPC);
	void LoadUserKeep(class AFortPlayerController* FortPC);
	bool IsKeepOwner(class AFortPlayerController* FortPC);
	bool IsKeepLoaded();
	void AssociateWithTheMission(class AFortMission* KeepMission);
};

// Class FortniteGame.FortKeepEventInfo
// 0x0018 (FullSize[0x0034] - InheritedSize[0x001C])
class UFortKeepEventInfo : public UDataAsset
{
public:
	struct FText                                       EventDescription;                                          // 0x001C(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FKeepEventWaveData>                  Waves;                                                     // 0x0028(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortKeepEventInfo");
		return ptr;
	}



	int NumberOfWaves();
	struct FKeepEventWaveData GetWave(int INDEX);
};

// Class FortniteGame.FortKeepEventList
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortKeepEventList : public UDataAsset
{
public:
	TArray<struct FKeepEventInfo>                      Events;                                                    // 0x001C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortKeepEventList");
		return ptr;
	}



	struct FText GetEventDescription(int Idx);
	struct FKeepEventInfo GetEvent(int Idx);
};

// Class FortniteGame.FortKeepDefenseManager
// 0x008C (FullSize[0x02CC] - InheritedSize[0x0240])
class AFortKeepDefenseManager : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnEventStarted;                                            // 0x0240(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWarmupEnded;                                             // 0x024C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEncounterTimeout;                                        // 0x0258(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEventEnded;                                              // 0x0264(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEventStopped;                                            // 0x0270(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAllEnemiesKilled;                                        // 0x027C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEncounterStarted;                                        // 0x0288(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEncounterEnded;                                          // 0x0294(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDefenseStateChanged;                                     // 0x02A0(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NA3R[0x8];                                     // 0x02AC(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortAIEncounterInfo*                        ActiveAIEncounter;                                         // 0x02B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAISpawnGroupProgressionInfo*            ActiveAISpawnGroup;                                        // 0x02B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S6YQ[0x10];                                    // 0x02BC(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortKeepDefenseManager");
		return ptr;
	}



	void StopEvent();
	void StartEventFromList(class UFortKeepEventList* EventList, int EventNumber);
	void StartEvent(class UFortKeepEventInfo* EventTemplate, int DifficultyLevelOffset);
	class UFortAIEncounterInfo* StartAIEncounter(class UClass* EncounterTemplate, class AActor* TargetActor, class UFortAISpawnGroupProgressionInfo* SpawnGroupProgressionInfo, int ActivationDelay, int EncounterDifficultyLevel, float AliveMultiplier);
	void SkipWarmup();
	void GoToNextWave();
	struct FText GetWaveDescription();
	int GetNumberAliveEnemies();
	struct FText GetEventDescriptionFromTheList(class UFortKeepEventList* EventList, int EventNumber);
};

// Class FortniteGame.FortZoneRecord
// 0x00F0 (FullSize[0x0128] - InheritedSize[0x0038])
class UFortZoneRecord : public UFortGenericRecord
{
public:
	int                                                WorldSaveCount;                                            // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     WUID;                                                      // 0x003C(0x000C) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ZoneIndex;                                                 // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PersistentLevelName;                                       // 0x004C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortLevelRecord>                    SavedLevels;                                               // 0x0054(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                NumSavedLevels;                                            // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ZoneTileSeed;                                              // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortZoneStats                              Stats;                                                     // 0x0068(0x00B4) (NativeAccessSpecifierPublic)
	TArray<struct FStatManagerPeriodRecord>            PlayerMapStatManagerPeriods;                               // 0x011C(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortZoneRecord");
		return ptr;
	}



};

// Class FortniteGame.KeepHeart
// 0x0020 (FullSize[0x0990] - InheritedSize[0x0970])
class AKeepHeart : public AKeepHeartBase
{
public:
	class AActor*                                      DecorationRoomPlacement;                                   // 0x0970(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PermaniteHealEffect;                                       // 0x0974(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PermaniteWallWeight;                                       // 0x0978(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PermaniteFloorWeight;                                      // 0x097C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PermaniteStairWeight;                                      // 0x0980(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PermaniteRoofWeight;                                       // 0x0984(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EKeepDefenseState>        DefenseState;                                              // 0x0988(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LYRB[0x7];                                     // 0x0989(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.KeepHeart");
		return ptr;
	}



	bool UpgradeAllPermaniteStructures(class AFortPlayerController* FortPC, bool bQuickUpgrade);
	void StreamOutWorld();
	void StreamInWorld();
	void StartVote(const struct FText& VoteText, const struct FText& YesText, const struct FText& NoText, float PercentageToPass, bool bSkipIfOnePlayerOnly);
	void SetPermaniteAvailability(bool bAvailable);
	void RestoreKeepHealth();
	void RestoreContainers();
	void ResetContainers();
	void OnWorldStreamedIn();
	void OnVoteComplete(bool bResult);
	void OnDefenseLevelChanged();
	void NotifyEncounterStarted(class UFortAIEncounterInfo* StartedEncounter);
	void NotifyEncounterEnded(class UFortAIEncounterInfo* EndedEncounter);
	bool IsWorldStreamingIn();
	bool IsWorldStreamedIn();
	bool IsDefenseActive();
	void HandleVoteComplete(bool bResult);
	float GetWorldStreamingInProgress();
	int GetUpgradeAllPermaniteCost(class AFortPlayerController* FortPC, bool bQuickUpgrade);
	int GetPermaniteStructureNumber();
	int GetPermaniteStructureLimit();
	int GetDefenseLevel();
	float GetAveragePermaniteLevel();
	bool DestroyNonPermaniteStructures();
	void DelayedVoteSuccess();
};

// Class FortniteGame.ManorHeart
// 0x0018 (FullSize[0x0988] - InheritedSize[0x0970])
class AManorHeart : public AKeepHeartBase
{
public:
	class AActor*                                      KeepIconActor;                                             // 0x0970(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             ContainerNamesToDestroy;                                   // 0x0974(0x000C) (Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class UClass*                                      InfiniteStaminaEffect;                                     // 0x0980(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JI3U[0x4];                                     // 0x0984(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.ManorHeart");
		return ptr;
	}



	void TravelToNewWorld(class UFortTheaterInfo* NewTheater);
};

// Class FortniteGame.FortDynamicBuilder
// 0x0044 (FullSize[0x045C] - InheritedSize[0x0418])
class AFortDynamicBuilder : public ABuildingActor
{
public:
	class UFortBuildingInstructions*                   BuildingInstructions;                                      // 0x0418(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSelectiveDestruction;                                     // 0x041C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bNoCollisionFail;                                          // 0x041D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIgnoreMissionActors;                                      // 0x041E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bShrinkAndDestroyEffect;                                   // 0x041F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bDebugDrawBounds;                                          // 0x0420(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUsePlayerBuildAnimations;                                 // 0x0421(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MHV6[0x2];                                     // 0x0422(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BuildingConstructionTime;                                  // 0x0424(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFDynamicBuildOrder>      BuildOrder;                                                // 0x0428(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReverseBuild;                                             // 0x0429(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9F49[0x1E];                                    // 0x042A(0x001E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentIndex;                                              // 0x0448(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7DA8[0x10];                                    // 0x044C(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDynamicBuilder");
		return ptr;
	}



};

// Class FortniteGame.FortClientDynamicBuilder
// 0x0000 (FullSize[0x045C] - InheritedSize[0x045C])
class AFortClientDynamicBuilder : public AFortDynamicBuilder
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortClientDynamicBuilder");
		return ptr;
	}



};

// Class FortniteGame.FortEnemySpawn
// 0x0008 (FullSize[0x0420] - InheritedSize[0x0418])
class AFortEnemySpawn : public ABuildingActor
{
public:
	int                                                OccupyCount;                                               // 0x0418(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClusterRadius;                                             // 0x041C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortEnemySpawn");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayTagVolumeInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortGameplayTagVolumeInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayTagVolumeInterface");
		return ptr;
	}



	void ApplyTags();
};

// Class FortniteGame.FortGameplayTagBuildingActor
// 0x0030 (FullSize[0x0448] - InheritedSize[0x0418])
class AFortGameplayTagBuildingActor : public ABuildingActor
{
public:
	unsigned char                                      UnknownData_ZOL1[0x4];                                     // 0x0418(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAutomaticallyGenerated;                                   // 0x041C(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2LH0[0x3];                                     // 0x041D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       TagsToApplyOnSave;                                         // 0x0420(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int                                                XGridCells;                                                // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                YGridCells;                                                // 0x043C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ZGridCells;                                                // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               BoxComponent;                                              // 0x0444(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayTagBuildingActor");
		return ptr;
	}



};

// Class FortniteGame.FortPlacementActor
// 0x0008 (FullSize[0x0420] - InheritedSize[0x0418])
class AFortPlacementActor : public ABuildingActor
{
public:
	TWeakObjectPtr<class AActor>                       OccupyingActor;                                            // 0x0418(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlacementActor");
		return ptr;
	}



};

// Class FortniteGame.BuildingActorEditorComponent
// 0x003C (FullSize[0x0550] - InheritedSize[0x0514])
class UBuildingActorEditorComponent : public UStaticMeshComponent
{
public:
	TAssetPtr<class UMaterialInterface>                CurrentlySnappedMaterial;                                  // 0x0514(0x0018) (UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UStaticMesh>                       CubeMesh;                                                  // 0x052C(0x0018) (UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CubeMeshDrawScale;                                         // 0x0544(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N27J[0x8];                                     // 0x0548(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingActorEditorComponent");
		return ptr;
	}



};

// Class FortniteGame.BuildingActorHotSpotRenderingComponent
// 0x0004 (FullSize[0x0430] - InheritedSize[0x042C])
class UBuildingActorHotSpotRenderingComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData_2DGG[0x4];                                     // 0x042C(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingActorHotSpotRenderingComponent");
		return ptr;
	}



};

// Class FortniteGame.BuildingConnectivityComponent
// 0x00A4 (FullSize[0x0250] - InheritedSize[0x01AC])
class UBuildingConnectivityComponent : public USceneComponent
{
public:
	TArray<struct FFortConnectionData>                 Connections;                                               // 0x01AC(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FName>                               SocketNames;                                               // 0x01B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bAutoConnectOnInitialize;                                  // 0x01C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bDrawDebugData;                                            // 0x01C5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CUM8[0x2];                                     // 0x01C6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ABuildingSMActor*                            BuildingOwner;                                             // 0x01C8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingConnectivityEffect*>         ConnectionEffects;                                         // 0x01CC(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsPowered;                                                // 0x01D8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsProvidingPower;                                         // 0x01D9(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsAbleToProvidePower;                                     // 0x01DA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bAllowConnections;                                         // 0x01DB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bAllowsPowerToPassThrough;                                 // 0x01DC(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B8LG[0x3];                                     // 0x01DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    AuthorityOnConnectedDelegate;                              // 0x01E0(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    AuthorityOnDisconnectedDelegate;                           // 0x01EC(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    ClientOnConnectedDelegate;                                 // 0x01F8(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    ClientOnDisconnectedDelegate;                              // 0x0204(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    AuthorityOnPoweredDelegate;                                // 0x0210(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    AuthorityOnUnpoweredDelegate;                              // 0x021C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    ClientOnPoweredDelegate;                                   // 0x0228(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    ClientOnUnpoweredDelegate;                                 // 0x0234(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OPP2[0x10];                                    // 0x0240(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingConnectivityComponent");
		return ptr;
	}



	void SetIsProvidingPower(bool bNewIsProvidingPower);
	void SetAllowConnections(bool bInAllowConnections);
	void OnRep_Connections();
	void OnRep_bIsProvidingPower();
	void OnRep_bIsPowered();
	void OnPlaced();
	bool K2_IsPowered();
	bool IsConnectedTo(class ABuildingSMActor* TestActor);
	void DrawDebugData();
	void DisconnectAll();
	void Disconnect(const struct FFortConnectionData& NewDisconnection);
	void Connect(const struct FFortConnectionData& NewConnection);
	bool CanConnectTo(class ABuildingSMActor* TestActor);
};

// Class FortniteGame.FortItemCategory
// 0x0024 (FullSize[0x0040] - InheritedSize[0x001C])
class UFortItemCategory : public UDataAsset
{
public:
	TArray<struct FItemCategoryMappingData>            PrimaryCategories;                                         // 0x001C(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemCategory>                       SecondaryCategories;                                       // 0x0028(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemCategory>                       TertiaryCategories;                                        // 0x0034(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortItemCategory");
		return ptr;
	}



};

// Class FortniteGame.FortAmmoItemDefinition
// 0x0348 (FullSize[0x0900] - InheritedSize[0x05B8])
class UFortAmmoItemDefinition : public UFortWorldItemDefinition
{
public:
	struct FCanvasIcon                                 ReticleIcon;                                               // 0x05B8(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 ClipIconBrush;                                             // 0x05CC(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bIsConsumed;                                               // 0x0640(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4Q3L[0x3];                                     // 0x0641(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RegenCooldown;                                             // 0x0644(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                         AmmoIconBrush;                                             // 0x0648(0x02B8) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAmmoItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortBackpackItemDefinition
// 0x0008 (FullSize[0x05C0] - InheritedSize[0x05B8])
class UFortBackpackItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_64G2[0x8];                                     // 0x05B8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBackpackItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortBadgeItemDefinition
// 0x0028 (FullSize[0x05E0] - InheritedSize[0x05B8])
class UFortBadgeItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_A231[0x4];                                     // 0x05B8(0x0004) Fix Super Size
	struct FText                                       DisplayText;                                               // 0x05BC(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       FailedDisplayText;                                         // 0x05C8(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         BadgeScoringValuesHandle;                                  // 0x05D4(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBadgeItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortMissionGenerationData
// 0x009C (FullSize[0x00B8] - InheritedSize[0x001C])
class UFortMissionGenerationData : public UDataAsset
{
public:
	TArray<class UFortMissionGenerator*>               PrimaryMissionGenerators;                                  // 0x001C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              PrimaryMissionMinPowerPointsUsagePercentage;               // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        SecondaryMissionPowerPointsBudgetMultiplier;               // 0x002C(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        MinSecondaryMissionPowerPointsMultiplier;                  // 0x0038(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        MaxSecondaryMissionPowerPointsMultiplier;                  // 0x0044(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        MinSecondaryMissions;                                      // 0x0050(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        MaxSecondaryMissions;                                      // 0x005C(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        TertiaryMissionPowerPointsBudgetMultiplier;                // 0x0068(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        MinTertiaryMissionPowerPointsMultiplier;                   // 0x0074(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        MaxTertiaryMissionPowerPointsMultiplier;                   // 0x0080(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        PowerPointsCurve;                                          // 0x008C(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortDifficultyOptionBudget>         EncounterDifficultyOptionBudgets;                          // 0x0098(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              EncounterMinDifficultyOptionPointsUsagePercentage;         // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortDifficultyOptionBudget>         MissionDifficultyOptionBudgets;                            // 0x00A8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              MissionMinDifficultyOptionPointsUsagePercentage;           // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionGenerationData");
		return ptr;
	}



};

// Class FortniteGame.FortMissionGenerator
// 0x043C (FullSize[0x0458] - InheritedSize[0x001C])
class UFortMissionGenerator : public UDataAsset
{
public:
	float                                              MissionGenerationChance[0x3];                              // 0x001C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionEntry>                   MissionList;                                               // 0x0028(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionEntry>                   AlwaysLoadedMissions;                                      // 0x0034(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortMissionInfo>                  PrimaryMissionInfo;                                        // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortPossibleMission>                SecondaryMissionList;                                      // 0x0058(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortPossibleMission>                TertiaryMissionList;                                       // 0x0064(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FText                                       MissionName;                                               // 0x0070(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       MissionDescription;                                        // 0x007C(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 MissionIcon;                                               // 0x0088(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                         MissionIcons;                                              // 0x00FC(0x02B8) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FZoneLoadingScreenConfig                    LoadingScreenConfig;                                       // 0x03B4(0x0070) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortMissionInfo>                  MissionInfo;                                               // 0x0424(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortMissionInfoOption>              MissionInfoList;                                           // 0x043C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsRequiredForVictoryTile;                                 // 0x0448(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4GL1[0x3];                                     // 0x0449(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDataTableRowHandle                         CostAndAvailability;                                       // 0x044C(0x000C) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionGenerator");
		return ptr;
	}



};

// Class FortniteGame.FortMissionGenerationManager
// 0x0004 (FullSize[0x0244] - InheritedSize[0x0240])
class AFortMissionGenerationManager : public AActor
{
public:
	TEnumAsByte<FortniteGame_EFortCheatMissionGenType> CheatMissionGenType;                                       // 0x0240(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K3X1[0x3];                                     // 0x0241(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionGenerationManager");
		return ptr;
	}



};

// Class FortniteGame.FortMissionInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortMissionInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionInterface");
		return ptr;
	}



	void BlueprintHandleMissionEventNoReply(const struct FFortMissionEvent& MissionEvent);
};

// Class FortniteGame.FortMissionManager
// 0x00A8 (FullSize[0x02E8] - InheritedSize[0x0240])
class AFortMissionManager : public AActor
{
public:
	TArray<struct FFortMissionEventName>               MissionEventNames;                                         // 0x0240(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            BluGloManagerClass;                                        // 0x024C(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortBluGloManager*                          BluGloManager;                                             // 0x0264(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortMission*>                        Missions;                                                  // 0x0268(0x000C) (Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YP2A[0x3C];                                    // 0x0274(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFortMissionUIActorHandle>           MissionUIActors;                                           // 0x02B0(0x000C) (Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	class AFortNotificationManager*                    NotificationManager;                                       // 0x02BC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMission*                                CurrentTimedMission;                                       // 0x02C0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMission*                                MissionClosestToPar;                                       // 0x02C4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableParClockFaceCountdown;                              // 0x02C8(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OZ89[0x1F];                                    // 0x02C9(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionManager");
		return ptr;
	}



	void OnRep_MissionUIActors();
	void OnRep_Missions();
	void OnRep_CurrentTimedMission();
};

// Class FortniteGame.FortMissionLibrary
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortMissionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionLibrary");
		return ptr;
	}



	bool STATIC_UnregisterForMissionEvents(class AActor* ActorToUnregister, const struct FGuid& MissionGuid);
	void STATIC_TeleportPlayerPawn(class AFortPlayerPawn* PlayerPawn, const struct FVector& DestLocation, const struct FRotator& DestRotation);
	void STATIC_TeleportPawnNearLocation(class AFortPawn* Pawn, const struct FVector& DestLocation);
	void STATIC_StopAIEncounterAgainstActor(class UObject* WorldContextObject, class AActor* TargetActor);
	void STATIC_StopAIEncounter(class UObject* WorldContextObject, class UFortAIEncounterInfo* ActiveEncounter);
	void STATIC_StartTutorialNotification(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class UClass* Notification, class AFortPlayerController* SpecificPlayer, class AFortPlayerPawn* OptionalPlayerPawn1, class AFortPlayerPawn* OptionalPlayerPawn2, const struct FText& OverrideTitleText, const struct FText& OverrideDisplayText, const struct FText& OverrideSystemText, const struct FText& OverrideNameText, float OverrideDisplayTime, bool bOverrideButtonEnabled, bool bOverrideLightboxEnabled, bool bOverrideLightboxDisableInputOnly, TEnumAsByte<SlateCore_EVerticalAlignment> OverrideVAlign, TEnumAsByte<SlateCore_EHorizontalAlignment> OverrideHAlign, const struct FMargin& OverridePadding, class USoundBase* OptionalSound, bool bWaitForClients);
	void STATIC_StartPlayingMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortMissionEventParams* Params, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int GenericInt, float GenericFloat, const struct FText& GenericText, const struct FGameplayTagContainer& GameplayTags);
	void STATIC_StartNotification(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class UClass* Notification, class AFortPlayerController* SpecificPlayer, const struct FText& OverrideTitleText, const struct FText& OverrideDisplayText, float OverrideDisplayTime, class AFortPlayerPawn* OptionalPlayerPawn1, class AFortPlayerPawn* OptionalPlayerPawn2, const struct FName& OptionalActionName, class USoundBase* OptionalSound, bool bPlaySoundAsFeedback, bool bTreatAsUnique, bool bCancelActiveNotification, bool bWaitForClients);
	class UFortAIEncounterInfo* STATIC_StartAIEncounterWithEnvironmentQuery(class UObject* WorldContextObject, struct FString* AssociatedMissionName, class UClass* EncounterTemplate, class AActor* TargetActor, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int ActivationDelay);
	class UFortAIEncounterInfo* STATIC_StartAIEncounter(class UObject* WorldContextObject, struct FString* AssociatedMissionName, class UClass* EncounterTemplate, class AActor* TargetActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int ActivationDelay);
	class AFortPickup* STATIC_SpawnMissionItemPickupInWorld(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortWorldItemDefinition* ItemDefinition, int NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int OverrideMaxStackCount);
	class AFortPickup* STATIC_SpawnMissionItemPickup(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortMissionItemDefinition* MissionItemDefinition, const struct FVector& StartPosition, class AFortPawn* TargetPawn);
	class ABuildingActor* STATIC_SpawnBuildingActorAtTransform(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UClass* BuildingClass, const struct FTransform& Transform);
	TArray<class AActor*> STATIC_SpawnAtPlacementActorsHelper(class UObject* WorldContextObject, class UClass* Entries, bool* bSucceeded);
	bool STATIC_ShouldUseAlternateAIDirectorBalance();
	void STATIC_SetOnlinePresenceDoNotDisturb(class UObject* WorldContextObject, bool bDoNotDisturb, class AFortPlayerController* SpecificPlayer);
	void STATIC_RegisterMissionInfoUIActor(class AActor* AttachmentActor, const struct FGuid& MissionGuid, const struct FVector& AttachementOffset, float MaxVisibleDistance);
	bool STATIC_RegisterForMissionEvents(class AActor* ActorToRegister, const struct FGuid& MissionGuid);
	int STATIC_PollActorsInVolume(class UObject* WorldContextObject, class UBoxComponent* VolumeBoxComponent, TEnumAsByte<FortniteGame_EPollActorsInVolumeTypes> PollBuildingTypes, class UClass* ActorClassToPoll);
	void STATIC_PingMinimap(class UObject* WorldContextObject, const struct FVector& WorldLocation, const struct FLinearColor& PingColor);
	int STATIC_NumBluGloFromPlayerState(class AFortPlayerStateZone* PlayerState);
	int STATIC_NumBluGloFromPlayerPawn(class AFortPlayerPawn* PlayerPawn);
	void STATIC_LoadMission(class UObject* WorldContextObject, class UFortMissionInfo* MissionInfo);
	bool STATIC_IsUsingNewMissionGeneration(class UObject* WorldContextObject);
	bool STATIC_HasTags(const struct FGameplayTagContainer& ContainerToCheck, const struct FGameplayTagContainer& TagsToCheck, bool bRequireAll, bool bCountEmptyAsMatch);
	bool STATIC_GiveMissionSchematicItemDirectlyToPlayer(class UObject* WorldContextObject, class AFortPlayerController* TargetPlayer, const struct FGuid& MissionGuid, class UFortSchematicItemDefinition* SchematicDefinition);
	void STATIC_GiveMissionRewardsToPlayerAsPickups(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class AFortPlayerController* PlayerController, const struct FVector& StartPosition, float Radius, const struct FName& LootTierGroup, int LootTier);
	void STATIC_GiveMissionRewardsToPlayer(class UObject* WorldContextObject, const struct FGuid& EventGuid, class AFortPlayerController* PlayerController, const struct FText& TitleText, const struct FText& DescriptionText, const struct FName& LootTierGroup, int LootTier, float RewardDisplayTime);
	class AFortMission* STATIC_GetMissionFromGuid(class UObject* WorldContextObject, const struct FGuid& MissionGuid);
	class AFortBluGloManager* STATIC_GetBluGloManager(class UObject* WorldContextObject);
	TArray<class AFortMission*> STATIC_GetAllLoadedMissions(class UObject* WorldContextObject);
	class AFortPlacementActor* STATIC_FindOriginatingPlacementActor(class ABuildingActor* BuildingActor);
	TArray<class ABuildingActor*> STATIC_FindActorsWithTags(class UObject* WorldContextObject, const struct FGameplayTagContainer& Tags);
	void STATIC_ExecuteMissionEventEx(class UObject* WorldContextObject, const struct FFortMissionEventName& EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int GenericInt, float GenericFloat, const struct FText& GenericText, const struct FGameplayTagContainer& GameplayTags);
	void STATIC_ExecuteMissionEvent(class UObject* WorldContextObject, const struct FName& EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int GenericInt, float GenericFloat, const struct FText& GenericText, const struct FGameplayTagContainer& GameplayTags);
	struct FFortMissionEvent STATIC_CreateMissionEvent(class UObject* WorldContextObject, const struct FName& EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int GenericInt, float GenericFloat, const struct FText& GenericText, const struct FGameplayTagContainer& GameplayTags);
	void STATIC_CreateDynamicBuildingDeconstructor(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& BoxExtent, bool bIgnoreMissionActors, bool bShrinkAndDestroy);
};

// Class FortniteGame.FortPvPMissionManager
// 0x0000 (FullSize[0x02E8] - InheritedSize[0x02E8])
class AFortPvPMissionManager : public AFortMissionManager
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPMissionManager");
		return ptr;
	}



};

// Class FortniteGame.FortPlacementActorDataProviderInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortPlacementActorDataProviderInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlacementActorDataProviderInterface");
		return ptr;
	}



};

// Class FortniteGame.FortMissionTimerInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortMissionTimerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionTimerInterface");
		return ptr;
	}



};

// Class FortniteGame.FortMission
// 0x0164 (FullSize[0x03A8] - InheritedSize[0x0244])
class AFortMission : public AFortMissionState
{
public:
	unsigned char                                      UnknownData_NFOG[0x8];                                     // 0x0244(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortMissionInfo*                            MissionInfo;                                               // 0x024C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMissionGenerator*                       MissionGenerator;                                          // 0x0250(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EMissionGenerationCategory> MissionCategory;                                           // 0x0254(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E3CC[0x3];                                     // 0x0255(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                UIIndex;                                                   // 0x0258(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionEventName>               MissionEventNames;                                         // 0x025C(0x000C) (ZeroConstructor, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	bool                                               bLoadedFromRecord;                                         // 0x0268(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YIA2[0x3];                                     // 0x0269(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MissionActivationTime;                                     // 0x026C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSilentDestroyNextFrame;                                   // 0x0270(0x0001) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HYTT[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AFortObjectiveBase*>                  ActiveObjectives;                                          // 0x0274(0x000C) (Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortMissionStatus>       MissionStatus;                                             // 0x0280(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZEKG[0x3];                                     // 0x0281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       ObjectiveCompletionTags;                                   // 0x0284(0x0018) (Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortBadgeItemDefinition*>            AwardedBadges;                                             // 0x029C(0x000C) (ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsMissionVisible;                                         // 0x02A8(0x0001) (Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IF2Q[0x3];                                     // 0x02A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentObjectiveBlockIndex;                                // 0x02AC(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsMissionVisibleOverride;                                 // 0x02B0(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H8HH[0x3];                                     // 0x02B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGuid                                       MissionGuid;                                               // 0x02B4(0x0010) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int                                                StartingDay;                                               // 0x02C4(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMissionTimerComponent*                  TimerComponent;                                            // 0x02C8(0x0004) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9XBG[0x4];                                     // 0x02CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ChosenRewardIdx;                                           // 0x02D0(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y2SH[0x94];                                    // 0x02D4(0x0094) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortGeneratedDifficultyOptions             GeneratedMissionOptions;                                   // 0x0368(0x0034) (Protected, NativeAccessSpecifierProtected)
	struct FFortMissionInstancedConfigData             ConfigData;                                                // 0x039C(0x000C) (Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMission");
		return ptr;
	}



	void StopMissionAIEncounter(class UFortAIEncounterInfo* EncounterToStop);
	void StopEncounterSequence(class UFortAIEncounterSequence* SequenceToStop);
	void StartMissionNotification(const struct FLatentActionInfo& LatentInfo, class UClass* Notification, class AFortPlayerController* SpecificPlayer, const struct FText& OverrideDisplayText, class AFortPlayerPawn* OptionalPlayerPawn1, class AFortPlayerPawn* OptionalPlayerPawn2, const struct FName& OptionalActionName, class USoundBase* OptionalSound, bool bTreatAsUnique, bool bCancelActiveNotification, bool bWaitForClients);
	class UFortAIEncounterInfo* StartMissionAIEncounterFromGeneratedProfile(int GeneratedEncounterProfileIndex, TArray<class AActor*> TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int ActivationDelay);
	class UFortAIEncounterInfo* StartMissionAIEncounter(class UClass* EncounterTemplate, TArray<class AActor*> TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int ActivationDelay);
	TArray<class AActor*> STATIC_SpawnAtPlacementActorsAsArray(class AFortMission* Mission, bool* bSucceeded);
	void SetUiVisibility(bool bInIsMissionVisible);
	void SetToSilentDestroy();
	void RemoveGoalsFromEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter, TArray<struct FFortAIGoalInfo> GoalInfos);
	void RemoveGoalFromEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter, const struct FFortAIGoalInfo& GoalInfo);
	void RemoveEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter);
	void OnWorldReady();
	void OnRep_UIIndex();
	void OnRep_bIsMissionVisible();
	void OnMatchStarted();
	void GrantRewardsByTag(const struct FGameplayTag& RewardTag, TEnumAsByte<FortniteGame_EFortRewardType> RewardType);
	float GetPlayerPawnDamage(class AFortPlayerController* PlayerController);
	float GetPlayerBuildingDamage(class AFortPlayerController* PlayerController);
	int GetPawnDamageLootTier(class AFortPlayerController* PlayerController);
	TEnumAsByte<FortniteGame_EFortObjectiveStatus> GetObjectiveStatusByHandle(const struct FGameplayTagContainer& ObjectiveHandle);
	class AFortObjectiveBase* GetObjectiveByHandle(const struct FGameplayTagContainer& ObjectiveHandle);
	struct FGuid GetMissionGuid();
	TArray<class AFortPlayerController*> GetMissionFortPlayerControllers();
	float GetExpectedCompletionTime();
	void GetDefaultAssignmentForEncounter(class UFortAIEncounterInfo* Encounter, class UFortAIAssignment** DefaultAssignment);
	int GetCurrentBluGloRewards();
	class UFortMissionConfigData* GetConfigData(const struct FGameplayTag& InBucketTag);
	int GetBuildingDamageLootTier(class AFortPlayerController* PlayerController);
	void FocusThisMission(bool bTemporaryFocus);
	void FindGoalLocationsForEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter, TArray<struct FVector>* OutGoalLocations);
	class UFortAIEncounterSequence* CreateEncounterSequence(const struct FGameplayTagContainer& SequenceTags);
	TEnumAsByte<FortniteGame_EAssignmentCreationResult> CreateEncounterAssignment(const struct FGameplayTagContainer& AssignmentTags, class UFortAIEncounterInfo* Encounter, class UFortAIAssignmentSettings* AssignmentSettings, class UClass* GoalProvider, struct FFortAIAssignmentIdentifier* AssignmentIdentifier);
	struct FFortMissionWeightedReward ChooseRandomReward();
	void BlueprintPostMissionLoad();
	void BlueprintOnStartPlaying(const struct FFortMissionEvent& MissionEvent);
	void BlueprintOnMissionEnd(TEnumAsByte<FortniteGame_EFortMissionStatus> Status);
	void BlueprintOnActivated(const struct FFortMissionEvent& MissionEvent);
	void BlueprintHandleMissionEventNoReply(const struct FFortMissionEvent& MissionEvent);
	void BlueprintCustomHandleMissionEvent(const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int GenericInt, float GenericFloat, const struct FText& GenericText, const struct FGameplayTagContainer& GameplayTags, const struct FFortMissionEvent& MissionEvent);
	void AttemptMissionSave(const struct FString& OptionalSaveName);
	void AddGoalToEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter, const struct FFortAIGoalInfo& GoalInfo);
	void AddGoalToAssignment(class UFortAIAssignment* Assignment, const struct FFortAIGoalInfo& GoalInfo);
	void AddGoalsToEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter, TArray<struct FFortAIGoalInfo> GoalInfos);
	void AddGoalsToAssignment(class UFortAIAssignment* Assignment, TArray<struct FFortAIGoalInfo> GoalInfos);
};

// Class FortniteGame.FortPvPMission
// 0x0008 (FullSize[0x03B0] - InheritedSize[0x03A8])
class AFortPvPMission : public AFortMission
{
public:
	class AFortPlayerStatePvP*                         WinningPlayerState;                                        // 0x03A8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortTeamInfo*                               WinningTeam;                                               // 0x03AC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPMission");
		return ptr;
	}



};

// Class FortniteGame.FortPvPMission_3PtDomination
// 0x001C (FullSize[0x03CC] - InheritedSize[0x03B0])
class AFortPvPMission_3PtDomination : public AFortPvPMission
{
public:
	TArray<class ABuildingCapturePointActor*>          CapturePoints;                                             // 0x03B0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<int>                                        TeamScores;                                                // 0x03BC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	int                                                ScoreToWin;                                                // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPMission_3PtDomination");
		return ptr;
	}



	void CapturePointSetterHackTimer();
};

// Class FortniteGame.FortPvPMission_CTF
// 0x0010 (FullSize[0x03C0] - InheritedSize[0x03B0])
class AFortPvPMission_CTF : public AFortPvPMission
{
public:
	TArray<int>                                        TeamCaptureTotals;                                         // 0x03B0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	int                                                TotalCapturesToWin;                                        // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPMission_CTF");
		return ptr;
	}



};

// Class FortniteGame.FortPvPMission_EnemyBaseDestruction
// 0x0000 (FullSize[0x03B0] - InheritedSize[0x03B0])
class AFortPvPMission_EnemyBaseDestruction : public AFortPvPMission
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPMission_EnemyBaseDestruction");
		return ptr;
	}



	class AFortPvPBaseCornerstone* GetCornerstoneForTeam(TEnumAsByte<FortniteGame_EFortTeam> InTeam);
};

// Class FortniteGame.FortPvPObjective
// 0x0004 (FullSize[0x0298] - InheritedSize[0x0294])
class AFortPvPObjective : public AFortObjectiveBase
{
public:
	TEnumAsByte<FortniteGame_EFortTeam>                Team;                                                      // 0x0294(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G3DP[0x3];                                     // 0x0295(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPObjective");
		return ptr;
	}



};

// Class FortniteGame.FortPvPObjective_3PtDomination
// 0x0000 (FullSize[0x0298] - InheritedSize[0x0298])
class AFortPvPObjective_3PtDomination : public AFortPvPObjective
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPObjective_3PtDomination");
		return ptr;
	}



};

// Class FortniteGame.FortPvPObjective_CTF
// 0x0000 (FullSize[0x0298] - InheritedSize[0x0298])
class AFortPvPObjective_CTF : public AFortPvPObjective
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPObjective_CTF");
		return ptr;
	}



};

// Class FortniteGame.FortPvPObjective_EnemyBaseDestruction
// 0x0000 (FullSize[0x0298] - InheritedSize[0x0298])
class AFortPvPObjective_EnemyBaseDestruction : public AFortPvPObjective
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPObjective_EnemyBaseDestruction");
		return ptr;
	}



};

// Class FortniteGame.FortMissionTimerComponent
// 0x0048 (FullSize[0x00D4] - InheritedSize[0x008C])
class UFortMissionTimerComponent : public UActorComponent
{
public:
	TArray<struct FMissionTimeDisplayData>             DisplayData;                                               // 0x008C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FMissionTimerData                           TimerData;                                                 // 0x0098(0x0024) (Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FText                                       TimerLabelText;                                            // 0x00BC(0x0018) ELEMENT_SIZE_MISMATCH (Edit, Net, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bDisplayInTimeFormat;                                      // 0x00C8(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_ETimerOverrideSetting>    TimerVisibilityOverrideSetting;                            // 0x00C9(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3L44[0xA];                                     // 0x00CA(0x000A) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionTimerComponent");
		return ptr;
	}



	void UnpauseMissionTimer();
	void SetTimerVisibilityOverrideSetting(TEnumAsByte<FortniteGame_ETimerOverrideSetting> NewVisibilitySetting);
	void SetTimerLabelText(const struct FText& NewLabelText);
	void SetTimerDisplayFormat(bool bNewDisplayInTimeFormat);
	void SetMissionTimer(const struct FString& FunctionName, float TimerLength);
	void ResetMissionTimer();
	void PauseMissionTimer();
	void OnRep_TimerData();
	bool IsMissionTimerSet();
	bool IsMissionTimerPaused();
	float GetNormalizedTime();
	float GetMissionTimerTimeRemaining();
	void DummyTimer();
	void ClearMissionTimer();
};

// Class FortniteGame.FortMovementComp_Character
// 0x0000 (FullSize[0x0580] - InheritedSize[0x0580])
class UFortMovementComp_Character : public UCharacterMovementComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMovementComp_Character");
		return ptr;
	}



};

// Class FortniteGame.FortMusicManager
// 0x0024 (FullSize[0x0264] - InheritedSize[0x0240])
class AFortMusicManager : public AActor
{
public:
	class AFortPlayerController*                       ControllerOwner;                                           // 0x0240(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                             MusicChannels[0x3];                                        // 0x0244(0x000C) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6GNO[0x14];                                    // 0x0250(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMusicManager");
		return ptr;
	}



	void OnThresholdChange(TEnumAsByte<FortniteGame_EFortCombatThresholds> OldThreshold, TEnumAsByte<FortniteGame_EFortCombatThresholds> NewThreshold);
	void OnDayPhaseChanged(TEnumAsByte<FortniteGame_EFortDayPhase> CurrentDayPhase, TEnumAsByte<FortniteGame_EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	float GetEventHeatPercentTotal(TEnumAsByte<FortniteGame_EFortCombatEvents> CombatEvent);
	float GetEventHeatPercent(TEnumAsByte<FortniteGame_EFortCombatEvents> CombatEvent);
	void ChangeMusic(class USoundBase* NewMusic, TEnumAsByte<FortniteGame_EMusicFadeStyles> FadeStyle, float FadeTime, class USoundBase* Stinger);
};

// Class FortniteGame.FortNavArea
// 0x0004 (FullSize[0x0038] - InheritedSize[0x0034])
class UFortNavArea : public UNavArea
{
public:
	unsigned char                                      bObstacle : 1;                                             // 0x0034(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bSmashable : 1;                                            // 0x0034(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q8J9[0x3];                                     // 0x0035(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_StoneWall
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_StoneWall : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_StoneWall");
		return ptr;
	}



};

// Class FortniteGame.FortNavAgentCostData
// 0x0014 (FullSize[0x0030] - InheritedSize[0x001C])
class UFortNavAgentCostData : public UDataAsset
{
public:
	struct FName                                       NavAgentName;                                              // 0x001C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              NavAreaStrengthBuckets;                                    // 0x0024(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavAgentCostData");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_CheapObstacle
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_CheapObstacle : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_CheapObstacle");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_ClosedDoors
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_ClosedDoors : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_ClosedDoors");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_DefaultSmashable
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_DefaultSmashable : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_DefaultSmashable");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_TraceSmashable
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_TraceSmashable : public UFortNavArea_DefaultSmashable
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_TraceSmashable");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_DiagLink
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_DiagLink : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_DiagLink");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_HuskNull
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_HuskNull : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_HuskNull");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_Obstacle
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_Obstacle : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_Obstacle");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_PortalOrSmash
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_PortalOrSmash : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_PortalOrSmash");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_Unwalkable
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_Unwalkable : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_Unwalkable");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_WallCorner
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_WallCorner : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_WallCorner");
		return ptr;
	}



};

// Class FortniteGame.FortNavArea_WoodenWall
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UFortNavArea_WoodenWall : public UFortNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavArea_WoodenWall");
		return ptr;
	}



};

// Class FortniteGame.FortNavAreaAutomatic
// 0x001C (FullSize[0x0054] - InheritedSize[0x0038])
class UFortNavAreaAutomatic : public UFortNavArea
{
public:
	int                                                NumberOfAttacks;                                           // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                         PawnStatHandle;                                            // 0x003C(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TEnumAsByte<FortniteGame_EFortMovementStyle>       MovementStyle;                                             // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ODH4[0x3];                                     // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MeleeTimeModifier;                                         // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AutomaticNavCost;                                          // 0x0050(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavAreaAutomatic");
		return ptr;
	}



};

// Class FortniteGame.FortNavGraph
// 0x0444 (FullSize[0x0460] - InheritedSize[0x001C])
class UFortNavGraph : public UObject
{
public:
	class UBuildingStructuralSupportSystem*            BuildingSys;                                               // 0x001C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortStaticMeshLinkComponent*>        NavLinks;                                                  // 0x0020(0x000C) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W62P[0x434];                                   // 0x002C(0x0434) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavGraph");
		return ptr;
	}



};

// Class FortniteGame.FortNavGraphGoal
// 0x0008 (FullSize[0x0248] - InheritedSize[0x0240])
class AFortNavGraphGoal : public AActor
{
public:
	unsigned char                                      UnknownData_6C7O[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GraphRadius;                                               // 0x0244(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavGraphGoal");
		return ptr;
	}



};

// Class FortniteGame.FortNavigationFilter_NoSmashing
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UFortNavigationFilter_NoSmashing : public UNavigationQueryFilter
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavigationFilter_NoSmashing");
		return ptr;
	}



};

// Class FortniteGame.FortNavigationMetaFilter
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UFortNavigationMetaFilter : public UNavigationQueryFilter
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavigationMetaFilter");
		return ptr;
	}



};

// Class FortniteGame.FortNavigationFilter_Hunting
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UFortNavigationFilter_Hunting : public UFortNavigationMetaFilter
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavigationFilter_Hunting");
		return ptr;
	}



};

// Class FortniteGame.FortNavLinkContainer
// 0x0000 (FullSize[0x0240] - InheritedSize[0x0240])
class AFortNavLinkContainer : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavLinkContainer");
		return ptr;
	}



};

// Class FortniteGame.FortNavLinkDefinition
// 0x0024 (FullSize[0x005C] - InheritedSize[0x0038])
class UFortNavLinkDefinition : public UNavLinkDefinition
{
public:
	struct FFortNavLinkPattern                         Pattern;                                                   // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortNavLinkPattern>                 AdditionalPatterns;                                        // 0x0040(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<FortniteGame_EBuildingStairsRailing>> StairsRailing;                                             // 0x004C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EBuildingFloorRailing>    FloorRailing;                                              // 0x0058(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortNavLinkPattern>      PatternType;                                               // 0x0059(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5NMX[0x2];                                     // 0x005A(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavLinkDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortNavMesh
// 0x0004 (FullSize[0x0410] - InheritedSize[0x040C])
class AFortNavMesh : public ARecastNavMesh
{
public:
	int                                                NavDataVersion;                                            // 0x040C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavMesh");
		return ptr;
	}



};

// Class FortniteGame.FortNavObstacleComponent
// 0x0004 (FullSize[0x00B8] - InheritedSize[0x00B4])
class UFortNavObstacleComponent : public UNavRelevantComponent
{
public:
	class UClass*                                      ObstacleAreaClass;                                         // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavObstacleComponent");
		return ptr;
	}



};

// Class FortniteGame.FortNavSystem
// 0x0128 (FullSize[0x0430] - InheritedSize[0x0308])
class UFortNavSystem : public UNavigationSystem
{
public:
	TArray<class ABuildingSMActor*>                    BuildingActorsReady;                                       // 0x0308(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            DefaultSmashableArea;                                      // 0x0314(0x0018) (UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            JumpDownArea;                                              // 0x032C(0x0018) (UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            JumpDownSmashableArea;                                     // 0x0344(0x0018) (UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            JumpDownSmashableArea2;                                    // 0x035C(0x0018) (UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            JumpDownSmashableArea3;                                    // 0x0374(0x0018) (UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ARecastNavMesh*>                      NamedNavmeshes;                                            // 0x038C(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	unsigned char                                      bUseStaticMeshLinks : 1;                                   // 0x0398(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bUseStaticWorldLinksDown : 1;                              // 0x0398(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bUseStaticWorldLinksUp : 1;                                // 0x0398(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bUseJumpLinkActors : 1;                                    // 0x0398(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WF3M[0x3];                                     // 0x0399(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DirtyAreasUpdateFreqInactive;                              // 0x039C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R5D9[0x90];                                    // 0x03A0(0x0090) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNavSystem");
		return ptr;
	}



	void OnNavDataRegistered(class ANavigationData* NavData);
};

// Class FortniteGame.BuildingConnectivityEffect
// 0x0030 (FullSize[0x0270] - InheritedSize[0x0240])
class ABuildingConnectivityEffect : public AActor
{
public:
	struct FFortConnectionData                         ConnectionData;                                            // 0x0240(0x002C) (NativeAccessSpecifierPublic)
	bool                                               bDebugDraw;                                                // 0x026C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6N1I[0x3];                                     // 0x026D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingConnectivityEffect");
		return ptr;
	}



	void OnDisconnect();
	void OnConnect(const struct FTransform& T1, const struct FTransform& T2);
};

// Class FortniteGame.BuildingConnectivityManager
// 0x000C (FullSize[0x024C] - InheritedSize[0x0240])
class ABuildingConnectivityManager : public AActor
{
public:
	TArray<class ABuildingSMActor*>                    ConnectivityActors;                                        // 0x0240(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingConnectivityManager");
		return ptr;
	}



};

// Class FortniteGame.FortMetaNavArea
// 0x000C (FullSize[0x0040] - InheritedSize[0x0034])
class UFortMetaNavArea : public UNavAreaMeta
{
public:
	TArray<struct FNavAgentData>                       AgentData;                                                 // 0x0034(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMetaNavArea");
		return ptr;
	}



};

// Class FortniteGame.FortMetaNavArea_Wall
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UFortMetaNavArea_Wall : public UFortMetaNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMetaNavArea_Wall");
		return ptr;
	}



};

// Class FortniteGame.FortMetaNavArea_Obstacles
// 0x0004 (FullSize[0x0038] - InheritedSize[0x0034])
class UFortMetaNavArea_Obstacles : public UNavAreaMeta
{
public:
	int                                                HealthThreshold;                                           // 0x0034(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMetaNavArea_Obstacles");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeMetadata
// 0x00C0 (FullSize[0x00DC] - InheritedSize[0x001C])
class UBuildingEditModeMetadata : public UDataAsset
{
public:
	bool                                               bHasNavigableOpening;                                      // 0x001C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_24TK[0x3];                                     // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGuid                                       ShapeGuid;                                                 // 0x0020(0x0010) (Edit, ZeroConstructor, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8TC5[0x4];                                     // 0x0030(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FConnectivityCube                           ConnectivityCubeData;                                      // 0x0034(0x00A8) (Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeMetadata_BinaryToggle
// 0x000C (FullSize[0x00E8] - InheritedSize[0x00DC])
class UBuildingEditModeMetadata_BinaryToggle : public UBuildingEditModeMetadata
{
public:
	TArray<TEnumAsByte<FortniteGame_EBinaryToggleValues>> TileData;                                                  // 0x00DC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_BinaryToggle");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeMetadata_Floor
// 0x0000 (FullSize[0x00E8] - InheritedSize[0x00E8])
class UBuildingEditModeMetadata_Floor : public UBuildingEditModeMetadata_BinaryToggle
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_Floor");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeSupport
// 0x01A0 (FullSize[0x01BC] - InheritedSize[0x001C])
class UBuildingEditModeSupport : public UObject
{
public:
	class ABuildingSMActor*                            OwnerBuilding;                                             // 0x001C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerController*                       EditingController;                                         // 0x0020(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata*                   PreviewMetadata;                                           // 0x0024(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata*                   ScratchpadMetadata;                                        // 0x0028(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ExpectedMetadataClass;                                     // 0x002C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              PossibleEditClasses;                                       // 0x0030(0x000C) (ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TAssetPtr<class UStaticMesh>                       EditTileMesh;                                              // 0x003C(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>                EditTileMeshComponents;                                    // 0x0054(0x000C) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TAssetPtr<class UMaterialInterface>                TileMaterialParent;                                        // 0x0060(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UTexture2D>                        ActiveTileTexture;                                         // 0x0078(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UTexture2D>                        InactiveTileTexture;                                       // 0x0090(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        LastInteractedComp;                                        // 0x00A8(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        LastHighlightedComp;                                       // 0x00AC(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        PreviewComponent;                                          // 0x00B0(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UMaterialInterface>                PreviewMaterial;                                           // 0x00B4(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEditModeState                              PreviewEditModeState;                                      // 0x00CC(0x000C) (Transient, Protected, NativeAccessSpecifierProtected)
	TAssetPtr<class UCurveFloat>                       SuccessfulPatternMatchCurve;                               // 0x00D8(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                                   SuccessfulMatchInteractTimeline;                           // 0x00F0(0x0080) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCanMirrorMetadataToMatch : 1;                             // 0x0170(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCanRotateMetadataToMatch : 1;                             // 0x0170(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bEditActionInProgress : 1;                                 // 0x0170(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bInitializedTimelines : 1;                                 // 0x0170(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JISU[0x4B];                                    // 0x0171(0x004B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport");
		return ptr;
	}



	void OnSuccessfulMatchInteractParamUpdate(float NewInteractParamVal);
	void OnSuccessfulMatchInteractComplete();
};

// Class FortniteGame.BuildingEditModeSupport_BinaryToggle
// 0x0018 (FullSize[0x01D4] - InheritedSize[0x01BC])
class UBuildingEditModeSupport_BinaryToggle : public UBuildingEditModeSupport
{
public:
	class UBuildingEditModeMetadata_BinaryToggle*      BinaryTogglePreviewData;                                   // 0x01BC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EBinaryToggleValues>      CurToggleAction;                                           // 0x01C0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UHUN[0x3];                                     // 0x01C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                DefaultBlueTileColor;                                      // 0x01C4(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport_BinaryToggle");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeSupport_Floor
// 0x0000 (FullSize[0x01D4] - InheritedSize[0x01D4])
class UBuildingEditModeSupport_Floor : public UBuildingEditModeSupport_BinaryToggle
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport_Floor");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeSupport_Roof
// 0x001C (FullSize[0x01F0] - InheritedSize[0x01D4])
class UBuildingEditModeSupport_Roof : public UBuildingEditModeSupport_BinaryToggle
{
public:
	TArray<struct FTileCompInterpData>                 TileInterpData;                                            // 0x01D4(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JXJQ[0x10];                                    // 0x01E0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport_Roof");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeSupport_Wall
// 0x0000 (FullSize[0x01D4] - InheritedSize[0x01D4])
class UBuildingEditModeSupport_Wall : public UBuildingEditModeSupport_BinaryToggle
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport_Wall");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeSupport_Stair
// 0x0080 (FullSize[0x023C] - InheritedSize[0x01BC])
class UBuildingEditModeSupport_Stair : public UBuildingEditModeSupport
{
public:
	class UBuildingEditModeMetadata_Stair*             StairPreviewMetadata;                                      // 0x01BC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata_Stair*             LastValidMetadataConfiguration;                            // 0x01C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UStaticMesh>                       AuxiliaryIndicatorMesh;                                    // 0x01C4(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>                AuxiliaryIndicatorComponents;                              // 0x01DC(0x000C) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        ActivatedAuxIndicatorComponent;                            // 0x01E8(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UMaterialInterface>                AuxIndicatorComponentParentMaterial;                       // 0x01EC(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UTexture2D>                        AuxIndicatorArrowTexture;                                  // 0x0204(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UTexture2D>                        AuxIndicatorGridTexture;                                   // 0x021C(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AY2F[0x8];                                     // 0x0234(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport_Stair");
		return ptr;
	}



};

// Class FortniteGame.BuildingGroup
// 0x0034 (FullSize[0x0050] - InheritedSize[0x001C])
class UBuildingGroup : public UDataAsset
{
public:
	struct FName                                       GroupName;                                                 // 0x001C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuildingGroup*                              FallbackGroup;                                             // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EBuildingFoundationType>  FoundationType;                                            // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_52UJ[0x3];                                     // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       AllBuildingLevelTags;                                      // 0x002C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortMapData>                        BuildingLevelData;                                         // 0x0044(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingGroup");
		return ptr;
	}



};

// Class FortniteGame.BuildingStructuralSupportSystem
// 0x02B8 (FullSize[0x02D4] - InheritedSize[0x001C])
class UBuildingStructuralSupportSystem : public UObject
{
public:
	unsigned char                                      UnknownData_R1XL[0x2B8];                                   // 0x001C(0x02B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingStructuralSupportSystem");
		return ptr;
	}



	struct FBuildingValueRules MakeBuildingValueRules(int CellsAbove, int CellsBelow, int CellHorizontalRadius, float DistanceFromObjectiveWeight, float AttackWeight, float StructuralWeight, float TrapWeight);
	void K2_GetLogicalBuildingActors(int LogicalIdx, TArray<class ABuildingSMActor*>* LogicalBuildingActors);
	void GetLogicalBuildingGroundSupportedActors(int LogicalIndex, TArray<class ABuildingSMActor*>* LogicalBuildingGroundSupportedActors);
	class ABuildingSMActor* GetBestBuildingTarget(class AActor* ObjectiveActor, class AActor* AttackerActor, const struct FBuildingValueRules& ValueRules);
};

// Class FortniteGame.BuildingTextureData
// 0x0024 (FullSize[0x0040] - InheritedSize[0x001C])
class UBuildingTextureData : public UDataAsset
{
public:
	class UTexture2D*                                  Diffuse;                                                   // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Normal;                                                    // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Specular;                                                  // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          OverrideMaterial;                                          // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortTextureDataType>     Type;                                                      // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortResourceType>        ResourceType;                                              // 0x002D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N835[0x2];                                     // 0x002E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ResourceCost[0x4];                                         // 0x0030(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingTextureData");
		return ptr;
	}



};

// Class FortniteGame.BuildingTurretComponent
// 0x0034 (FullSize[0x00C0] - InheritedSize[0x008C])
class UBuildingTurretComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTurretTargetChanged;                                     // 0x008C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                                OnFireTagTrigger;                                          // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              FiringInterval;                                            // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentTargetValidationInterval;                           // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bPerformPeriodicValidationOnCurrentTarget : 1;             // 0x00A8(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O639[0x3];                                     // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         TargetingOverlapComponent;                                 // 0x00AC(0x0004) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*                     OwnerASC;                                                  // 0x00B0(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      CurrentTarget;                                             // 0x00B4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YILP[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingTurretComponent");
		return ptr;
	}



	void SetTargetingOverlapComponent(class UPrimitiveComponent* NewTargetingOverlapComponent);
	void OnTargetingEndOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnTargetingBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_CurrentTarget(class AActor* OldTarget);
	void OnPerformTargetValidation();
	void OnFiringTimer();
	bool IsValidTarget(class AActor* InTarget);
	class AActor* ChooseBestTarget(TArray<class AActor*>* InOutPotentialTargets);
	bool AttemptSetCurrentTarget(class AActor* NewTarget);
};

// Class FortniteGame.BuildingTurretComponent_MOBA
// 0x000C (FullSize[0x00CC] - InheritedSize[0x00C0])
class UBuildingTurretComponent_MOBA : public UBuildingTurretComponent
{
public:
	struct FMOBATurretPrioritySetting                  TargetingPriority;                                         // 0x00C0(0x000C) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingTurretComponent_MOBA");
		return ptr;
	}



	void OnAllyHarmed(class AActor* InAllyActor, class AActor* InHarmingActor);
};

// Class FortniteGame.CustomCharacterPartAnimInstance
// 0x0010 (FullSize[0x0320] - InheritedSize[0x0310])
class UCustomCharacterPartAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      bUsesDayPhaseChange : 1;                                   // 0x0310(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bRegisteredForDayPhaseChange : 1;                          // 0x0310(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HVLF[0x3];                                     // 0x0311(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortCustomPartType>      PartType;                                                  // 0x0314(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WOOD[0xB];                                     // 0x0315(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterPartAnimInstance");
		return ptr;
	}



	void PreDestruction();
	void OnDayPhaseChanged(TEnumAsByte<FortniteGame_EFortDayPhase> CurrentDayPhase, TEnumAsByte<FortniteGame_EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	class USkeletalMeshComponent* GetPartSkeletalMeshComponent();
	class USkeletalMeshComponent* GetOwnerSkeletalMeshComponent();
	TEnumAsByte<FortniteGame_EFortCustomPartType> GetCharacterPartType();
	class AFortPlayerPawn* GetAssociatedPlayerPawn();
};

// Class FortniteGame.CustomColorSwatch
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UCustomColorSwatch : public UDataAsset
{
public:
	TEnumAsByte<FortniteGame_EFortCustomGender>        GenderPermitted;                                           // 0x001C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EColorSwatchType>         ColorSwatchType;                                           // 0x001D(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SJ2U[0x2];                                     // 0x001E(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomColorSwatch");
		return ptr;
	}



};

// Class FortniteGame.FortSocialItem
// 0x0048 (FullSize[0x0064] - InheritedSize[0x001C])
class UFortSocialItem : public UObject
{
public:
	TEnumAsByte<FortniteGame_EFortSocialItemType>      SocialItemType;                                            // 0x001C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JBYW[0x3];                                     // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       HeaderName;                                                // 0x0020(0x0018) ELEMENT_SIZE_MISMATCH (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPresenceUpdated;                                         // 0x002C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInviteJoinUpdated;                                       // 0x0038(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4NT0[0x20];                                    // 0x0044(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSocialItem");
		return ptr;
	}



	struct FUniqueNetIdRepl GetUniquePlayerId();
	TEnumAsByte<FortniteGame_EFortSocialItemPresenceStatus> GetPresenceStatus();
	struct FText GetLocation();
	struct FText GetDisplayName();
	struct FFortSocialItemBasicData GetBasicInfo();
};

// Class FortniteGame.FortSpawnPointsPercentageCurveSequence
// 0x0010 (FullSize[0x002C] - InheritedSize[0x001C])
class UFortSpawnPointsPercentageCurveSequence : public UDataAsset
{
public:
	TArray<struct FDataTableRowHandle>                 SpawnPointsPercentageCurves;                               // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortIntensityCurveSequenceType> SequenceType;                                              // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YXE6[0x3];                                     // 0x0029(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSpawnPointsPercentageCurveSequence");
		return ptr;
	}



};

// Class FortniteGame.StatManager
// 0x0058 (FullSize[0x0074] - InheritedSize[0x001C])
class UStatManager : public UObject
{
public:
	TArray<class UStat*>                               Stats;                                                     // 0x001C(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	struct FString                                     StatPrefix;                                                // 0x0028(0x000C) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                       FPC;                                                       // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NSIT[0x3C];                                    // 0x0038(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.StatManager");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeMetadata_Roof
// 0x000C (FullSize[0x00F4] - InheritedSize[0x00E8])
class UBuildingEditModeMetadata_Roof : public UBuildingEditModeMetadata_BinaryToggle
{
public:
	TArray<struct FAuxiliaryEditTileMeshData>          AuxEditTileMeshData;                                       // 0x00E8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_Roof");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeMetadata_Wall
// 0x0000 (FullSize[0x00E8] - InheritedSize[0x00E8])
class UBuildingEditModeMetadata_Wall : public UBuildingEditModeMetadata_BinaryToggle
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_Wall");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeMetadata_Pillar
// 0x0000 (FullSize[0x00DC] - InheritedSize[0x00DC])
class UBuildingEditModeMetadata_Pillar : public UBuildingEditModeMetadata
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_Pillar");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeMetadata_Stair
// 0x000C (FullSize[0x00E8] - InheritedSize[0x00DC])
class UBuildingEditModeMetadata_Stair : public UBuildingEditModeMetadata
{
public:
	TArray<int>                                        TileData;                                                  // 0x00DC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_Stair");
		return ptr;
	}



};

// Class FortniteGame.BuildingEditModeMetadataContainer
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UBuildingEditModeMetadataContainer : public UDataAsset
{
public:
	TArray<class UBuildingEditModeMetadata*>           MetadataCollection;                                        // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadataContainer");
		return ptr;
	}



};

// Class FortniteGame.CustomDynamicColorSwatch
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UCustomDynamicColorSwatch : public UCustomColorSwatch
{
public:
	TArray<struct FColorSwatchPair>                    ColorPairs;                                                // 0x0020(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomDynamicColorSwatch");
		return ptr;
	}



};

// Class FortniteGame.CustomCharacterPartData
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UCustomCharacterPartData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterPartData");
		return ptr;
	}



};

// Class FortniteGame.CustomAccessoryColorSwatch
// 0x0030 (FullSize[0x005C] - InheritedSize[0x002C])
class UCustomAccessoryColorSwatch : public UCustomDynamicColorSwatch
{
public:
	struct FLinearColor                                AccessoryColors[0x3];                                      // 0x002C(0x0030) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomAccessoryColorSwatch");
		return ptr;
	}



};

// Class FortniteGame.CustomCharacterAccessoryData
// 0x0018 (FullSize[0x0034] - InheritedSize[0x001C])
class UCustomCharacterAccessoryData : public UCustomCharacterPartData
{
public:
	struct FName                                       AttachSocketName;                                          // 0x001C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicsAsset*                               PhysicsAsset;                                              // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimBlueprintGeneratedClass*                AnimClass;                                                 // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomAccessoryColorSwatch*                 AccessoryColors;                                           // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_89TL[0x4];                                     // 0x0030(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterAccessoryData");
		return ptr;
	}



};

// Class FortniteGame.CustomCharacterBackpackData
// 0x0008 (FullSize[0x003C] - InheritedSize[0x0034])
class UCustomCharacterBackpackData : public UCustomCharacterAccessoryData
{
public:
	struct FName                                       LootSocketName;                                            // 0x0034(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterBackpackData");
		return ptr;
	}



};

// Class FortniteGame.CustomCharacterCharmData
// 0x0004 (FullSize[0x0038] - InheritedSize[0x0034])
class UCustomCharacterCharmData : public UCustomCharacterAccessoryData
{
public:
	TEnumAsByte<FortniteGame_EFortCustomPartType>      PartAttachedToOverride;                                    // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6CQ5[0x3];                                     // 0x0035(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterCharmData");
		return ptr;
	}



};

// Class FortniteGame.CustomCharacterFaceData
// 0x0004 (FullSize[0x0038] - InheritedSize[0x0034])
class UCustomCharacterFaceData : public UCustomCharacterAccessoryData
{
public:
	TEnumAsByte<FortniteGame_EFortCustomPartType>      PartAttachedToOverride;                                    // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HKUL[0x3];                                     // 0x0035(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterFaceData");
		return ptr;
	}



};

// Class FortniteGame.CustomCharacterHatData
// 0x0004 (FullSize[0x0038] - InheritedSize[0x0034])
class UCustomCharacterHatData : public UCustomCharacterAccessoryData
{
public:
	TEnumAsByte<FortniteGame_ECustomHatType>           HatType;                                                   // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HN1T[0x3];                                     // 0x0035(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterHatData");
		return ptr;
	}



};

// Class FortniteGame.CustomCharacterBodyPartData
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UCustomCharacterBodyPartData : public UCustomCharacterPartData
{
public:
	class UAnimBlueprintGeneratedClass*                AnimClass;                                                 // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomAccessoryColorSwatch*                 AccessoryColors;                                           // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterBodyPartData");
		return ptr;
	}



};

// Class FortniteGame.CustomCharacterHeadData
// 0x0038 (FullSize[0x005C] - InheritedSize[0x0024])
class UCustomCharacterHeadData : public UCustomCharacterBodyPartData
{
public:
	class UCustomSkinColorSwatch*                      SkinColorSwatch;                                           // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomHairColorSwatch*                      HairColorSwatch;                                           // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               CapMorphTargets;                                           // 0x002C(0x000C) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FName>                               HelmetMorphTargets;                                        // 0x0038(0x000C) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FName>                               MaskMorphTargets;                                          // 0x0044(0x000C) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FName>                               HatMorphTargets;                                           // 0x0050(0x000C) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomCharacterHeadData");
		return ptr;
	}



};

// Class FortniteGame.CustomColorComponent
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UCustomColorComponent : public UObject
{
public:
	unsigned char                                      UnknownData_0TPR[0x8];                                     // 0x001C(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomColorComponent");
		return ptr;
	}



};

// Class FortniteGame.FortClientEventData
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortClientEventData : public UDataAsset
{
public:
	TArray<struct FFortClientEventName>                ClientEventNames;                                          // 0x001C(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortClientEventData");
		return ptr;
	}



};

// Class FortniteGame.FortClientEventInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortClientEventInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortClientEventInterface");
		return ptr;
	}



	void BlueprintCustomHandleClientEvent(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
};

// Class FortniteGame.FortClientNotification
// 0x01DC (FullSize[0x041C] - InheritedSize[0x0240])
class AFortClientNotification : public AActor
{
public:
	unsigned char                                      UnknownData_D7ZQ[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortClientNotificationData                 NotificationData;                                          // 0x0244(0x0114) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AFortPlayerController*                       PlayerController;                                          // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_US39[0x8];                                     // 0x035C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 StartingDisplayBrush;                                      // 0x0364(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       StartingText;                                              // 0x03D8(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       NotificationTitle;                                         // 0x03E4(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              DefaultDisplayTime;                                        // 0x03F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       CurrentDisplayText;                                        // 0x03F4(0x0018) ELEMENT_SIZE_MISMATCH (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T6R8[0x4];                                     // 0x0400(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGuid                                       NotificationID;                                            // 0x0404(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q1PQ[0x8];                                     // 0x0414(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortClientNotification");
		return ptr;
	}



	void SetupDelayedStop(float KillTime);
	void SetDisplayText(const struct FText& DisplayText, bool bForce);
	void PlayFeedbackLine(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class USoundBase* Audio, float OverrideDelay);
	void OnNotificationStart();
	void NotificationIsFinished();
};

// Class FortniteGame.FortMissionCompleteNotification
// 0x0000 (FullSize[0x041C] - InheritedSize[0x041C])
class AFortMissionCompleteNotification : public AFortClientNotification
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionCompleteNotification");
		return ptr;
	}



};

// Class FortniteGame.FortMissionRewardNotification
// 0x0000 (FullSize[0x041C] - InheritedSize[0x041C])
class AFortMissionRewardNotification : public AFortClientNotification
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionRewardNotification");
		return ptr;
	}



};

// Class FortniteGame.FortTutorialNotification
// 0x01C0 (FullSize[0x05DC] - InheritedSize[0x041C])
class AFortTutorialNotification : public AFortClientNotification
{
public:
	struct FFortTutorialNotificationData               TutorialData;                                              // 0x041C(0x0144) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       StartingNameText;                                          // 0x0560(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       StartingSystemText;                                        // 0x056C(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                               bStartingButtonEnabled;                                    // 0x0578(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bStartingLightboxEnabled;                                  // 0x0579(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bStartingLightboxDisableInputOnly;                         // 0x057A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6LQP[0x1];                                     // 0x057B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMargin                                     StartingPadding;                                           // 0x057C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<SlateCore_EVerticalAlignment>          StartingVAlign;                                            // 0x058C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<SlateCore_EHorizontalAlignment>        StartingHAlign;                                            // 0x058D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_363M[0x2];                                     // 0x058E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AutoContinueDelay;                                         // 0x0590(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_917U[0x48];                                    // 0x0594(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTutorialNotification");
		return ptr;
	}



	void ShowTutorialScreen(class UTexture2D* TutorialImage);
	void SetVAlign(TEnumAsByte<SlateCore_EVerticalAlignment> VAlign, bool bForce);
	void SetSystemText(const struct FText& SystemText, bool bForce);
	void SetPadding(const struct FMargin& Padding, bool bForce);
	void SetNameText(const struct FText& NameText, bool bForce);
	void SetLightboxEnabled(bool bLightboxEnabled, bool bForce);
	void SetLightboxDisableInputOnly(bool bLightboxDisableInputOnly, bool bForce);
	void SetHAlign(TEnumAsByte<SlateCore_EHorizontalAlignment> HAlign, bool bForce);
	void SetButtonEnabled(bool bButtonEnabled, bool bForce);
	void OnNotificationContinue(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, const struct FName& EventName);
	void HideTutorialScreen();
};

// Class FortniteGame.FortUIBypassNotification
// 0x0000 (FullSize[0x041C] - InheritedSize[0x041C])
class AFortUIBypassNotification : public AFortClientNotification
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortUIBypassNotification");
		return ptr;
	}



};

// Class FortniteGame.FortCinematicNotification
// 0x0000 (FullSize[0x041C] - InheritedSize[0x041C])
class AFortCinematicNotification : public AFortUIBypassNotification
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCinematicNotification");
		return ptr;
	}



	void OnPlayerSkippedCutscene();
};

// Class FortniteGame.FortDialogNotification
// 0x0000 (FullSize[0x041C] - InheritedSize[0x041C])
class AFortDialogNotification : public AFortUIBypassNotification
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDialogNotification");
		return ptr;
	}



	void OpenTalkingHead(class UTexture2D* Image, const struct FText& Title);
	void OnDialogInterrupted();
	void CloseTalkingHead();
};

// Class FortniteGame.FortClientOnlyActor
// 0x0000 (FullSize[0x0240] - InheritedSize[0x0240])
class AFortClientOnlyActor : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortClientOnlyActor");
		return ptr;
	}



};

// Class FortniteGame.CustomClothingColorSwatch
// 0x0020 (FullSize[0x0040] - InheritedSize[0x0020])
class UCustomClothingColorSwatch : public UCustomColorSwatch
{
public:
	struct FLinearColor                                AccessoryColors[0x2];                                      // 0x0020(0x0020) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomClothingColorSwatch");
		return ptr;
	}



};

// Class FortniteGame.CustomHairColorSwatch
// 0x0000 (FullSize[0x002C] - InheritedSize[0x002C])
class UCustomHairColorSwatch : public UCustomDynamicColorSwatch
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomHairColorSwatch");
		return ptr;
	}



};

// Class FortniteGame.CustomSkinColorSwatch
// 0x0000 (FullSize[0x002C] - InheritedSize[0x002C])
class UCustomSkinColorSwatch : public UCustomDynamicColorSwatch
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomSkinColorSwatch");
		return ptr;
	}



};

// Class FortniteGame.CustomPlayerComponent
// 0x0018 (FullSize[0x0034] - InheritedSize[0x001C])
class UCustomPlayerComponent : public UObject
{
public:
	unsigned char                                      UnknownData_R281[0x18];                                    // 0x001C(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.CustomPlayerComponent");
		return ptr;
	}



};

// Class FortniteGame.FortAbilitySystemComponent
// 0x00A0 (FullSize[0x0AA8] - InheritedSize[0x0A08])
class UFortAbilitySystemComponent : public UAbilitySystemComponent
{
public:
	unsigned char                                      UnknownData_SXNH[0xA0];                                    // 0x0A08(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemComponent");
		return ptr;
	}



	void NetMulticast_RefreshActiveGameplayEffectCueEvents();
	bool HasActiveAbilityWithAnyMatchingTag(const struct FGameplayTagContainer& Tags);
	float GetAttributeMagnitude(const struct FAttributeInfo& Info);
	struct FAttributeInfo FindAttributeInformation(const struct FString& AttributeName);
};

// Class FortniteGame.FortAbilitySystemGlobals
// 0x0000 (FullSize[0x0108] - InheritedSize[0x0108])
class UFortAbilitySystemGlobals : public UAbilitySystemGlobals
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemGlobals");
		return ptr;
	}



};

// Class FortniteGame.FortQueryData_CurvesAroundLine
// 0x0048 (FullSize[0x0064] - InheritedSize[0x001C])
class UFortQueryData_CurvesAroundLine : public UDataAsset
{
public:
	struct FFortPointsOnCurve                          PointsLeftOfLine;                                          // 0x001C(0x0024) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FFortPointsOnCurve                          PointsRightOfLine;                                         // 0x0040(0x0024) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryData_CurvesAroundLine");
		return ptr;
	}



};

// Class FortniteGame.FortQueryGenerator_AssignmentGoal
// 0x0000 (FullSize[0x0034] - InheritedSize[0x0034])
class UFortQueryGenerator_AssignmentGoal : public UEnvQueryGenerator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_AssignmentGoal");
		return ptr;
	}



};

// Class FortniteGame.FortItemPropertyLookupTable
// 0x05A4 (FullSize[0x05C0] - InheritedSize[0x001C])
class UFortItemPropertyLookupTable : public UDataAsset
{
public:
	struct FFortItemPropertyValue                      ItemPropertyValueTemplates[0x13];                          // 0x001C(0x05A4) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortItemPropertyLookupTable");
		return ptr;
	}



};

// Class FortniteGame.FortAbilitySystemUI
// 0x003C (FullSize[0x0058] - InheritedSize[0x001C])
class UFortAbilitySystemUI : public UObject
{
public:
	unsigned char                                      UnknownData_2B7U[0x3C];                                    // 0x001C(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemUI");
		return ptr;
	}



};

// Class FortniteGame.FortPathFollowingComponent
// 0x00AC (FullSize[0x02C4] - InheritedSize[0x0218])
class UFortPathFollowingComponent : public UCrowdFollowingComponent
{
public:
	class AFortAIController*                           MyAI;                                                      // 0x0218(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7N1G[0x10];                                    // 0x021C(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MovementBlockBumpFrustration;                              // 0x022C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MovementBlockFrustrationCooldownSpeed;                     // 0x0230(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MovementBlockFrustrationThreshold;                         // 0x0234(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WXOK[0x8C];                                    // 0x0238(0x008C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPathFollowingComponent");
		return ptr;
	}



};

// Class FortniteGame.FortAbilityTask_CommitAccountCosts
// 0x0034 (FullSize[0x0084] - InheritedSize[0x0050])
class UFortAbilityTask_CommitAccountCosts : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnCommitted;                                               // 0x0050(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailed;                                                  // 0x005C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bWasCancellable;                                           // 0x0068(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bRequestPending;                                           // 0x0069(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bCommittedLocally;                                         // 0x006A(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_65LT[0x1];                                     // 0x006B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PlayerName;                                                // 0x006C(0x000C) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AbilityName;                                               // 0x0078(0x000C) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_CommitAccountCosts");
		return ptr;
	}



	class UFortAbilityTask_CommitAccountCosts* STATIC_CommitAccountCosts(class UObject* WorldContextObject);
};

// Class FortniteGame.FortAbilityTask_DirectedMovement
// 0x0060 (FullSize[0x00B0] - InheritedSize[0x0050])
class UFortAbilityTask_DirectedMovement : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnMovementComplete;                                        // 0x0050(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMovementCancelled;                                       // 0x005C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TK2D[0x1C];                                    // 0x0068(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     TargetLocation;                                            // 0x0084(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class USceneComponent*                             TargetComponent;                                           // 0x0090(0x0004) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementDistance;                                          // 0x0094(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IdealArrivalDistance;                                      // 0x0098(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DurationOfMovement;                                        // 0x009C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bModifyZ;                                                  // 0x00A0(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bCancelOnFalling;                                          // 0x00A1(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ALKM[0x2];                                     // 0x00A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterMovementComponent*                 MovementComponent;                                         // 0x00A4(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZG8U[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_DirectedMovement");
		return ptr;
	}



	class UFortAbilityTask_DirectedMovement* STATIC_DirectedMovementToLocation(class UObject* WorldContextObject, const struct FVector& MovementTargetLocation, TEnumAsByte<FortniteGame_EFortDirectedMovementSpace> MovementSpaceType, float MovementDuration, float CloseEnoughDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* STATIC_DirectedMovementToComponent(class UObject* WorldContextObject, class USceneComponent* TargetComponent, float MaxMovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* STATIC_DirectedMovementToActor(class UObject* WorldContextObject, class AActor* TargetActor, float MaxMovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* STATIC_DirectedMovement(class UObject* WorldContextObject, const struct FVector& MovementDirection, TEnumAsByte<FortniteGame_EFortDirectedMovementSpace> MovementSpaceType, float MovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
};

// Class FortniteGame.FortAbilityTask_MoveAI
// 0x0040 (FullSize[0x0090] - InheritedSize[0x0050])
class UFortAbilityTask_MoveAI : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnComplete;                                                // 0x0050(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInterrupted;                                             // 0x005C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCancelled;                                               // 0x0068(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CHSV[0x1C];                                    // 0x0074(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_MoveAI");
		return ptr;
	}



	class UFortAbilityTask_MoveAI* STATIC_CreateMoveAITask(class UObject* WorldContextObject, const struct FName& TaskInstanceName, class AActor* MoveActor, const struct FVector& MoveLocation, TEnumAsByte<AIModule_EPawnActionMoveMode> MoveMode, TEnumAsByte<FortniteGame_EPathObstacleAction> PathObstacleAction, bool bStopAtEnd, bool bFinishOnPlayerCollision, float AcceptableRadius, class UClass* PushBumpedPawnClass);
};

// Class FortniteGame.FortGameplayAbility
// 0x03D0 (FullSize[0x06DC] - InheritedSize[0x030C])
class UFortGameplayAbility : public UGameplayAbility
{
public:
	unsigned char                                      UnknownData_U18G[0x8];                                     // 0x030C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortGameplayAbilityActivation> ActivationType;                                            // 0x0314(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_896Z[0x3];                                     // 0x0315(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortGameplayEffectContainer                EffectContainers[0x5];                                     // 0x0318(0x021C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayEffectContainer>        GameplayEffectContainers;                                  // 0x0534(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	class UClass*                                      ProjectileClass;                                           // 0x0540(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         DamageStatHandle;                                          // 0x0544(0x000C) (Edit, NativeAccessSpecifierPublic)
	TArray<struct FFortAbilityCost>                    AbilityCosts;                                              // 0x0550(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      bShowWidgetForCosts : 1;                                   // 0x055C(0x0001) BIT_FIELD (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N4WE[0x3];                                     // 0x055D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bStartWithCooldown;                                        // 0x0560(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bPersistOnDeath;                                           // 0x0561(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_09VX[0x2];                                     // 0x0562(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       ProhibitedTargetTags;                                      // 0x0564(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bStopsAIBehaviorLogic;                                     // 0x057C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bStopsAIMovement;                                          // 0x057D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bRelevantForAIDespawning;                                  // 0x057E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseAIFireLocationAndRotation;                             // 0x057F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     FireOffset;                                                // 0x0580(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bVerifyFireOffsetIsNotObstructedByWorldGeometry;           // 0x058C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bCanHitBallisticTestsOnlyTestIndesructiblesWhileFalling;   // 0x058D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1MAT[0x2];                                     // 0x058E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ActivationNoiseRange;                                      // 0x0590(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ImpactNoiseRange;                                          // 0x0594(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActivationNoiseLoudness;                                   // 0x0598(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ImpactNoiseLoudness;                                       // 0x059C(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLeadPawnTargets;                                          // 0x05A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7KPH[0x3];                                     // 0x05A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DesiredThrowAngle;                                         // 0x05A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxYawAngleToFire;                                         // 0x05A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClampMaxYawAngleToFire;                                   // 0x05AC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseTargetActorLocation;                                   // 0x05AD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_65O7[0x2];                                     // 0x05AE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InitialAccuracyMax;                                        // 0x05B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialAccuracyMin;                                        // 0x05B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetAccuracyMax;                                         // 0x05B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetAccuracyMin;                                         // 0x05BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinAccuracyDistance;                                       // 0x05C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAccuracyDistance;                                       // 0x05C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AccuracyDistanceMultiplier;                                // 0x05C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumUsesToReachTargetAccuracy;                              // 0x05CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                UseCount;                                                  // 0x05D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayAbilityBehaviorDistanceData> GameplayAbilityBehaviorDistanceData;                       // 0x05D4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JVRH[0x14];                                    // 0x05E0(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortGameplayAbilityMontageInfo             MontageInfo;                                               // 0x05F4(0x0044) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FText                                       DisplayName;                                               // 0x0638(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0644(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J8EM[0x4];                                     // 0x0650(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 IconOverride;                                              // 0x0654(0x0074) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3BH8[0x10];                                    // 0x06C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      Tooltip;                                                   // 0x06D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility");
		return ptr;
	}



	bool SetupIconOverride();
	void SetAIFocalPoint(class AActor* FocusTarget, const struct FVector& FocalPoint);
	void RemoveAbilityWeapon();
	void OnAbilityInputReleased();
	struct FFortGameplayEffectContainerSpec MakeGameplayEffectContainerSpec(const struct FGameplayTag& ApplicationTag, int GameplayEffectLevel);
	void K2_TriggerFromAnimation(const struct FGameplayTag& ApplicationTag);
	bool K2_ShouldUseDecoTool(const struct FGameplayAbilityActorInfo& ActorInfo);
	void K2_AbilityCompleted();
	bool IsTargetOutsideOfMaxYawRotation();
	class UClass* GetTooltip();
	struct FFortAbilityTargetSelectionList GetTargetSelectionList(const struct FGameplayTag& ApplicationTag);
	void GetProjectileInitialValues(float* outProjectileSpeed, struct FRotator* outSpawnDirection, float* outProjectileGravity, class AActor** HomingTarget, bool bApplyInaccuracy, bool bApplyClampedMaxYawAngleToFire, bool bApplyLeading);
	struct FFortGameplayEffectContainer GetGameplayEffectContainer(const struct FGameplayTag& ApplicationTag);
	struct FRotator GetFireRotation(bool bApplyLeading, bool bApplyInaccuracy, bool bApplyClampedMaxYawAngleToFire);
	struct FVector GetFireLocation();
	struct FTransform GetCustomAbilitySourceTransform();
	class AFortWeapon* GetCurrentSourceWeapon();
	class UFortWorldItemDefinition* GetCurrentSourceItemDefinition();
	void GetCurrentAbilitySource(TEnumAsByte<FortniteGame_EFortAbilitySourceType>* OutSourceType, int* OutSourceLevel);
	struct FVector GetAimLocationNearestPawn(class AFortPawn* Instigator);
	class AActor* GetAIAbilityTarget();
	class AFortPawn* GetActivatingPawn();
	class UFortAbilitySystemComponent* GetActivatingAbilityComponent();
	void EquipAbilityWeapon(class UFortWeaponItemDefinition* WeaponDefinition, int ItemLevel);
	bool DoesTargetHaveTags(class AActor* Target, const struct FGameplayTagContainer& Tags);
	bool DoesTargetHaveProhibitedTagsForAI(class AActor* Target);
	void ClearAIFocalPoint();
	TArray<struct FActiveGameplayEffectHandle> ApplyGameplayEffectContainer(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag, int GameplayEffectLevel);
	struct FVector ApplyAccuracyToTargetLocation(const struct FVector& SourceLocation, const struct FVector& TargetLocation, float inDesiredThrowAngle);
};

// Class FortniteGame.FortAbilityTask_WaitTargetSelection
// 0x0034 (FullSize[0x0084] - InheritedSize[0x0050])
class UFortAbilityTask_WaitTargetSelection : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    Targeted;                                                  // 0x0050(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Cancelled;                                                 // 0x005C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TEnumAsByte<GameplayAbilities_EGameplayTargetingConfirmation> ConfirmationType;                                          // 0x0068(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForceTargetingOnServer;                                   // 0x0069(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M1KC[0x2];                                     // 0x006A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                InstantTargetTag;                                          // 0x006C(0x0008) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U9P1[0x10];                                    // 0x0074(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_WaitTargetSelection");
		return ptr;
	}



	class UFortAbilityTask_WaitTargetSelection* STATIC_WaitTargetSelection(class UObject* WorldContextObject, const struct FName& TaskInstanceName, const struct FGameplayTag& InApplicationTag, bool bForceTargetingOnServer);
	void OnTargetDataReadyCallback(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnTargetDataCancelledCallback();
};

// Class FortniteGame.FortAbilityTask_PlayMontageWaitTarget
// 0x0078 (FullSize[0x00C8] - InheritedSize[0x0050])
class UFortAbilityTask_PlayMontageWaitTarget : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    Triggered;                                                 // 0x0050(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Cancelled;                                                 // 0x005C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Completed;                                                 // 0x0068(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFortGameplayAbilityMontageInfo             MontageInfo;                                               // 0x0074(0x0044) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AQFN[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_PlayMontageWaitTarget");
		return ptr;
	}



	class UFortAbilityTask_PlayMontageWaitTarget* STATIC_PlayMontageWithCharPartsWait(class UObject* WorldContextObject, const struct FName& TaskInstanceName, class UAnimMontage* MontageToPlay, TArray<struct FFortCharacterPartMontageInfo> CharacterPartMontages, float AnimPlayRate, TEnumAsByte<FortniteGame_EFortGameplayAbilityMontageSectionToPlay> SectionToPlay, const struct FName& OverrideSection, float AnimRootMotionTranslationScale);
	class UFortAbilityTask_PlayMontageWaitTarget* STATIC_PlayMontageWaitTarget(class UObject* WorldContextObject, const struct FName& TaskInstanceName, class UAnimMontage* MontageToPlay, float AnimPlayRate, TEnumAsByte<FortniteGame_EFortGameplayAbilityMontageSectionToPlay> SectionToPlay, const struct FName& OverrideSection, float AnimRootMotionTranslationScale);
	class UFortAbilityTask_PlayMontageWaitTarget* STATIC_PlayMontageInfoAndWaitForTrigger(class UObject* WorldContextObject, const struct FName& TaskInstanceName, const struct FFortGameplayAbilityMontageInfo& MontageInfo);
	void OnTargetDataReadyCallback(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnTargetDataCancelledCallback();
};

// Class FortniteGame.FortAbilityTask_SetNextMontageSectionAndWait
// 0x0024 (FullSize[0x0074] - InheritedSize[0x0050])
class UFortAbilityTask_SetNextMontageSectionAndWait : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnComplete;                                                // 0x0050(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInterrupted;                                             // 0x005C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4D9Q[0xC];                                     // 0x0068(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_SetNextMontageSectionAndWait");
		return ptr;
	}



	class UFortAbilityTask_SetNextMontageSectionAndWait* STATIC_SetNextMontageSectionAndWait(class UObject* WorldContextObject, class UAnimMontage* PlayingMontage, const struct FName& NextMontageSection);
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
};

// Class FortniteGame.FortAbilityTask_SpawnProjectileAndWait
// 0x014C (FullSize[0x019C] - InheritedSize[0x0050])
class UFortAbilityTask_SpawnProjectileAndWait : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    Created;                                                   // 0x0050(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Touched;                                                   // 0x005C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Bounced;                                                   // 0x0068(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Stopped;                                                   // 0x0074(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Exploded;                                                  // 0x0080(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Destroyed;                                                 // 0x008C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortProjectileBase>          SpawnedProj;                                               // 0x0098(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class AActor*                                      RequestedBy;                                               // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SpawnLocation;                                             // 0x00A4(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    SpawnRotation;                                             // 0x00B0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    SpawnDirection;                                            // 0x00BC(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              InitialSpeed;                                              // 0x00C8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortGameplayEffectContainerSpec            EffectContainerSpecToApplyOnHit;                           // 0x00CC(0x0064) (NativeAccessSpecifierPublic)
	struct FFortGameplayEffectContainerSpec            EffectContainerSpecToApplyOnExplode;                       // 0x0130(0x0064) (NativeAccessSpecifierPublic)
	float                                              GravityScale;                                              // 0x0194(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      HomingTarget;                                              // 0x0198(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_SpawnProjectileAndWait");
		return ptr;
	}



	class UFortAbilityTask_SpawnProjectileAndWait* STATIC_SpawnProjectileAndWait(class UObject* WorldContextObject, class UClass* Class, class AActor* RequestedBy, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FRotator& SpawnDirection, float InitialSpeed, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode, float GravityScale, class AActor* HomingTarget);
	void OnProjectileDestroyed();
	void FinishSpawningActor(class UObject* WorldContextObject, class AFortProjectileBase* SpawnedActor);
	bool BeginSpawningActor(class UObject* WorldContextObject, class UClass* Class, class AFortProjectileBase** SpawnedActor);
};

// Class FortniteGame.FortAbilityTask_Sprint
// 0x000C (FullSize[0x005C] - InheritedSize[0x0050])
class UFortAbilityTask_Sprint : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnTargetLocationReached;                                   // 0x0050(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_Sprint");
		return ptr;
	}



};

// Class FortniteGame.FortActorIndicatorInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortActorIndicatorInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortActorIndicatorInterface");
		return ptr;
	}



};

// Class FortniteGame.FortAIAssignmentSettings
// 0x0048 (FullSize[0x0064] - InheritedSize[0x001C])
class UFortAIAssignmentSettings : public UDataAsset
{
public:
	TArray<struct FGoalSelectionQueryInfo>             GoalSelectionQueryInfos;                                   // 0x001C(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                               bAllowsUndermining;                                        // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bGoalLocationsAlwaysKnown;                                 // 0x0029(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bIsEnemyAssignment;                                        // 0x002A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XVNI[0x1];                                     // 0x002B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       RequiredTags;                                              // 0x002C(0x0018) (Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       ProhibitedTags;                                            // 0x0044(0x0018) (Edit, NativeAccessSpecifierPrivate)
	float                                              MaxAIAllowedForAssignment;                                 // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxAIAllowedPerGoal;                                       // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIAssignmentSettings");
		return ptr;
	}



};

// Class FortniteGame.FortAIPawnVariant
// 0x0034 (FullSize[0x0050] - InheritedSize[0x001C])
class UFortAIPawnVariant : public UObject
{
public:
	TArray<class UClass*>                              PawnClasses;                                               // 0x001C(0x000C) (ZeroConstructor, Deprecated, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FFortAIPawnVariantDefinition>        PawnVariantDefinitions;                                    // 0x0028(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                MinPlayersToSpawnVariant;                                  // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         SpawnPointValueHandle;                                     // 0x0038(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int                                                CachedSpawnPointValue;                                     // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              EncounterExpectedLifespan;                                 // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                VersionNum;                                                // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIPawnVariant");
		return ptr;
	}



};

// Class FortniteGame.FortAIPerceptionComponent
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UFortAIPerceptionComponent : public UAIPerceptionComponent
{
public:
	float                                              LosingSightRadiusBump;                                     // 0x0138(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QL8P[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIPerceptionComponent");
		return ptr;
	}



};

// Class FortniteGame.FortAIPerceptionSystem
// 0x0000 (FullSize[0x00DC] - InheritedSize[0x00DC])
class UFortAIPerceptionSystem : public UAIPerceptionSystem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIPerceptionSystem");
		return ptr;
	}



};

// Class FortniteGame.FortAISpawnGroup
// 0x0084 (FullSize[0x00A0] - InheritedSize[0x001C])
class UFortAISpawnGroup : public UDataAsset
{
public:
	float                                              EnemyUtilities[0x10];                                      // 0x001C(0x0040) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpawnGroupEnemy>                    EnemiesToSpawn;                                            // 0x005C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsPrototype;                                              // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsValidForEnemySpawners;                                  // 0x0069(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsLargeSpawnGroup;                                        // 0x006A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9IJY[0x1];                                     // 0x006B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxDiscountRatio;                                          // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        MaxGroupCategoryPopulationDensityCurve;                    // 0x0070(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortSpawnGroupEncounterTypeData>    EncounterTypeData;                                         // 0x007C(0x000C) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       SpawnGroupGameplayTags;                                    // 0x0088(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAISpawnGroup");
		return ptr;
	}



	bool IsValidForEnemySpawners();
	bool IsPrototype();
	bool IsLargeSpawnGroup();
	int GetNumberOfEnemies();
	class UClass* GetEnemy(int EnemyIndex);
};

// Class FortniteGame.FortStaticMeshUserData
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortStaticMeshUserData : public UAssetUserData
{
public:
	TArray<struct FTransformableNavLinkClass>          NavLinks;                                                  // 0x001C(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortStaticMeshUserData");
		return ptr;
	}



};

// Class FortniteGame.FortTaggedActorsManager
// 0x0354 (FullSize[0x0370] - InheritedSize[0x001C])
class UFortTaggedActorsManager : public UObject
{
public:
	unsigned char                                      UnknownData_34HK[0x354];                                   // 0x001C(0x0354) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTaggedActorsManager");
		return ptr;
	}



};

// Class FortniteGame.FortTeamIdentification
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UFortTeamIdentification : public UObject
{
public:
	struct FColor                                      HUDColor;                                                  // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UCustomAccessoryColorSwatch*                 CharacterAccessoryColorSwatch;                             // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTeamIdentification");
		return ptr;
	}



};

// Class FortniteGame.FortTeamInfo
// 0x00A8 (FullSize[0x02E8] - InheritedSize[0x0240])
class AFortTeamInfo : public AInfo
{
public:
	unsigned char                                      UnknownData_LTBE[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AController*>                         TeamMembers;                                               // 0x0244(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTeam>                Team;                                                      // 0x0250(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y3BJ[0x3];                                     // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTeamSpottedActorInfoArray                  TeamSpottedActors;                                         // 0x0254(0x0090) (Net, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XQV2[0x4];                                     // 0x02E4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTeamInfo");
		return ptr;
	}



	int GetTeamLevel();
	int GetTeamExperience();
};

// Class FortniteGame.FortTeamInfoPvPBaseDestruction
// 0x00B4 (FullSize[0x039C] - InheritedSize[0x02E8])
class AFortTeamInfoPvPBaseDestruction : public AFortTeamInfo
{
public:
	class AFortPvPBaseCornerstone*                     TeamCornerstone;                                           // 0x02E8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTeamStrategicBuildingEntryArray            TeamStrategicBuildingActors;                               // 0x02EC(0x008C) (Net, Transient, Protected, NativeAccessSpecifierProtected)
	int                                                StrategicBuildingHandleGenerator;                          // 0x0378(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TeamLevel;                                                 // 0x037C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHandleTeamLevelChanged;                                  // 0x0380(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	int                                                TeamExperience;                                            // 0x038C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHandleTeamXPChanged;                                     // 0x0390(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTeamInfoPvPBaseDestruction");
		return ptr;
	}



	void OnRep_TeamLevel();
	void OnRep_TeamExperience();
	class AFortPvPBaseCornerstone* GetTeamCornerstone();
	class AStrategicBuildingActor* GetStrategicBuildingActor(const struct FTeamStrategicBuildingHandle& Handle);
};

// Class FortniteGame.FortTheaterList
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortTheaterList : public UDataAsset
{
public:
	TArray<class UFortTheaterInfo*>                    ActiveTheatersList;                                        // 0x001C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTheaterList");
		return ptr;
	}



};

// Class FortniteGame.FortTheaterMapTile
// 0x0140 (FullSize[0x0380] - InheritedSize[0x0240])
class AFortTheaterMapTile : public AActor
{
public:
	bool                                               bFocused;                                                  // 0x0240(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHostSelected;                                             // 0x0241(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bGoToPromptEnabled;                                        // 0x0242(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M8RI[0x1];                                     // 0x0243(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortHexMapCoord                            MapCoord;                                                  // 0x0244(0x000C) (NativeAccessSpecifierPublic)
	bool                                               bHasFinishedLoading;                                       // 0x0250(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortTheaterMapTileType>  TileType;                                                  // 0x0251(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6Q7N[0x2];                                     // 0x0252(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ZoneThemeClass;                                            // 0x0254(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TileIndex;                                                 // 0x0258(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RegionIndex;                                               // 0x025C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     SelectionOffset;                                           // 0x0260(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     FocusOffset;                                               // 0x026C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              SelectionInterpSpeed;                                      // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NormalBrightness;                                          // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LockedBrightness;                                          // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FocusedBrightness;                                         // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SelectedBrightnessRange;                                   // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SelectedPulseSpeed;                                        // 0x028C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableBrightnessCode;                                     // 0x0290(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JOZ2[0x3];                                     // 0x0291(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StaticMeshMaterialID;                                      // 0x0294(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     InitialLocation;                                           // 0x0298(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortAvailableMissionData                   MissionData;                                               // 0x02A4(0x0060) (Protected, NativeAccessSpecifierProtected)
	struct FFortAvailableMissionData                   LastValidMissionData;                                      // 0x0304(0x0060) (Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                         ZoneDifficultyInfo;                                        // 0x0364(0x000C) (Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        StaticMeshComponent;                                       // 0x0370(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>            AdjacencyMIDs;                                             // 0x0374(0x000C) (BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTheaterMapTile");
		return ptr;
	}



	void OnTileClicked();
	void OnSelectWrapper(bool bIsGameSessionOwner);
	void OnMouseOverEnd();
	void OnMouseOverBegin();
	void OnMissionDataUpdated();
	void OnInitializeTile();
	void OnHostSelect();
	void OnHostDeselect();
	void OnFocus();
	void OnEnableGoToPrompt();
	void OnDisableGoToPrompt();
	void OnDeselectWrapper(bool bIsGameSessionOwner);
	void OnDefocus();
	void OnClientSelect();
	void OnClientDeselect();
	bool IsTileSelectable();
	bool IsTilePlayable();
	bool IsTileLocked();
	bool IsTileHidden();
	bool HasValidMissionData();
	struct FGameDifficultyInfo GetZoneDifficulty();
};

// Class FortniteGame.FortThreatParticleActor
// 0x0004 (FullSize[0x0244] - InheritedSize[0x0240])
class AFortThreatParticleActor : public AActor
{
public:
	unsigned char                                      UnknownData_SHI3[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortThreatParticleActor");
		return ptr;
	}



	void OnThreatCloudsChanged(TArray<struct FThreatLocationInfo> ThreatLocationInfo);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
};

// Class FortniteGame.FortTips
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortTips : public UDataAsset
{
public:
	TArray<struct FText>                               Tips;                                                      // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTips");
		return ptr;
	}



};

// Class FortniteGame.FortTooltip
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortTooltip : public UObject
{
public:
	struct FText                                       Description;                                               // 0x001C(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTooltip");
		return ptr;
	}



	bool GetTokenizedDescriptionTextInternal(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FText* OutDescription);
	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FText* OutDescription);
	bool GetTextForTokenInternal(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
	bool GetTextForToken(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
	bool GetNumericValueInternal(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, float* OutVal);
	bool GetNumericValue(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, float* OutVal);
};

// Class FortniteGame.FortAbilityKitTooltip
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UFortAbilityKitTooltip : public UFortTooltip
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAbilityKitTooltip");
		return ptr;
	}



	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FText* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
};

// Class FortniteGame.FortGameplayAbilityTooltip
// 0x0054 (FullSize[0x007C] - InheritedSize[0x0028])
class UFortGameplayAbilityTooltip : public UFortTooltip
{
public:
	struct FGameplayAbilitySpec                        CachedSpec;                                                // 0x0028(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UFortTooltipContext*                         CachedContext;                                             // 0x0078(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbilityTooltip");
		return ptr;
	}



	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FText* OutDescription);
	bool GetTextForTokenFromAbilitySpecInternal(const struct FGameplayAbilitySpec& Spec, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
	bool GetTextForTokenFromAbilitySpec(const struct FGameplayAbilitySpec& Spec, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
	bool GetTextForToken(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
};

// Class FortniteGame.FortItemDefinitionTooltip
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UFortItemDefinitionTooltip : public UFortTooltip
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortItemDefinitionTooltip");
		return ptr;
	}



	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FText* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
};

// Class FortniteGame.FortAISpawnGroupProgressionInfo
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortAISpawnGroupProgressionInfo : public UDataAsset
{
public:
	TArray<struct FSpawnGroupProgression>              SpawnGroups;                                               // 0x001C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAISpawnGroupProgressionInfo");
		return ptr;
	}



};

// Class FortniteGame.FortAISystem
// 0x0004 (FullSize[0x00C4] - InheritedSize[0x00C0])
class UFortAISystem : public UAISystem
{
public:
	class UFortNavGraph*                               NavGraph;                                                  // 0x00C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAISystem");
		return ptr;
	}



	void STATIC_RequestNumberofBTDrivenAIPawns(class UObject* WorldContext, int NumberOfPawns);
	bool STATIC_IsInCone2D(const struct FVector& ConeOrigin, const struct FVector& ConeDirection, float HalfAngle, const struct FVector& LocationToCheck);
};

// Class FortniteGame.Stat
// 0x0038 (FullSize[0x0054] - InheritedSize[0x001C])
class UStat : public UObject
{
public:
	struct FName                                       StatName;                                                  // 0x001C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EStatRecordingPeriod>     HighestPeriodToTrack;                                      // 0x0024(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PHSE[0x3];                                     // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        StatDataByPeriod;                                          // 0x0028(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                AbsoluteMaxValue;                                          // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3O0W[0x1C];                                    // 0x0038(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.Stat");
		return ptr;
	}



};

// Class FortniteGame.FortOutpostAnalytics
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortOutpostAnalytics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortOutpostAnalytics");
		return ptr;
	}



	void STATIC_FireAnalyticsEvent_OutpostSupplyDropPickedUp(class UObject* SourceBp, TArray<struct FFortAnalyticsEventAttribute> Resourcees);
	void STATIC_FireAnalyticsEvent_OutpostBuildingDefended(class UObject* SourceBp, const struct FString& BuildingType, int NumMissionsCompleted);
	void STATIC_FireAnalyticsEvent_OutpostBuildingActivated(class UObject* SourceBp, const struct FString& BuildingType, int NumMissionsCompleted);
	void STATIC_FireAnalyticsEvent_OutpostAttackWaveCompleted(class UObject* SourceBp, const struct FString& BuildingType, int NumMissionsCompleted, bool Succeeded, const struct FString& Direction);
};

// Class FortniteGame.FortOnboardingAnalytics
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortOnboardingAnalytics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortOnboardingAnalytics");
		return ptr;
	}



	void STATIC_FireAnalyticsEvent_VinderTipPlayed(class UObject* SourceBp, const struct FString& VinderTipTag);
	void STATIC_FireAnalyticsEvent_CinematicSkipped(class UObject* SourceBp);
};

// Class FortniteGame.FortAnalytics
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortAnalytics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAnalytics");
		return ptr;
	}



	void STATIC_FireMissionAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const struct FString& EventName, TArray<struct FFortAnalyticsEventAttribute> Attributes);
	void STATIC_FireMissionAnalyticsEvent_Blueprint(class UObject* SourceBp, const struct FString& EventName, const struct FFortAnalyticsEventAttribute& Attribute);
	void STATIC_FireAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const struct FString& EventName, TArray<struct FFortAnalyticsEventAttribute> Attributes);
	void STATIC_FireAnalyticsEvent_Blueprint(class UObject* SourceBp, const struct FString& EventName, const struct FFortAnalyticsEventAttribute& Attribute);
	struct FFortAnalyticsEventAttribute STATIC_ConstructAnalyticsAttribute(const struct FString& AttributeName, const struct FString& StringValue, const struct FGuid& FGuidValue, int IntValue, float FloatValue, bool BoolValue);
};

// Class FortniteGame.FortAnimInstance
// 0x012C (FullSize[0x043C] - InheritedSize[0x0310])
class UFortAnimInstance : public UAnimInstance
{
public:
	float                                              VelocityLerpAlpha;                                         // 0x0310(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PawnVelocity;                                              // 0x0314(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MinSpeed2DThreshold;                                       // 0x0320(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PawnSpeed2D;                                               // 0x0324(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PawnVelocityZ;                                             // 0x0328(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PawnMovementDirectionAzimuth;                              // 0x032C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PawnMovementDirectionElevation;                            // 0x0330(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    PawnDeltaRotation;                                         // 0x0334(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    PawnLastRotation;                                          // 0x0340(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsJumping;                                                // 0x034C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsFalling;                                                // 0x034D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bShouldPredictLanding;                                     // 0x034E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bLandingPredicted;                                         // 0x034F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              PredictedFallTimeLeft;                                     // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallLookAheadSubStepping;                                  // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                FallLookAheadMaxIterations;                                // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugLandPrediction;                                      // 0x035C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YZVW[0x3];                                     // 0x035D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimPitch;                                                  // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimYaw;                                                    // 0x0364(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimPitchAdjustment;                                        // 0x0368(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimYawAdjustment;                                          // 0x036C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAimYawAdjustment;                                       // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxPitch;                                                  // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxYaw;                                                    // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReticleAimDistance;                                        // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAdjustmentInterpSpeed;                                  // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimTwistCorrectionExponent;                                // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    WeaponAimingFreezeInterpScale;                             // 0x0388(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bAimWeaponTowardsReticle;                                  // 0x0394(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U2SD[0x3];                                     // 0x0395(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       WeaponAimingCurveName;                                     // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       WeaponAimingFreezeCurveName;                               // 0x03A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDebugWeaponAiming;                                        // 0x03A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S2UU[0x7];                                     // 0x03A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  LastFramePawnTransform;                                    // 0x03B0(0x0030) (Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bCachedPawnTransform;                                      // 0x03E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bHasValidWeaponMuzzleSocket;                               // 0x03E1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7OMN[0x2];                                     // 0x03E2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       HeadTrackingReticleSocketName;                             // 0x03E4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<CoreUObject_EAxis>                     HeadTrackingReticleSocketLookAtAxis;                       // 0x03EC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_11J5[0x3];                                     // 0x03ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HeadTrackingReticleInterpSpeed;                            // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    HeadTrackingReticleAdjustment;                             // 0x03F4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              HeadTrackingReticlePitchAlpha;                             // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadTrackingReticleAimDistance;                            // 0x0404(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadTrackingReticleAimDistanceDownsights;                  // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeForRecentlyFired;                                      // 0x040C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToReachRelaxedLevel1;                                  // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToReachRelaxedLevel2;                                  // 0x0414(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRecentlyFired;                                            // 0x0418(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsRelaxedLevel1;                                          // 0x0419(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsRelaxedLevel2;                                          // 0x041A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F89F[0x1];                                     // 0x041B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RelaxedLevelTimeCounter;                                   // 0x041C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SavedWeaponLastFireTime;                                   // 0x0420(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRecordJumpPositions;                                      // 0x0424(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsRecordingJump;                                          // 0x0425(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FRH2[0x2];                                     // 0x0426(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                RecordJumpFrameCount;                                      // 0x0428(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RecordJumpInitialJumpLocation;                             // 0x042C(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_80EP[0x4];                                     // 0x0438(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAnimInstance");
		return ptr;
	}



	class AFortPawn* TryGetFortPawn();
	class AFortAIPawn* TryGetFortAIPawn();
	void AnimNotify_RightFootStep(class UAnimNotify* Notify);
	void AnimNotify_LeftFootStep(class UAnimNotify* Notify);
};

// Class FortniteGame.FortAIAnimInstance
// 0x0024 (FullSize[0x0460] - InheritedSize[0x043C])
class UFortAIAnimInstance : public UFortAnimInstance
{
public:
	float                                              UpwardVelocity;                                            // 0x043C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementDirection;                                         // 0x0440(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowerBodyCurrentWeight;                                    // 0x0444(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RunVariation;                                              // 0x0448(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WalkVariation;                                             // 0x044C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortMovementStyle>       MovementStyle;                                             // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               BlockGetUp;                                                // 0x0451(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsStunned;                                                // 0x0452(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsSleeping;                                               // 0x0453(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bAdditiveHitReactLoop;                                     // 0x0454(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseAltSleepAnim;                                          // 0x0455(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bShouldUseMovementLocomotion;                              // 0x0456(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               HideHead;                                                  // 0x0457(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BB13[0x8];                                     // 0x0458(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAIAnimInstance");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerAnimGraphInstance
// 0x0004 (FullSize[0x0440] - InheritedSize[0x043C])
class UFortPlayerAnimGraphInstance : public UFortAnimInstance
{
public:
	unsigned char                                      UnknownData_BV0J[0x4];                                     // 0x043C(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerAnimGraphInstance");
		return ptr;
	}



	void AnimNotify_StopFireFX(class UAnimNotify* Notify);
	void AnimNotify_PlaySecondaryFireFX(class UAnimNotify* Notify);
	void AnimNotify_PlayFireFX(class UAnimNotify* Notify);
};

// Class FortniteGame.FortAnimNotify_TriggerGameplayAbility
// 0x0010 (FullSize[0x0030] - InheritedSize[0x0020])
class UFortAnimNotify_TriggerGameplayAbility : public UAnimNotify
{
public:
	struct FGameplayTag                                ApplicationTag;                                            // 0x0020(0x0008) (Edit, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       MontageSectionIfBlocked;                                   // 0x0028(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_TriggerGameplayAbility");
		return ptr;
	}



};

// Class FortniteGame.FortAnimNotifyState_AbilityDecisionWindow
// 0x003C (FullSize[0x0058] - InheritedSize[0x001C])
class UFortAnimNotifyState_AbilityDecisionWindow : public UAnimNotifyState
{
public:
	struct FFortMontageInputAction                     PrimaryInput;                                              // 0x001C(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortMontageInputAction                     SecondaryInput;                                            // 0x0030(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FName                                       DefaultNextSection;                                        // 0x0044(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PrimaryInputStrikeAngle;                                   // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondaryInputStrikeAngle;                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ComboCounter;                                              // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_AbilityDecisionWindow");
		return ptr;
	}



};

// Class FortniteGame.FortAnimNotifyState_AllowBlockedActions
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortAnimNotifyState_AllowBlockedActions : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_AllowBlockedActions");
		return ptr;
	}



};

// Class FortniteGame.FortAnimNotifyState_RootMotionInterrupt
// 0x0008 (FullSize[0x0024] - InheritedSize[0x001C])
class UFortAnimNotifyState_RootMotionInterrupt : public UAnimNotifyState
{
public:
	TEnumAsByte<FortniteGame_EMontageInterrupt>        MontageInterrupt;                                          // 0x001C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZFGX[0x3];                                     // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bAllowMoveInput : 1;                                       // 0x0020(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X8HP[0x3];                                     // 0x0021(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_RootMotionInterrupt");
		return ptr;
	}



};

// Class FortniteGame.FortAsyncAction_SendQuestStatEvent
// 0x0080 (FullSize[0x009C] - InheritedSize[0x001C])
class UFortAsyncAction_SendQuestStatEvent : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                 // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIgnored;                                                 // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailure;                                                 // 0x0034(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortQuestManager*                           QuestManager;                                              // 0x0040(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                         ObjectiveStat;                                             // 0x0044(0x000C) (Transient, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       TargetTags;                                                // 0x0050(0x0018) (Transient, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       SourceTags;                                                // 0x0068(0x0018) (Transient, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       ContextTags;                                               // 0x0080(0x0018) (Transient, NativeAccessSpecifierPrivate)
	int                                                Count;                                                     // 0x0098(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_SendQuestStatEvent");
		return ptr;
	}



	class UFortAsyncAction_SendQuestStatEvent* STATIC_SendClientStatEventWithTags(class UFortQuestManager* QuestManager, const struct FGameplayTagContainer& TargetTags, const struct FGameplayTagContainer& SourceTags, const struct FGameplayTagContainer& ContextTags, int Count);
	class UFortAsyncAction_SendQuestStatEvent* STATIC_SendClientStatEvent(class UFortQuestManager* QuestManager, const struct FDataTableRowHandle& ObjectiveStat, int Count);
};

// Class FortniteGame.FortAttributeCategory
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortAttributeCategory : public UDataAsset
{
public:
	TArray<struct FMyFortCategoryData>                 Categories;                                                // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAttributeCategory");
		return ptr;
	}



};

// Class FortniteGame.FortConstructionSet
// 0x002C (FullSize[0x004C] - InheritedSize[0x0020])
class UFortConstructionSet : public UFortAttributeSet
{
public:
	float                                              BuildSpeed;                                                // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RepairSpeed;                                               // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BuildCost;                                                 // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RepairCost;                                                // 0x002C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxBuildLevel;                                             // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrapArmSpeed;                                              // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrapReloadSpeed;                                           // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrapBaseDamage;                                            // 0x003C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrapMaxDurability;                                         // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrapDiceCritChance;                                        // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrapDiceCritMultiplier;                                    // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortConstructionSet");
		return ptr;
	}



};

// Class FortniteGame.FortDamageSet
// 0x0028 (FullSize[0x0048] - InheritedSize[0x0020])
class UFortDamageSet : public UFortAttributeSet
{
public:
	float                                              OutgoingBaseDamage;                                        // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OutgoingBaseEnvironmentalDamage;                           // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OutgoingAbilityDamage;                                     // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZoneCritMultiplier;                                        // 0x002C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DiceCritChance;                                            // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DiceCritMultiplier;                                        // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackMagnitude;                                        // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockbackZAngle;                                           // 0x003C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ControlStrength;                                           // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ControlResistance;                                         // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDamageSet");
		return ptr;
	}



};

// Class FortniteGame.FortBuildingActorSet
// 0x0008 (FullSize[0x00F8] - InheritedSize[0x00F0])
class UFortBuildingActorSet : public UFortHealthSet
{
public:
	float                                              BuildTime;                                                 // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RepairTime;                                                // 0x00F4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBuildingActorSet");
		return ptr;
	}



};

// Class FortniteGame.FortBuildingTrapSet
// 0x004C (FullSize[0x0144] - InheritedSize[0x00F8])
class UFortBuildingTrapSet : public UFortBuildingActorSet
{
public:
	float                                              Durability;                                                // 0x00F8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDurability;                                             // 0x00FC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DurabilityCostPerFire;                                     // 0x0100(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmTime;                                                   // 0x0104(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadTime;                                                // 0x0108(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EO20[0x38];                                    // 0x010C(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBuildingTrapSet");
		return ptr;
	}



	void OnRep_Durability();
};

// Class FortniteGame.FortHomebaseSet
// 0x03D0 (FullSize[0x03F0] - InheritedSize[0x0020])
class UFortHomebaseSet : public UFortAttributeSet
{
public:
	float                                              Dojo_Level;                                                // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Dojo_Rating;                                               // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Dojo_TotalRating;                                          // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Dojo_WorkerSlots;                                          // 0x002C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Dojo_ManagerSlots;                                         // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Dojo_ElderHut_Level;                                       // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Dojo_GunpowderFoundry_Level;                               // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Dojo_NinjaForge_Level;                                     // 0x003C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Dojo_TargetDummies_Level;                                  // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Dojo_ZenGardens_Level;                                     // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MilitaryHQ_Level;                                          // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MilitaryHQ_Rating;                                         // 0x004C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MilitaryHQ_TotalRating;                                    // 0x0050(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MilitaryHQ_WorkerSlots;                                    // 0x0054(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MilitaryHQ_ManagerSlots;                                   // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MilitaryHQ_SubBuildingOne_Level;                           // 0x005C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MilitaryHQ_SubBuildingTwo_Level;                           // 0x0060(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MilitaryHQ_SubBuildingThree_Level;                         // 0x0064(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MilitaryHQ_SubBuildingFour_Level;                          // 0x0068(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MilitaryHQ_SubBuildingFive_Level;                          // 0x006C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivalBunker_Level;                                      // 0x0070(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivalBunker_Rating;                                     // 0x0074(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivalBunker_TotalRating;                                // 0x0078(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivalBunker_WorkerSlots;                                // 0x007C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivalBunker_ManagerSlots;                               // 0x0080(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivalBunker_SubBuildingOne_Level;                       // 0x0084(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivalBunker_SubBuildingTwo_Level;                       // 0x0088(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivalBunker_SubBuildingThree_Level;                     // 0x008C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivalBunker_SubBuildingFour_Level;                      // 0x0090(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivalBunker_SubBuildingFive_Level;                      // 0x0094(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TechLab_Level;                                             // 0x0098(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TechLab_Rating;                                            // 0x009C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TechLab_TotalRating;                                       // 0x00A0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TechLab_WorkerSlots;                                       // 0x00A4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TechLab_ManagerSlots;                                      // 0x00A8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TechLab_SubBuildingOne_Level;                              // 0x00AC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TechLab_SubBuildingTwo_Level;                              // 0x00B0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TechLab_SubBuildingThree_Level;                            // 0x00B4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TechLab_SubBuildingFour_Level;                             // 0x00B8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TechLab_SubBuildingFive_Level;                             // 0x00BC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Barracks_Level;                                            // 0x00C0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Barracks_Rating;                                           // 0x00C4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Barracks_TotalRating;                                      // 0x00C8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Barracks_WorkerSlots;                                      // 0x00CC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Barracks_ManagerSlots;                                     // 0x00D0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CommandCenter_Level;                                       // 0x00D4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CommandCenter_Rating;                                      // 0x00D8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CommandCenter_TotalRating;                                 // 0x00DC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CommandCenter_WorkerSlots;                                 // 0x00E0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CommandCenter_ManagerSlots;                                // 0x00E4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CommandCenter_Warehouse_Level;                             // 0x00E8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CommandCenter_ExpeditionTeam_Level;                        // 0x00EC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CommandCenter_Farm_Level;                                  // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CommandCenter_ManufacturingPlant_Level;                    // 0x00F4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CommandCenter_PowerStation_Level;                          // 0x00F8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Library_Level;                                             // 0x00FC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Library_Rating;                                            // 0x0100(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Library_TotalRating;                                       // 0x0104(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Library_WorkerSlots;                                       // 0x0108(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Library_ManagerSlots;                                      // 0x010C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrainingGrounds_Level;                                     // 0x0110(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrainingGrounds_Rating;                                    // 0x0114(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrainingGrounds_TotalRating;                               // 0x0118(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrainingGrounds_WorkerSlots;                               // 0x011C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrainingGrounds_ManagerSlots;                              // 0x0120(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Blacksmith_Level;                                          // 0x0124(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Blacksmith_Rating;                                         // 0x0128(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Blacksmith_TotalRating;                                    // 0x012C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Blacksmith_WorkerSlots;                                    // 0x0130(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Blacksmith_ManagerSlots;                                   // 0x0134(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gunsmith_Level;                                            // 0x0138(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gunsmith_Rating;                                           // 0x013C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gunsmith_TotalRating;                                      // 0x0140(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gunsmith_WorkerSlots;                                      // 0x0144(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gunsmith_ManagerSlots;                                     // 0x0148(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScienceLab_Level;                                          // 0x014C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScienceLab_Rating;                                         // 0x0150(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScienceLab_TotalRating;                                    // 0x0154(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScienceLab_WorkerSlots;                                    // 0x0158(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScienceLab_ManagerSlots;                                   // 0x015C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Workshop_Level;                                            // 0x0160(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Workshop_Rating;                                           // 0x0164(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Workshop_TotalRating;                                      // 0x0168(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Workshop_WorkerSlots;                                      // 0x016C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Workshop_ManagerSlots;                                     // 0x0170(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_Level;                                                // 0x0174(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_Rating;                                               // 0x0178(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_WorkerSlots;                                          // 0x017C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_ManagerSlots;                                         // 0x0180(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_AmmoStash_Level;                                      // 0x0184(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_Armory_Level;                                         // 0x0188(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_Medical_Level;                                        // 0x018C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_Storage_Level;                                        // 0x0190(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_Workshop_Level;                                       // 0x0194(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_StructureCap;                                         // 0x0198(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Keep_PermaniteCap;                                         // 0x019C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Manor_Level;                                               // 0x01A0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Manor_Rating;                                              // 0x01A4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Manor_WorkerSlots;                                         // 0x01A8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Manor_ManagerSlots;                                        // 0x01AC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Manor_StructureCap;                                        // 0x01B0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineeringSchool_Level;                                   // 0x01B4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineeringSchool_Rating;                                  // 0x01B8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineeringSchool_TotalRating;                             // 0x01BC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineeringSchool_WorkerSlots;                             // 0x01C0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineeringSchool_ManagerSlots;                            // 0x01C4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineeringSchool_SubBuildingOne_Level;                    // 0x01C8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineeringSchool_SubBuildingTwo_Level;                    // 0x01CC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineeringSchool_SubBuildingThree_Level;                  // 0x01D0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineeringSchool_SubBuildingFour_Level;                   // 0x01D4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineeringSchool_SubBuildingFive_Level;                   // 0x01D8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorersGuild_Level;                                      // 0x01DC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorersGuild_Rating;                                     // 0x01E0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorersGuild_TotalRating;                                // 0x01E4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorersGuild_WorkerSlots;                                // 0x01E8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorersGuild_ManagerSlots;                               // 0x01EC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorersGuild_SubBuildingOne_Level;                       // 0x01F0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorersGuild_SubBuildingTwo_Level;                       // 0x01F4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorersGuild_SubBuildingThree_Level;                     // 0x01F8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorersGuild_SubBuildingFour_Level;                      // 0x01FC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExplorersGuild_SubBuildingFive_Level;                      // 0x0200(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringRange_Level;                                         // 0x0204(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringRange_Rating;                                        // 0x0208(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringRange_TotalRating;                                   // 0x020C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringRange_WorkerSlots;                                   // 0x0210(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringRange_ManagerSlots;                                  // 0x0214(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringRange_SubBuildingOne_Level;                          // 0x0218(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringRange_SubBuildingTwo_Level;                          // 0x021C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringRange_SubBuildingThree_Level;                        // 0x0220(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringRange_SubBuildingFour_Level;                         // 0x0224(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringRange_SubBuildingFive_Level;                         // 0x0228(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetWorkshop_Level;                                      // 0x022C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetWorkshop_Rating;                                     // 0x0230(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetWorkshop_TotalRating;                                // 0x0234(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetWorkshop_WorkerSlots;                                // 0x0238(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetWorkshop_ManagerSlots;                               // 0x023C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetWorkshop_SubBuildingOne_Level;                       // 0x0240(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetWorkshop_SubBuildingTwo_Level;                       // 0x0244(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetWorkshop_SubBuildingThree_Level;                     // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetWorkshop_SubBuildingFour_Level;                      // 0x024C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetWorkshop_SubBuildingFive_Level;                      // 0x0250(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gym_Level;                                                 // 0x0254(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gym_Rating;                                                // 0x0258(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gym_TotalRating;                                           // 0x025C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gym_WorkerSlots;                                           // 0x0260(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gym_ManagerSlots;                                          // 0x0264(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gym_SubBuildingOne_Level;                                  // 0x0268(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gym_SubBuildingTwo_Level;                                  // 0x026C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gym_SubBuildingThree_Level;                                // 0x0270(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gym_SubBuildingFour_Level;                                 // 0x0274(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Gym_SubBuildingFive_Level;                                 // 0x0278(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Hospital_Level;                                            // 0x027C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Hospital_Rating;                                           // 0x0280(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Hospital_TotalRating;                                      // 0x0284(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Hospital_WorkerSlots;                                      // 0x0288(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Hospital_ManagerSlots;                                     // 0x028C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Hospital_SubBuildingOne_Level;                             // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Hospital_SubBuildingTwo_Level;                             // 0x0294(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Hospital_SubBuildingThree_Level;                           // 0x0298(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Hospital_SubBuildingFour_Level;                            // 0x029C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Hospital_SubBuildingFive_Level;                            // 0x02A0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MartialArtsAcademy_Level;                                  // 0x02A4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MartialArtsAcademy_Rating;                                 // 0x02A8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MartialArtsAcademy_TotalRating;                            // 0x02AC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MartialArtsAcademy_WorkerSlots;                            // 0x02B0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MartialArtsAcademy_ManagerSlots;                           // 0x02B4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MartialArtsAcademy_SubBuildingOne_Level;                   // 0x02B8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MartialArtsAcademy_SubBuildingTwo_Level;                   // 0x02BC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MartialArtsAcademy_SubBuildingThree_Level;                 // 0x02C0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MartialArtsAcademy_SubBuildingFour_Level;                  // 0x02C4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MartialArtsAcademy_SubBuildingFive_Level;                  // 0x02C8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneManufactory_Level;                                    // 0x02CC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneManufactory_Rating;                                   // 0x02D0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneManufactory_TotalRating;                              // 0x02D4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneManufactory_WorkerSlots;                              // 0x02D8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneManufactory_ManagerSlots;                             // 0x02DC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneManufactory_SubBuildingOne_Level;                     // 0x02E0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneManufactory_SubBuildingTwo_Level;                     // 0x02E4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneManufactory_SubBuildingThree_Level;                   // 0x02E8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneManufactory_SubBuildingFour_Level;                    // 0x02EC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneManufactory_SubBuildingFive_Level;                    // 0x02F0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingOne_Level;                                     // 0x02F4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingOne_Rating;                                    // 0x02F8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingOne_TotalRating;                               // 0x02FC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingOne_WorkerSlots;                               // 0x0300(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingOne_ManagerSlots;                              // 0x0304(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingOne_SubBuildingOne_Level;                      // 0x0308(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingOne_SubBuildingTwo_Level;                      // 0x030C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingOne_SubBuildingThree_Level;                    // 0x0310(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingOne_SubBuildingFour_Level;                     // 0x0314(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingOne_SubBuildingFive_Level;                     // 0x0318(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingTwo_Level;                                     // 0x031C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingTwo_Rating;                                    // 0x0320(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingTwo_TotalRating;                               // 0x0324(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingTwo_WorkerSlots;                               // 0x0328(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingTwo_ManagerSlots;                              // 0x032C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingTwo_SubBuildingOne_Level;                      // 0x0330(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingTwo_SubBuildingTwo_Level;                      // 0x0334(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingTwo_SubBuildingThree_Level;                    // 0x0338(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingTwo_SubBuildingFour_Level;                     // 0x033C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestBuildingTwo_SubBuildingFive_Level;                     // 0x0340(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeroSlots;                                                 // 0x0344(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InventorySizeBonus;                                        // 0x0348(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WorldInventorySizeBonus;                                   // 0x034C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLevelBonus_Global;                                      // 0x0350(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLevelBonus_Schematics;                                  // 0x0354(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLevelBonus_Schematics_Ranged;                           // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLevelBonus_Schematics_Melee;                            // 0x035C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLevelBonus_Schematics_Traps;                            // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLevelBonus_Personnel;                                   // 0x0364(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLevelBonus_Alterations;                                 // 0x0368(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Resource_MaxCapacity_Food;                                 // 0x036C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Resource_MaxCapacity_ManufacturingParts;                   // 0x0370(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Resource_MaxCapacity_Power;                                // 0x0374(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Resource_MaxCapacity_Supplies;                             // 0x0378(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Resource_Production_Food;                                  // 0x037C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Resource_Production_ManufacturingParts;                    // 0x0380(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Resource_Production_Power;                                 // 0x0384(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Resource_Production_Supplies;                              // 0x0388(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SupplyDrop_Magnitude;                                      // 0x038C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SupplyDrop_Level;                                          // 0x0390(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZPQD[0x5C];                                    // 0x0394(0x005C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHomebaseSet");
		return ptr;
	}



	void OnRep_HomebaseAttr();
};

// Class FortniteGame.FortMovementSet
// 0x001C (FullSize[0x003C] - InheritedSize[0x0020])
class UFortMovementSet : public UFortAttributeSet
{
public:
	float                                              WalkSpeed;                                                 // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RunSpeed;                                                  // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintSpeed;                                               // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BackwardSpeedMultiplier;                                   // 0x002C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpHeight;                                                // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GravityZScale;                                             // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedMultiplier;                                           // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMovementSet");
		return ptr;
	}



	void OnRep_SpeedMultiplier();
};

// Class FortniteGame.FortPlayerAttrSet
// 0x00A0 (FullSize[0x00C0] - InheritedSize[0x0020])
class UFortPlayerAttrSet : public UFortAttributeSet
{
public:
	unsigned char                                      UnknownData_VZVI[0x4];                                     // 0x0020(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Stamina;                                                   // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaRegenRate;                                          // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaRegenDelay;                                         // 0x002C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxStamina;                                                // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaCost;                                               // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintCost;                                                // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QST5[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WeaponChanceToNotConsumeAmmo;                              // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AccumulatedWeaponChanceToNotConsumeAmmo;                   // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponRateOfFire;                                          // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponHorizontalRecoil;                                    // 0x004C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponVerticalRecoil;                                      // 0x0050(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponReloadSpeed;                                         // 0x0054(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponAmmoClipSize;                                        // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CharacterItemDurabilityDecayChance;                        // 0x005C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ItemRegenMaxStack;                                         // 0x0060(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DoubleLootRollChance;                                      // 0x0064(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DoubleItemLootChance;                                      // 0x0068(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DoubleCraftChance;                                         // 0x006C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CraftingTimeMultiplier;                                    // 0x0070(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XTQ0[0x8];                                     // 0x0074(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ResourceHarvesting;                                        // 0x007C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Scrappiness;                                               // 0x0080(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Swagger;                                                   // 0x0084(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Tenacity;                                                  // 0x0088(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Armour;                                                    // 0x008C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitality;                                                  // 0x0090(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Offense;                                                   // 0x0094(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Prowess;                                                   // 0x0098(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Defense;                                                   // 0x009C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActiveEffectDuration;                                      // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IBF9[0x1C];                                    // 0x00A4(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerAttrSet");
		return ptr;
	}



	void OnRep_WeaponReloadSpeed();
	void OnRep_WeaponRateOfFire();
	void OnRep_StaminaRegenRate();
	void OnRep_StaminaRegenDelay();
	void OnRep_StaminaCost();
	void OnRep_Stamina();
	void OnRep_SprintCost();
	void OnRep_MaxStamina();
	void OnRep_ItemRegenMaxStack();
};

// Class FortniteGame.FortAttributeTemplate
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortAttributeTemplate : public UDataAsset
{
public:
	TArray<TEnumAsByte<FortniteGame_EFortItemPropertyType>> ItemProperties;                                            // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAttributeTemplate");
		return ptr;
	}



};

// Class FortniteGame.FortBehaviorTreeComponent
// 0x0000 (FullSize[0x01AC] - InheritedSize[0x01AC])
class UFortBehaviorTreeComponent : public UBehaviorTreeComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBehaviorTreeComponent");
		return ptr;
	}



};

// Class FortniteGame.FortBluGloManager
// 0x0078 (FullSize[0x02B8] - InheritedSize[0x0240])
class AFortBluGloManager : public AActor
{
public:
	float                                              BluGloPerMinute;                                           // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 BluGloIcon;                                                // 0x0244(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBluGloManager");
		return ptr;
	}



};

// Class FortniteGame.FortBTDecorator_DistanceBetween
// 0x0054 (FullSize[0x009C] - InheritedSize[0x0048])
class UFortBTDecorator_DistanceBetween : public UBTDecorator
{
public:
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      Operator;                                                  // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1MSH[0x3];                                     // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBlackboardKeySelector                      BlackboardKeyA;                                            // 0x004C(0x0020) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      BlackboardKeyB;                                            // 0x006C(0x0020) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              SpecifiedDistance;                                         // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K10E[0x4];                                     // 0x0090(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bUseSelf : 1;                                              // 0x0094(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bCalculateAs2D : 1;                                        // 0x0094(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O67W[0x3];                                     // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DistanceCalculationUpdateRate;                             // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_DistanceBetween");
		return ptr;
	}



};

// Class FortniteGame.FortBTDecorator_GameplayAbility_HasGameplayAbility
// 0x0018 (FullSize[0x0060] - InheritedSize[0x0048])
class UFortBTDecorator_GameplayAbility_HasGameplayAbility : public UBTDecorator
{
public:
	struct FGameplayTagContainer                       GameplayAbilityTag;                                        // 0x0048(0x0018) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_HasGameplayAbility");
		return ptr;
	}



};

// Class FortniteGame.FortBTDecorator_QueryGameplayAbility
// 0x0054 (FullSize[0x009C] - InheritedSize[0x0048])
class UFortBTDecorator_QueryGameplayAbility : public UBTDecorator
{
public:
	struct FGameplayTagContainer                       GameplayAbilityTag;                                        // 0x0048(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      Target;                                                    // 0x0060(0x0020) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       ActiveAbilityTagsToSkipTesting;                            // 0x0080(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseTarget;                                                // 0x0098(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JBDR[0x3];                                     // 0x0099(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_QueryGameplayAbility");
		return ptr;
	}



};

// Class FortniteGame.FortBTDecorator_GameplayAbility_CanActivate
// 0x0000 (FullSize[0x009C] - InheritedSize[0x009C])
class UFortBTDecorator_GameplayAbility_CanActivate : public UFortBTDecorator_QueryGameplayAbility
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_CanActivate");
		return ptr;
	}



};

// Class FortniteGame.FortBTDecorator_GameplayAbility_CanHitTarget
// 0x0004 (FullSize[0x00A0] - InheritedSize[0x009C])
class UFortBTDecorator_GameplayAbility_CanHitTarget : public UFortBTDecorator_QueryGameplayAbility
{
public:
	unsigned char                                      UseIdealYawRotationToTarget : 1;                           // 0x009C(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TPWA[0x3];                                     // 0x009D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_CanHitTarget");
		return ptr;
	}



};

// Class FortniteGame.FortBTDecorator_GameplayAbility_CompareDistance
// 0x000C (FullSize[0x00A8] - InheritedSize[0x009C])
class UFortBTDecorator_GameplayAbility_CompareDistance : public UFortBTDecorator_QueryGameplayAbility
{
public:
	TArray<struct FDistanceToTargetComparison>         DistanceComparisons;                                       // 0x009C(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_CompareDistance");
		return ptr;
	}



};

// Class FortniteGame.FortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags
// 0x0000 (FullSize[0x009C] - InheritedSize[0x009C])
class UFortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags : public UFortBTDecorator_QueryGameplayAbility
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags");
		return ptr;
	}



};

// Class FortniteGame.FortBTDecorator_GameplayAbility_IsOnCooldown
// 0x0000 (FullSize[0x009C] - InheritedSize[0x009C])
class UFortBTDecorator_GameplayAbility_IsOnCooldown : public UFortBTDecorator_QueryGameplayAbility
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_IsOnCooldown");
		return ptr;
	}



};

// Class FortniteGame.FortBTDecorator_GameplayAbility_IsRotatedToAttackTarget
// 0x0000 (FullSize[0x009C] - InheritedSize[0x009C])
class UFortBTDecorator_GameplayAbility_IsRotatedToAttackTarget : public UFortBTDecorator_QueryGameplayAbility
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_IsRotatedToAttackTarget");
		return ptr;
	}



};

// Class FortniteGame.FortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange
// 0x0000 (FullSize[0x009C] - InheritedSize[0x009C])
class UFortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange : public UFortBTDecorator_QueryGameplayAbility
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange");
		return ptr;
	}



};

// Class FortniteGame.FortBTService_ContextOverride
// 0x0000 (FullSize[0x004C] - InheritedSize[0x004C])
class UFortBTService_ContextOverride : public UBTService
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTService_ContextOverride");
		return ptr;
	}



};

// Class FortniteGame.FortBTContext_MoveUrgency
// 0x0004 (FullSize[0x0050] - InheritedSize[0x004C])
class UFortBTContext_MoveUrgency : public UFortBTService_ContextOverride
{
public:
	TEnumAsByte<FortniteGame_EFortMovementUrgency>     MoveUrgency;                                               // 0x004C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OL2T[0x3];                                     // 0x004D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTContext_MoveUrgency");
		return ptr;
	}



};

// Class FortniteGame.FortBTContext_SuppressGoalUpdate
// 0x0004 (FullSize[0x0050] - InheritedSize[0x004C])
class UFortBTContext_SuppressGoalUpdate : public UFortBTService_ContextOverride
{
public:
	bool                                               bUnregisterFromGoalManager;                                // 0x004C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7EHC[0x3];                                     // 0x004D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTContext_SuppressGoalUpdate");
		return ptr;
	}



};

// Class FortniteGame.FortBTTask_ExecuteGameplayAbility
// 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
class UFortBTTask_ExecuteGameplayAbility : public UBTTask_PawnActionBase
{
public:
	struct FGameplayTagContainer                       GameplayAbilityTag;                                        // 0x0040(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTTask_ExecuteGameplayAbility");
		return ptr;
	}



};

// Class FortniteGame.FortBTTask_GameMoveDirectlyToward
// 0x0030 (FullSize[0x0098] - InheritedSize[0x0068])
class UFortBTTask_GameMoveDirectlyToward : public UBTTask_MoveDirectlyToward
{
public:
	struct FBlackboardKeySelector                      FocalPointWhileMoving;                                     // 0x0068(0x0020) (Edit, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EPathObstacleAction>      PathObstacleAction;                                        // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J28N[0x3];                                     // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bDetectUnexpectedPathBlockingObstacles : 1;                // 0x008C(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7J33[0x3];                                     // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EBumpIntoSleepingReaction> ActionOnBumpIntoSleeping;                                  // 0x0090(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8R3T[0x3];                                     // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PushBumpedPawnClass;                                       // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTTask_GameMoveDirectlyToward");
		return ptr;
	}



};

// Class FortniteGame.FortBTTask_GameMoveTo
// 0x0034 (FullSize[0x00A4] - InheritedSize[0x0070])
class UFortBTTask_GameMoveTo : public UBTTask_MoveTo
{
public:
	struct FBlackboardKeySelector                      FocalPointWhileMoving;                                     // 0x0070(0x0020) (Edit, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EPathObstacleAction>      PathObstacleAction;                                        // 0x0090(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U6WV[0x3];                                     // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bDetectUnexpectedPathBlockingObstacles : 1;                // 0x0094(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P8H3[0x3];                                     // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EBumpIntoSleepingReaction> ActionOnBumpIntoSleeping;                                  // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PFP4[0x3];                                     // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PushBumpedPawnClass;                                       // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bEnableSlowdownAtGoal : 1;                                 // 0x00A0(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bFinishMoveOnOverlap : 1;                                  // 0x00A0(0x0001) BIT_FIELD (Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FM29[0x3];                                     // 0x00A1(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTTask_GameMoveTo");
		return ptr;
	}



};

// Class FortniteGame.FortBTTask_RequestUndermining
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UFortBTTask_RequestUndermining : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTTask_RequestUndermining");
		return ptr;
	}



};

// Class FortniteGame.FortBTTask_SetFrustrationDiscouragement
// 0x0004 (FullSize[0x0044] - InheritedSize[0x0040])
class UFortBTTask_SetFrustrationDiscouragement : public UBTTaskNode
{
public:
	float                                              DiscouragementDuration;                                    // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTTask_SetFrustrationDiscouragement");
		return ptr;
	}



};

// Class FortniteGame.FortBTTask_TriggerVOEvent
// 0x0020 (FullSize[0x0060] - InheritedSize[0x0040])
class UFortBTTask_TriggerVOEvent : public UBTTaskNode
{
public:
	unsigned char                                      bUseFeedbackBank : 1;                                      // 0x0040(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9HGK[0x3];                                     // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     CustomEventName;                                           // 0x0044(0x000C) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     SelectedEvent;                                             // 0x0050(0x000C) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortFeedbackBank*                           FeedbackBank;                                              // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBTTask_TriggerVOEvent");
		return ptr;
	}



};

// Class FortniteGame.FortBuildingInstructions
// 0x003C (FullSize[0x0058] - InheritedSize[0x001C])
class UFortBuildingInstructions : public UDataAsset
{
public:
	struct FString                                     MapName;                                                   // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortBuildingInstruction>            Instructions;                                              // 0x0028(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, NativeAccessSpecifierPublic)
	struct FBoxSphereBounds                            Bounds;                                                    // 0x0034(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int                                                NumOfPiecesToSpawnAtOnce;                                  // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeBetweenSpawns;                                         // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortBuildingInstructions");
		return ptr;
	}



};

// Class FortniteGame.FortCameraBase
// 0x0030 (FullSize[0x0608] - InheritedSize[0x05D8])
class AFortCameraBase : public ACameraActor
{
public:
	float                                              MinDistanceToDrag;                                         // 0x05D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultFieldOfView;                                        // 0x05DC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    DefaultRotation;                                           // 0x05E0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     DefaultLocation;                                           // 0x05EC(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class AFortExhibitActor*                           ExhibitActor;                                              // 0x05F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bExhibitActorChanged;                                      // 0x05FC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y5NQ[0x3];                                     // 0x05FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   DownPosition;                                              // 0x0600(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCameraBase");
		return ptr;
	}



	void OnDragEnd();
	void OnDragBegin();
	void OnDeactivated();
	void OnActivated();
	void Exhibit(class AFortExhibitActor* TargetActor);
};

// Class FortniteGame.FortHomeBaseCamera
// 0x0000 (FullSize[0x0608] - InheritedSize[0x0608])
class AFortHomeBaseCamera : public AFortCameraBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHomeBaseCamera");
		return ptr;
	}



	void SetBuildingFocus(class UCameraComponent* BuildingCameraComponent);
	struct FVector LimitTo(const struct FVector& DesiredPosition, class APostProcessVolume* Volume);
	void ClearBuildingFocus();
};

// Class FortniteGame.FortTheaterCamera
// 0x0000 (FullSize[0x0608] - InheritedSize[0x0608])
class AFortTheaterCamera : public AFortCameraBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTheaterCamera");
		return ptr;
	}



	void SetTileFocus(class AFortTheaterMapTile* TargetTile);
	struct FVector LimitToTheater(const struct FVector& DesiredPosition);
};

// Class FortniteGame.FortCameraMode
// 0x0020 (FullSize[0x003C] - InheritedSize[0x001C])
class UFortCameraMode : public UObject
{
public:
	class AFortPlayerCameraBase*                       PlayerCamera;                                              // 0x001C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TransitionTime;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TransitionOutTime;                                         // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FViewTargetTransitionParams                 TransitionParams;                                          // 0x0028(0x0010) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	unsigned char                                      bResetInterpolation : 1;                                   // 0x0038(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C0TJ[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCameraMode");
		return ptr;
	}



};

// Class FortniteGame.FortMatchmaking
// 0x0244 (FullSize[0x0260] - InheritedSize[0x001C])
class UFortMatchmaking : public UObject
{
public:
	unsigned char                                      UnknownData_MJ7N[0x118];                                   // 0x001C(0x0118) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UQosEvaluator*                               QosEvaluator;                                              // 0x0134(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      ReservationBeaconClientClass;                              // 0x0138(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPartyBeaconClient*                      ReservationBeaconClient;                                   // 0x013C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortLobbyBeaconClient*                      LobbyBeaconClient;                                         // 0x0140(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_THH6[0xC];                                     // 0x0144(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ControllerId;                                              // 0x0150(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     TempZoneInstanceId;                                        // 0x0154(0x000C) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortCachedMatchmakingSearchParams          CachedMatchmakingSearchParams;                             // 0x0160(0x006C) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VU33[0x84];                                    // 0x01CC(0x0084) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortMatchmakingPolicy*                      Matchmaking;                                               // 0x0250(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     LastCriticalMissionSessionId;                              // 0x0254(0x000C) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMatchmaking");
		return ptr;
	}



};

// Class FortniteGame.FortMatchmakingCriticalMission
// 0x0008 (FullSize[0x00B0] - InheritedSize[0x00A8])
class UFortMatchmakingCriticalMission : public UFortMatchmakingPolicy
{
public:
	unsigned char                                      UnknownData_PJHO[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingCriticalMission");
		return ptr;
	}



};

// Class FortniteGame.FortMatchmakingGather
// 0x0010 (FullSize[0x00B8] - InheritedSize[0x00A8])
class UFortMatchmakingGather : public UFortMatchmakingPolicy
{
public:
	float                                              ChanceToJoinInProgress;                                    // 0x00A8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NXHD[0xC];                                     // 0x00AC(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingGather");
		return ptr;
	}



};

// Class FortniteGame.FortMatchmakingSingleSession
// 0x0020 (FullSize[0x00C8] - InheritedSize[0x00A8])
class UFortMatchmakingSingleSession : public UFortMatchmakingPolicy
{
public:
	struct FFortInviteSessionParams                    CurrentSessionParams;                                      // 0x00A8(0x001C) (Transient, NativeAccessSpecifierPrivate)
	class UFortSessionHelper*                          SessionHelper;                                             // 0x00C4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingSingleSession");
		return ptr;
	}



};

// Class FortniteGame.FortMcpProfileWorld
// 0x0068 (FullSize[0x0198] - InheritedSize[0x0130])
class UFortMcpProfileWorld : public UFortMcpProfile
{
public:
	struct FFortWorldPlayerLoadout                     CachedPlayerLoadout;                                       // 0x0130(0x0054) (Protected, NativeAccessSpecifierProtected)
	class AFortInventory*                              FortInventory;                                             // 0x0184(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortWorldProfileUpdateRequest>      UpdateRequests;                                            // 0x0188(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bPendingReset;                                             // 0x0194(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AEQ9[0x3];                                     // 0x0195(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileWorld");
		return ptr;
	}



	void MarkOutpostDefended(struct FDedicatedServerUrlContext* Context);
	void InitializeTheater(const struct FString& TheaterGuid, struct FDedicatedServerUrlContext* Context);
	void IncreaseOutpostPrestige(struct FDedicatedServerUrlContext* Context);
	void FabricateItem(const struct FString& TemplateId, struct FDedicatedServerUrlContext* Context);
	void DisintegrateItems(TArray<struct FString> itemsToDisintegrateIds, TArray<int> itemCountsToDisintegrate, struct FDedicatedServerUrlContext* Context);
	void DepositPostResources(TArray<struct FString> itemsToDepositIds, TArray<int> itemCountsToDeposit, struct FDedicatedServerUrlContext* Context);
	void CreateOrUpgradeOutpostItem(const struct FString& TemplateId, struct FDedicatedServerUrlContext* Context);
	void BatchUpdateInventory(const struct FMcpProfileChangeRequest& BatchUpdate, struct FDedicatedServerUrlContext* Context);
	void AbortDisintegration(struct FDedicatedServerUrlContext* Context);
};

// Class FortniteGame.FortMenuInputHelper
// 0x0040 (FullSize[0x005C] - InheritedSize[0x001C])
class UFortMenuInputHelper : public UObject
{
public:
	unsigned char                                      UnknownData_OUZ2[0x40];                                    // 0x001C(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMenuInputHelper");
		return ptr;
	}



};

// Class FortniteGame.FrontEndSettings
// 0x000C (FullSize[0x024C] - InheritedSize[0x0240])
class AFrontEndSettings : public AActor
{
public:
	TArray<struct FCameraPair>                         Cameras;                                                   // 0x0240(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FrontEndSettings");
		return ptr;
	}



};

// Class FortniteGame.HeartbeatManager
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UHeartbeatManager : public UObject
{
public:
	unsigned char                                      UnknownData_FW20[0xC];                                     // 0x001C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.HeartbeatManager");
		return ptr;
	}



};

// Class FortniteGame.HomeBaseBuilding
// 0x004C (FullSize[0x0068] - InheritedSize[0x001C])
class UHomeBaseBuilding : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnBuildingChanged;                                         // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBuildingUpgraded;                                        // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                Level;                                                     // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxLevel;                                                  // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMyTownBuildingDefinitionData*               Definition;                                                // 0x003C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K2ID[0x20];                                    // 0x0040(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UMyTownBuildingItem>          ItemWeakPtr;                                               // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.HomeBaseBuilding");
		return ptr;
	}



	void Upgrade();
	bool ShouldShowBang();
	void OnBuildingChangedInternal(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged);
	struct FBuildingUpgradeRequirementsForLevel GetUpgradeRequirements();
	int GetTeammatesRatingAddition(const struct FUniqueNetIdRepl& TeammatesAccountId);
	TArray<class UBuildingLevelGameplayEffectInfo*> GetNextBonuses();
	TArray<class UBuildingLevelGameplayEffectInfo*> GetMaxLevelBonuses();
	class UMyTownBuildingItem* GetItem();
	TArray<class UBuildingLevelGameplayEffectInfo*> GetCurrentBonuses();
	void GetAbilityKits(TArray<class UFortAbilityKit*>* AbilityKits);
	class UFortAbilityKit* GetAbilityKitForLevel(int InLevel);
	void ClearBang();
};

// Class FortniteGame.HomeBaseWorker
// 0x0024 (FullSize[0x0040] - InheritedSize[0x001C])
class UHomeBaseWorker : public UObject
{
public:
	struct FText                                       Name;                                                      // 0x001C(0x0018) ELEMENT_SIZE_MISMATCH (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int                                                Rating;                                                    // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHomeBaseMainBuilding*                       TargetBuilding;                                            // 0x002C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortWorker>                  WorkerItem;                                                // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UFortWorkerType*                             WorkerType;                                                // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EWorkerEmploy>            Employment;                                                // 0x003C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1USU[0x3];                                     // 0x003D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.HomeBaseWorker");
		return ptr;
	}



	class UFortWorker* GetWorkerItem();
};

// Class FortniteGame.HomeBaseWorkers
// 0x00A0 (FullSize[0x00BC] - InheritedSize[0x001C])
class UHomeBaseWorkers : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnWorkersChanged;                                          // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWorkerSlotted;                                           // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                Rating;                                                    // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HXPH[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UMyTownBuildingItem>          BuildingItem;                                              // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UHomeBaseMainBuilding*                       Building;                                                  // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X1VI[0x10];                                    // 0x004C(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UHomeBaseWorker*>                     Workers;                                                   // 0x005C(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UHomeBaseWorker*>                     Managers;                                                  // 0x0068(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FHomeBaseWorkerSlot>                 Slots;                                                     // 0x0074(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NBX1[0x3C];                                    // 0x0080(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.HomeBaseWorkers");
		return ptr;
	}



	void SlotWorker(class UHomeBaseWorker* Worker, int SlotIndex);
	void OnBuildingItemChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged);
	class UHomeBaseWorker* GetWorkerFromItem(class UFortWorker* WorkerItem);
	TArray<class UHomeBaseWorker*> GetSlottedWorkers();
	TArray<struct FHomeBaseWorkerSlot> GetSlots();
	TArray<class UHomeBaseWorker*> GetAllWorkers();
	TArray<class UHomeBaseWorker*> GetAllManagers();
	int CalculateTotalWorkerRatings(TArray<class UHomeBaseWorker*> Workers);
};

// Class FortniteGame.HomeBaseMainBuilding
// 0x0074 (FullSize[0x00DC] - InheritedSize[0x0068])
class UHomeBaseMainBuilding : public UHomeBaseBuilding
{
public:
	int                                                Rating;                                                    // 0x0068(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TeamRatingAddition;                                        // 0x006C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TotalTeamRating;                                           // 0x0070(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BaseRating;                                                // 0x0074(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHomeBaseWorkers*                            Workers;                                                   // 0x0078(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UHomeBaseBuilding*>                   SubBuildings;                                              // 0x007C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShouldShowChanged;                                       // 0x0088(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_USUK[0x48];                                    // 0x0094(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.HomeBaseMainBuilding");
		return ptr;
	}



	bool ShouldShow();
	void OnWorkersChangedInternal();
	void OnSubBuildingChanged();
	void OnShouldShowChanged__DelegateSignature();
	void OnBuildingGameplayEffectsChanged();
	TArray<class UAccumulatedGameplayEffectInfo*> GetEffects();
};

// Class FortniteGame.HomeBaseCommandCenterBuilding
// 0x000C (FullSize[0x00E8] - InheritedSize[0x00DC])
class UHomeBaseCommandCenterBuilding : public UHomeBaseMainBuilding
{
public:
	struct FScriptMulticastDelegate                    OnResourcesCollected;                                      // 0x00DC(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.HomeBaseCommandCenterBuilding");
		return ptr;
	}



	TArray<struct FHomeBaseProducedResources> GetProducedResources();
	void CollectProducedResources();
};

// Class FortniteGame.LevelTestingActorBase
// 0x0000 (FullSize[0x0240] - InheritedSize[0x0240])
class ALevelTestingActorBase : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.LevelTestingActorBase");
		return ptr;
	}



	struct FVector STATIC_ExtractSkeletalMeshScale(class UClass* BlueprintClass);
	class USkeletalMesh* STATIC_ExtractSkeletalMesh(class UClass* BlueprintClass);
};

// Class FortniteGame.ManorPortal
// 0x002C (FullSize[0x026C] - InheritedSize[0x0240])
class AManorPortal : public AActor
{
public:
	unsigned char                                      UnknownData_RFPM[0x2C];                                    // 0x0240(0x002C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.ManorPortal");
		return ptr;
	}



	void UnlockPortal(class AFortPlayerController* Player);
	void OpenUnlockMenu(class AFortPlayerController* Player);
	bool IsProfileValidToReadPortalAvailability(class AFortPlayerController* Player);
	bool IsPortalUnlocked(class AFortPlayerController* Player);
	int GetPlayerCurrencyAmount(class AFortPlayerController* Player);
	int GetCurrencyCost(class AFortPlayerController* Player);
	void BlueprintOnUnlockPortalComplete();
};

// Class FortniteGame.MovementComp_Tracer
// 0x0004 (FullSize[0x00D0] - InheritedSize[0x00CC])
class UMovementComp_Tracer : public UMovementComponent
{
public:
	float                                              Speed;                                                     // 0x00CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.MovementComp_Tracer");
		return ptr;
	}



};

// Class FortniteGame.MyTownActor
// 0x00B0 (FullSize[0x02F0] - InheritedSize[0x0240])
class AMyTownActor : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnMyTownInitialized;                                       // 0x0240(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownChanged;                                           // 0x024C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBuildingUpgradeStarted;                            // 0x0258(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBuildingUpgradeFinished;                           // 0x0264(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBannerColorChanged;                                // 0x0270(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBuildingWorkersChanged;                            // 0x027C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBuildingPanelOpened;                               // 0x0288(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBuildingPanelClosed;                               // 0x0294(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    MenuTransitionEvent;                                       // 0x02A0(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_62X8[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  FocusLimiterBoxRelativeTransform;                          // 0x02B0(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YCKJ[0xC];                                     // 0x02E0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               FocusLimiterBox;                                           // 0x02EC(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.MyTownActor");
		return ptr;
	}



};

// Class FortniteGame.MyTownBuildingActor
// 0x0098 (FullSize[0x02D8] - InheritedSize[0x0240])
class AMyTownBuildingActor : public AActor
{
public:
	class UStaticMeshComponent*                        BuildingMeshComponent;                                     // 0x0240(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                            CollisionComponent;                                        // 0x0244(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetComponent*                            TooltipComponent;                                          // 0x0248(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetComponent*                            CollectComponent;                                          // 0x024C(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnMyTownBuildingPanelOpened;                               // 0x0250(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBuildingPanelClosed;                               // 0x025C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBuildingWorkersChanged;                            // 0x0268(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBuildingUpgradeStarted;                            // 0x0274(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBuildingUpgradeFinished;                           // 0x0280(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMyTownBuildingStateChanged;                              // 0x028C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          UnbuiltMaterial;                                           // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ZoomScreenPosition;                                        // 0x029C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ZoomDistance;                                              // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     BuildingTemplateId;                                        // 0x02A8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortPersistentResources> ProducedResourceType;                                      // 0x02B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1JNI[0x3];                                     // 0x02B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ParentBuildingTemplateId;                                  // 0x02B8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsSubBuilding;                                            // 0x02C4(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CLIP[0x7];                                     // 0x02C5(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EMyTownBuildingActorDisplayState> PreferredDispayState;                                      // 0x02CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4GH7[0xB];                                     // 0x02CD(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.MyTownBuildingActor");
		return ptr;
	}



	bool ShouldShowBang();
	void SetCustomDisplayState(TEnumAsByte<FortniteGame_EMyTownBuildingActorDisplayState> NewDisplayState);
	void SetBuildingTemplateId(const struct FString& InBuildingTemplateId);
	void OnMyTownBuildingCustomDisplayChanged(TEnumAsByte<FortniteGame_EMyTownBuildingActorDisplayState> NewDisplayState);
	void OnMouseOverEnd();
	void OnMouseOverBegin();
	void OnBuildingClicked();
	TEnumAsByte<FortniteGame_EMyTownBuildingActorDisplayState> GetCustomDisplayState();
	TArray<class ABuildingActor*> GetCustomDisplayActors();
	bool CreateUMGCollectWidget(class UNativeWidgetHost* InNativeWidgetHost);
	void ApplyPreferredDisplayState();
};

// Class FortniteGame.Fort3PCameraMode
// 0x00D4 (FullSize[0x0110] - InheritedSize[0x003C])
class UFort3PCameraMode : public UFortCameraMode
{
public:
	struct FViewOffsetData                             ViewOffsets;                                               // 0x003C(0x0024) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                              FOV;                                                       // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     SafeLocationOffset;                                        // 0x0064(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bValidateSafeLoc : 1;                                      // 0x0070(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bDoPredictiveAvoidance : 1;                                // 0x0070(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bPreventPenetration : 1;                                   // 0x0070(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W2BC[0x3];                                     // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPenetrationAvoidanceFeeler>         PenetrationAvoidanceFeelers;                               // 0x0074(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              PenetrationBlendInTime;                                    // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PenetrationBlendOutTime;                                   // 0x0084(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     PivotLocInterpSpeed;                                       // 0x0088(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              PivotRotInterpSpeed;                                       // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FOVInterpSpeed;                                            // 0x0098(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ViewOffsetInterpSpeed;                                     // 0x009C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SafeLocationInterpSpeed;                                   // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LastActualViewOffset;                                      // 0x00A4(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                     LastIdealViewOffset;                                       // 0x00B0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              LastFOV;                                                   // 0x00BC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     LastSafeLocationLocal;                                     // 0x00C0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                     LastSafeLocation;                                          // 0x00CC(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              LastSafeLocBlockedPct;                                     // 0x00D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              LastPenetrationBlockedPct;                                 // 0x00DC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     LastActualPivotLoc;                                        // 0x00E0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRotator                                    LastActualPivotRot;                                        // 0x00EC(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                     LastIdealPivotLoc;                                         // 0x00F8(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRotator                                    LastIdealPivotRot;                                         // 0x0104(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.Fort3PCameraMode");
		return ptr;
	}



};

// Class FortniteGame.Fort3PCam_Default
// 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
class UFort3PCam_Default : public UFort3PCameraMode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.Fort3PCam_Default");
		return ptr;
	}



};

// Class FortniteGame.Fort3PCam_Targeting
// 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
class UFort3PCam_Targeting : public UFort3PCameraMode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.Fort3PCam_Targeting");
		return ptr;
	}



};

// Class FortniteGame.FortCameraMode_ThirdPerson
// 0x0078 (FullSize[0x00B4] - InheritedSize[0x003C])
class UFortCameraMode_ThirdPerson : public UFortCameraMode
{
public:
	float                                              FOV;                                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraSpaceForwardDistance;                                // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_ECameraOrigin>            CameraOrigin;                                              // 0x0044(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DXUS[0x3];                                     // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CameraOriginSocketName;                                    // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CameraOriginInterpSpeed;                                   // 0x0050(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FInterpOffset                               ViewTargetSpaceViewOffset;                                 // 0x005C(0x000C) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FInterpOffset                               CameraSpaceViewOffset;                                     // 0x0068(0x000C) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     LastCameraOrigin;                                          // 0x0074(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                                     CameraOriginLocalOffset;                                   // 0x0080(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              PenetrationBlendInTime;                                    // 0x008C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PenetrationBlendOutTime;                                   // 0x0090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPreventPenetration;                                       // 0x0094(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bDoPredictiveAvoidance;                                    // 0x0095(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YGD8[0x2];                                     // 0x0096(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CollisionPushOutDistance;                                  // 0x0098(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPenetrationAvoidanceFeeler>         PenetrationAvoidanceFeelers;                               // 0x009C(0x000C) (ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                              SafeLocToAimLineBlockedPct;                                // 0x00A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AimLineToDesiredPosBlockedPct;                             // 0x00AC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              LastDrawDebugTime;                                         // 0x00B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCameraMode_ThirdPerson");
		return ptr;
	}



};

// Class FortniteGame.FortCinematicCamera
// 0x0000 (FullSize[0x003C] - InheritedSize[0x003C])
class UFortCinematicCamera : public UFortCameraMode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCinematicCamera");
		return ptr;
	}



};

// Class FortniteGame.FortDeathCameraMode
// 0x001C (FullSize[0x0058] - InheritedSize[0x003C])
class UFortDeathCameraMode : public UFortCameraMode
{
public:
	float                                              FOV;                                                       // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToTrackTarget;                                         // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TrackToTargetSpeed;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6NWD[0x10];                                    // 0x0048(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDeathCameraMode");
		return ptr;
	}



};

// Class FortniteGame.FortCarriedObjectInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortCarriedObjectInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCarriedObjectInterface");
		return ptr;
	}



};

// Class FortniteGame.FortFlag
// 0x0008 (FullSize[0x0368] - InheritedSize[0x0360])
class AFortFlag : public AFortCarriedObject
{
public:
	class UStaticMeshComponent*                        FlagMeshComp;                                              // 0x0360(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCapsuleComponent*                           CollisionComp;                                             // 0x0364(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortFlag");
		return ptr;
	}



};

// Class FortniteGame.FortDamageNumbersActor
// 0x0064 (FullSize[0x02A4] - InheritedSize[0x0240])
class AFortDamageNumbersActor : public AFortClientOnlyActor
{
public:
	float                                              ComponentLifespan;                                         // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                                 MeshesByElement[0x4];                                      // 0x0244(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                                 CritBuildingImpactMesh;                                    // 0x0254(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPooledDamageNumberComponents               PooledComponentsByElement[0x4];                            // 0x0258(0x0030) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FPooledDamageNumberComponents               PooledComponentsCritBuildingImpact;                        // 0x0288(0x000C) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLiveDamageNumberComponent>          LiveComponents;                                            // 0x0294(0x000C) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KIAV[0x4];                                     // 0x02A0(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDamageNumbersActor");
		return ptr;
	}



	void OnNewDamageNumber(const struct FFortDamageNumberInfo& NewDamageNumberInfo);
};

// Class FortniteGame.FortCombatManager
// 0x0704 (FullSize[0x0944] - InheritedSize[0x0240])
class AFortCombatManager : public AActor
{
public:
	unsigned char                                      UnknownData_59YV[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReplicatedCombatEventHeat[0x16];                           // 0x0244(0x0058) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CombatEventHeat[0x16];                                     // 0x029C(0x0058) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CombatFactors[0xC];                                        // 0x02F4(0x0030) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentTotalHeat;                                          // 0x0324(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumTotalHeat;                                          // 0x0328(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxHeatEver;                                               // 0x032C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2SUU[0x10];                                    // 0x0330(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCombatEventData                            Events[0x16];                                              // 0x0340(0x0370) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCombatFactorData                           Factors[0xC];                                              // 0x06B0(0x0210) (Edit, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R6QX[0x4];                                     // 0x08C0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCombatThresholdData                        Thresholds[0x4];                                           // 0x08C4(0x0080) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCombatManager");
		return ptr;
	}



	void OnThresholdChange(TEnumAsByte<FortniteGame_EFortCombatThresholds> OldThreshold, TEnumAsByte<FortniteGame_EFortCombatThresholds> NewThreshold);
	void OnRep_CombatEventHeat();
	float GetEventHeatPercentTotal(TEnumAsByte<FortniteGame_EFortCombatEvents> CombatEvent);
	float GetEventHeatPercent(TEnumAsByte<FortniteGame_EFortCombatEvents> CombatEvent);
	float GetCurrentMaxHeatPercent();
	float GetCombatFactorValue(TEnumAsByte<FortniteGame_EFortCombatFactors> CombatFactor);
};

// Class FortniteGame.FortCombinedInventoryProxy
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortCombinedInventoryProxy : public UObject
{
public:
	unsigned char                                      UnknownData_X6IH[0x4];                                     // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortInventory*                              WorldInventory;                                            // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortInventory*                              SharedInventory;                                           // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCombinedInventoryProxy");
		return ptr;
	}



};

// Class FortniteGame.FortConsole
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UFortConsole : public UConsole
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortConsole");
		return ptr;
	}



};

// Class FortniteGame.FortCrowdManager
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UFortCrowdManager : public UCrowdManager
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCrowdManager");
		return ptr;
	}



};

// Class FortniteGame.FortDayNightLightingAndFog
// 0x06F0 (FullSize[0x0930] - InheritedSize[0x0240])
class AFortDayNightLightingAndFog : public AInfo
{
public:
	unsigned char                                      UnknownData_DMR2[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeOfDay;                                                 // 0x0244(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeOfDayReplicated;                                       // 0x0248(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortDayPhase>            CurrentDayNightPhase;                                      // 0x024C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortDayPhase>            TransitionFromPhase;                                       // 0x024D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortDayPhase>            TransitionToPhase;                                         // 0x024E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UJRC[0x1];                                     // 0x024F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TransitionBlendPercent;                                    // 0x0250(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultTimeOfDaySpeed;                                     // 0x0254(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartTimeOfDayInGame;                                      // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeOfDaySpeed;                                            // 0x025C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTimeOfDayAccumulationFactor;                            // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeOfDayAccumulator;                                      // 0x0264(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          BasePostProcessMaterial;                                   // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    PostProcessMaterialMID;                                    // 0x026C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bSkipNight : 1;                                            // 0x0270(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bHasClonedPPVs : 1;                                        // 0x0270(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bTimeStarted : 1;                                          // 0x0270(0x0001) BIT_FIELD (Net, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bHeightFogEnabled : 1;                                     // 0x0270(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0XXH[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    SunriseDirectionalLightRotation;                           // 0x0274(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    SunsetDirectionalLightRotation;                            // 0x0280(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    DirectionalLightRotation;                                  // 0x028C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    SunriseSunObjectRotation;                                  // 0x0298(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    SunsetSunObjectRotation;                                   // 0x02A4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              SunObjectDivergencePower;                                  // 0x02B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceToSunOrMoon;                                       // 0x02B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDirectionalLightComponent*                  DirectionalLightComponent;                                 // 0x02B8(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExponentialHeightFogComponent*              ActiveHeightFogComponent;                                  // 0x02BC(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortDayPhaseChangeParams*                   DayPhaseChangeEventParams;                                 // 0x02C0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnDayPhaseChangeEvent;                                     // 0x02C4(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDayPhaseInfo                               LightAndFogPhaseSettings[0x4];                             // 0x02D0(0x0530) (Edit, NativeAccessSpecifierPublic)
	class APostProcessVolume*                          ZoomPostProcessVolume;                                     // 0x0800(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExponentialHeightFogValues                 CurrentTimeOfDayFogValues;                                 // 0x0804(0x0038) (BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                                CurrentTimeOfDayDirectionalLightColor;                     // 0x083C(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*                MaterialParameterCollection;                               // 0x084C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RainParticleSystemRelativeOffset;                          // 0x0850(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 SunMesh;                                                   // 0x085C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 MoonMesh;                                                  // 0x0860(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>                  SunMaterialOverrides;                                      // 0x0864(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>                  MoonMaterialOverrides;                                     // 0x0870(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              SunScale;                                                  // 0x087C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoonScale;                                                 // 0x0880(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          StarMapMaterial;                                           // 0x0884(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                           StormMaterialInst;                                         // 0x0888(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  CloudMaskTexture;                                          // 0x088C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExponentialHeightFogValues                 StormFogValues;                                            // 0x0890(0x0038) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                                LightningColor;                                            // 0x08C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                StormLightColor;                                           // 0x08D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class USkyLightComponent*                          SkyLightComp;                                              // 0x08E8(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    RainParticleSystemComp;                                    // 0x08EC(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        SunOrMoonMeshComp;                                         // 0x08F0(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        SkyDomeMeshComp;                                           // 0x08F4(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        StarMapMeshComp;                                           // 0x08F8(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    ActiveSkyBoxMat;                                           // 0x08FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    StarMapMID;                                                // 0x0900(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_13KZ[0x2C];                                    // 0x0904(0x002C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDayNightLightingAndFog");
		return ptr;
	}



	void ToggleSkipNight();
	void ToggleDebugForceStormEffects();
	void SetTimeOfDaySpeedFloat(float InTimeOfDaySpeed);
	void SetTimeOfDaySpeed(float TimeOfDaySpeedFactor);
	void SetTimeOfDayInHours(float TimeOfDayInHours);
	void SetTimeOfDayFloat(float TimeOfDayInHours);
	void SetTimeOfDayAbsoluteSpeed(float NewTimeOfDaySpeed);
	void SetTimeOfDay(const struct FString& NewTimeOfDay);
	void SetStormStrength(float NewStormStrength);
	void SetLightningColorAlpha(float NewLightningColorAlpha);
	void SetFogDirectionalInscatteringMultiplier(float NewFogDirectionalInscatteringMultiplier);
	void SetDirectionalLightColorMultiplier(float NewDirectionalLightColorMultiplier);
	void SetDayPhase(const struct FString& DayPhase);
	void OnUpdateHeightFogForTimeOfDay(const struct FExponentialHeightFogValues& AboutToApplyFogValues);
	void OnUpdateDirectionalLightForTimeOfDay(const struct FLinearColor& AboutToApplyDirectionalLightColor);
	void OnStormStart();
	void OnStormEnd();
	void OnRep_TimeOfDayInit();
	void OnRep_TimeOfDay();
	void OnRep_HeightFogEnabled();
	void OnDayPhaseChange();
	struct FExponentialHeightFogValues STATIC_MakeExponentialHeightFogValues(float FogDensity, float FogHeightFalloff, float FogMaxOpacity, float StartDistance, float DirectionalInscatteringExponent, float DirectionalInscatteringStartDistance, const struct FLinearColor& DirectionalInscatteringColor, const struct FLinearColor& FogInscatteringColor);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
	float GetStormStrength();
	TEnumAsByte<FortniteGame_EFortDayPhase> GetPreviousDayPhase();
	struct FString GetDayPhaseStartAnnouncementString();
	void FFToTimeOfDay(float FastForwardTime, float FastForwardSpeed);
	void STATIC_BreakExponentialHeightFogValues(const struct FExponentialHeightFogValues& HeightFogValues, float* FogDensity, float* FogHeightFalloff, float* FogMaxOpacity, float* StartDistance, float* DirectionalInscatteringExponent, float* DirectionalInscatteringStartDistance, struct FLinearColor* DirectionalInscatteringColor, struct FLinearColor* FogInscatteringColor);
};

// Class FortniteGame.FortDecoHelper
// 0x0140 (FullSize[0x0380] - InheritedSize[0x0240])
class AFortDecoHelper : public AActor
{
public:
	class AFortDecoPreview*                            DecoPreview;                                               // 0x0240(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      PlacementActorClass;                                       // 0x0244(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortDecoTool>                DecoTool;                                                  // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                              DecoToolReach;                                             // 0x0250(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DecoToolFallbackReach;                                     // 0x0254(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EBuildingAttachmentType>  CurrentAttachmentType;                                     // 0x0258(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EPlacementType>           CurrentPlacementType;                                      // 0x0259(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HITQ[0x2];                                     // 0x025A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortDecoItemDefinition*                     DecoItemDefinition;                                        // 0x025C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LocationData[0x2];                                         // 0x0260(0x0018) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    RelativeRotationData[0x2];                                 // 0x0278(0x0018) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    AbsoluteRotationData[0x2];                                 // 0x0290(0x0018) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              ScaleData[0x2];                                            // 0x02A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDecoPlacementState                         PlacementInfo;                                             // 0x02B0(0x0080) (Protected, NativeAccessSpecifierProtected)
	bool                                               bInFallbackPosition;                                       // 0x0330(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HNDV[0x3];                                     // 0x0331(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FallbackTinyScale;                                         // 0x0334(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortDecoPlacementQueryResults> CanPlaceState;                                             // 0x0338(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9TGN[0x3];                                     // 0x0339(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       CustomPlacementText;                                       // 0x033C(0x0018) ELEMENT_SIZE_MISMATCH (BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                              DesiredRelativeRotation;                                   // 0x0348(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     DirectionChange;                                           // 0x034C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              GridSnapSize;                                              // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    FreeFloorPlacementRelativeRotationOffset;                  // 0x035C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_93R3[0x18];                                    // 0x0368(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDecoHelper");
		return ptr;
	}



};

// Class FortniteGame.FortDecoPreview
// 0x011C (FullSize[0x035C] - InheritedSize[0x0240])
class AFortDecoPreview : public AActor
{
public:
	TEnumAsByte<FortniteGame_EBuildingAttachmentType>  FallbackAttachmentType;                                    // 0x0240(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EPlacementType>           FallbackPlacementType;                                     // 0x0241(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z2HW[0x2];                                     // 0x0242(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TAssetPtr<class UMaterialInterface>                PreviewPlacementMaterial;                                  // 0x0244(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UCurveFloat>                       MotionBounceCurve;                                         // 0x025C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CanBePlacedMaterialScalarParam;                            // 0x0274(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ValidPlacementScalarParam;                                 // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InvalidPlacementScalarParam;                               // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       InverseMovementVectorMaterialParam;                        // 0x0284(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementEffectScale;                                       // 0x028C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       InverseOuterScaleVectorParam;                              // 0x0290(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       InverseInnerScaleVectorParam;                              // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       WorldSpacePivotVectorParam;                                // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       DiffuseTextureParam;                                       // 0x02A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FreePlacementOffset;                                       // 0x02B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                                   BounceTimeline;                                            // 0x02B4(0x0080) (ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>            PreviewMIDs;                                               // 0x0334(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     DirectionChange;                                           // 0x0340(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     WorldSpacePivot;                                           // 0x034C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class AFortDecoHelper*                             ParentDecoHelper;                                          // 0x0358(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDecoPreview");
		return ptr;
	}



	void SetVectorParameterValueOnAllPreviewMIDs(const struct FName& ParamName, const struct FLinearColor& ParamValue);
	void SetScalarParameterValueOnAllPreviewMIDs(const struct FName& ParamName, float ParamValue);
	void SetDiffuseTextureParameterOnMID(class UMaterialInstanceDynamic* Mid, class UTexture* Texture);
	void OnUpdateVisuals(float DeltaSeconds, bool bSafeToPlace);
	void OnUpdateScale(float Scale, const struct FVector& InWorldSpacePivot);
	void OnInitializeDecoPreview(class ABuildingActor* NewBuildingActor, class UFortDecoItemDefinition* NewDecoItemDefinition);
	void OnBounceMotionUpdate(float VectorScale);
	class UTexture* GetTextureParameterValueFromMeshComponent(class UMeshComponent* MeshComp, int ElementIdx, const struct FName& ParamName);
	class UMaterialInstanceDynamic* CreatePreviewMID(class UMaterialInterface* OverrideParentMaterial);
};

// Class FortniteGame.FortDecoPreview_ComponentHarvester
// 0x0000 (FullSize[0x035C] - InheritedSize[0x035C])
class AFortDecoPreview_ComponentHarvester : public AFortDecoPreview
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDecoPreview_ComponentHarvester");
		return ptr;
	}



};

// Class FortniteGame.FortDecoPreview_MeshHarvester
// 0x0000 (FullSize[0x035C] - InheritedSize[0x035C])
class AFortDecoPreview_MeshHarvester : public AFortDecoPreview_ComponentHarvester
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDecoPreview_MeshHarvester");
		return ptr;
	}



};

// Class FortniteGame.FortDecoPreview_GenericBuildingSMActor
// 0x0004 (FullSize[0x0360] - InheritedSize[0x035C])
class AFortDecoPreview_GenericBuildingSMActor : public AFortDecoPreview
{
public:
	class UStaticMeshComponent*                        PrimaryMeshComponent;                                      // 0x035C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDecoPreview_GenericBuildingSMActor");
		return ptr;
	}



};

// Class FortniteGame.FortDecoPreview_GenericTrap
// 0x0004 (FullSize[0x0364] - InheritedSize[0x0360])
class AFortDecoPreview_GenericTrap : public AFortDecoPreview_GenericBuildingSMActor
{
public:
	class UStaticMeshComponent*                        TrapRangeMeshComponent;                                    // 0x0360(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDecoPreview_GenericTrap");
		return ptr;
	}



};

// Class FortniteGame.FortTrackPreview
// 0x0054 (FullSize[0x03B0] - InheritedSize[0x035C])
class AFortTrackPreview : public AFortDecoPreview
{
public:
	struct FTrackMeshTrackPieceTypeConfig              MeshesByTrackPieceType[0x3];                               // 0x035C(0x0048) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              CellSize;                                                  // 0x03A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        TrackMeshComp1;                                            // 0x03A8(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        TrackMeshComp2;                                            // 0x03AC(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTrackPreview");
		return ptr;
	}



	void InitializeTrackPreview(class UStaticMeshComponent* InTrackMeshComp1, class UStaticMeshComponent* InTrackMeshComp2);
};

// Class FortniteGame.FortDifficultyOptionEncounter_Breathers
// 0x0028 (FullSize[0x0054] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_Breathers : public UFortDifficultyOptionEncounter
{
public:
	bool                                               bUseBreathers;                                             // 0x002C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RV4F[0x3];                                     // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCurveTableRowHandle                        LowPlayerPerformanceBreatherTimeSecondsCurve;              // 0x0030(0x000C) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        NormalPlayerPerformanceBreatherTimeSecondsCurve;           // 0x003C(0x000C) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        HighPlayerPerformanceBreatherTimeSecondsCurve;             // 0x0048(0x000C) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_Breathers");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_DirectionChange
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_DirectionChange : public UFortDifficultyOptionEncounter
{
public:
	bool                                               bChangeDirectionsOnRest;                                   // 0x002C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5M2X[0x3];                                     // 0x002D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_DirectionChange");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_DirectionNumber
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_DirectionNumber : public UFortDifficultyOptionEncounter
{
public:
	int                                                NumberOfDirections;                                        // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_DirectionNumber");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_Distance
// 0x0008 (FullSize[0x0034] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_Distance : public UFortDifficultyOptionEncounter
{
public:
	float                                              MinSpawnDistance;                                          // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpawnDistance;                                          // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_Distance");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_IntensityCurveSequence
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_IntensityCurveSequence : public UFortDifficultyOptionEncounter
{
public:
	class UFortIntensityCurveSequence*                 CurveSequence;                                             // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_IntensityCurveSequence");
		return ptr;
	}



};

// Class FortniteGame.FortCardPackItem
// 0x000C (FullSize[0x008C] - InheritedSize[0x0080])
class UFortCardPackItem : public UFortAccountItem
{
public:
	TArray<struct FMcpLootEntry>                       Options;                                                   // 0x0080(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCardPackItem");
		return ptr;
	}



};

// Class FortniteGame.FortCharacterCosmeticItemDefinition
// 0x0018 (FullSize[0x0448] - InheritedSize[0x0430])
class UFortCharacterCosmeticItemDefinition : public UFortAccountItemDefinition
{
public:
	TEnumAsByte<FortniteGame_EFortCharacterCosmetic>   Cosmetic_Type;                                             // 0x0430(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8WNP[0x3];                                     // 0x0431(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UFortHeroType*>                       Hero_Types_Allowed;                                        // 0x0434(0x000C) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               bModifyColor;                                              // 0x0440(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GQEM[0x3];                                     // 0x0441(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCustomColorSwatch*                          ColorAlteration;                                           // 0x0444(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCharacterCosmeticItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortCharacterCosmeticItem
// 0x000C (FullSize[0x008C] - InheritedSize[0x0080])
class UFortCharacterCosmeticItem : public UFortAccountItem
{
public:
	struct FString                                     Equipped_Character_Id;                                     // 0x0080(0x000C) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCharacterCosmeticItem");
		return ptr;
	}



};

// Class FortniteGame.FortCurrencyItemDefinition
// 0x0000 (FullSize[0x0430] - InheritedSize[0x0430])
class UFortCurrencyItemDefinition : public UFortAccountItemDefinition
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCurrencyItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortCurrencyItem
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UFortCurrencyItem : public UFortAccountItem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCurrencyItem");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_ModifierTags
// 0x0018 (FullSize[0x0044] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_ModifierTags : public UFortDifficultyOptionEncounter
{
public:
	struct FGameplayTagContainer                       ModifierTags;                                              // 0x002C(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_ModifierTags");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_PawnNumberCap
// 0x0010 (FullSize[0x003C] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_PawnNumberCap : public UFortDifficultyOptionEncounter
{
public:
	struct FFortEncounterPawnNumberCaps                PawnCapsPerPlayerCount;                                    // 0x002C(0x0010) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_PawnNumberCap");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_SpawnGroupProgression
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_SpawnGroupProgression : public UFortDifficultyOptionEncounter
{
public:
	class UFortAISpawnGroupProgressionInfo*            SpawnGroupProgression;                                     // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnGroupProgression");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPawns
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_SpawnLimitPawns : public UFortDifficultyOptionEncounter
{
public:
	int                                                PawnNumberLimit;                                           // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPawns");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPoints
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_SpawnLimitPoints : public UFortDifficultyOptionEncounter
{
public:
	float                                              SpawnPointsPercentageLimit;                                // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPoints");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsBurst
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_SpawnPointsBurst : public UFortDifficultyOptionEncounter
{
public:
	float                                              BurstSpawnPointsPercentage;                                // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsBurst");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsCurve
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_SpawnPointsCurve : public UFortDifficultyOptionEncounter
{
public:
	class UFortSpawnPointsPercentageCurveSequence*     CurveSequence;                                             // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsCurve");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsMultiplier
// 0x0008 (FullSize[0x0034] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_SpawnPointsMultiplier : public UFortDifficultyOptionEncounter
{
public:
	struct FFloatInterval                              MultiplierRange;                                           // 0x002C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsMultiplier");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_Time
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_Time : public UFortDifficultyOptionEncounter
{
public:
	float                                              EncounterTimeSeconds;                                      // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_Time");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesAdjustment
// 0x0004 (FullSize[0x0030] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_UtilitiesAdjustment : public UFortDifficultyOptionEncounter
{
public:
	float                                              UtilitiesAdjustmentIntervalSeconds;                        // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesAdjustment");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesLocked
// 0x000C (FullSize[0x0038] - InheritedSize[0x002C])
class UFortDifficultyOptionEncounter_UtilitiesLocked : public UFortDifficultyOptionEncounter
{
public:
	TArray<struct FFortEncounterLockedUtility>         LockedUtilities;                                           // 0x002C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesLocked");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionMission
// 0x0000 (FullSize[0x002C] - InheritedSize[0x002C])
class UFortDifficultyOptionMission : public UFortDifficultyOption
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionMission");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter
// 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter : public UFortDifficultyOptionCategory
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Breathers
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_Breathers : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_Breathers");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionChange
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_DirectionChange : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionChange");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionNumber
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_DirectionNumber : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionNumber");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Distance
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_Distance : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_Distance");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_IntensityCurveSequence
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_IntensityCurveSequence : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_IntensityCurveSequence");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_ModifierTags
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_ModifierTags : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_ModifierTags");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_PawnNumberCap
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_PawnNumberCap : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_PawnNumberCap");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnGroupProgression
// 0x0004 (FullSize[0x0024] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_SpawnGroupProgression : public UFortDifficultyOptionCategoryEncounter
{
public:
	class UClass*                                      SpawnGroupProgression;                                     // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnGroupProgression");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPawns
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_SpawnLimitPawns : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPawns");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPoints
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_SpawnLimitPoints : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPoints");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsBurst
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_SpawnPointsBurst : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsBurst");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsCurve
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_SpawnPointsCurve : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsCurve");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Time
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_Time : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_Time");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesAdjustment
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_UtilitiesAdjustment : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesAdjustment");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesFree
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_UtilitiesFree : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesFree");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesLocked
// 0x000C (FullSize[0x002C] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryEncounter_UtilitiesLocked : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                   // 0x0020(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesLocked");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionCategoryMission
// 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
class UFortDifficultyOptionCategoryMission : public UFortDifficultyOptionCategory
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryMission");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionSetEncounter
// 0x0054 (FullSize[0x0070] - InheritedSize[0x001C])
class UFortDifficultyOptionSetEncounter : public UDataAsset
{
public:
	TEnumAsByte<FortniteGame_EFortEncounterPacingMode> PacingMode;                                                // 0x001C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3XBY[0x3];                                     // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortDifficultyOptionCategoryEncounter_IntensityCurveSequence* IntensityCurveSequenceCategory;                            // 0x0020(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsCurve* SpawnPointsPercentageCurveSequenceCategory;                // 0x0024(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsBurst* SpawnPointsBurstCategory;                                  // 0x0028(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_Breathers* BreathersCategory;                                         // 0x002C(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier* SpawnPointsMultiplierCategory;                             // 0x0030(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_PawnNumberCap* PawnNumberCapCategory;                                     // 0x0034(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortEncounterSpawnLimitType> SpawnLimitMode;                                            // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HARV[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortDifficultyOptionCategoryEncounter_SpawnLimitPoints* SpawnPointsLimitCategory;                                  // 0x003C(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnLimitPawns* PawnLimitCategory;                                         // 0x0040(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortEncounterUtilitiesMode> UtilitiesMode;                                             // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TYYV[0x3];                                     // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortDifficultyOptionCategoryEncounter_UtilitiesLocked* LockedUtilitiesCategory;                                   // 0x0048(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_UtilitiesFree* FreeUtilitiesCategory;                                     // 0x004C(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_UtilitiesAdjustment* UtilitiesAdjustmentCategory;                               // 0x0050(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortEncounterSpawnLocationPlacementMode> SpawnLocationPlacementMode;                                // 0x0054(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E5LF[0x3];                                     // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortDifficultyOptionCategoryEncounter_DirectionNumber* DirectionNumberCategory;                                   // 0x0058(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_DirectionChange* DirectionChangeCategory;                                   // 0x005C(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_Distance* DistanceCategory;                                          // 0x0060(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnGroupProgression* SpawnGroupProgressionCategory;                             // 0x0064(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_Time* TimeCategory;                                              // 0x0068(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_ModifierTags* OptionalModifierTagsCategory;                              // 0x006C(0x0004) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionSetEncounter");
		return ptr;
	}



};

// Class FortniteGame.FortDifficultyOptionSetMission
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortDifficultyOptionSetMission : public UDataAsset
{
public:
	TArray<class UFortDifficultyOptionCategoryMission*> MissionOptionsCategories;                                  // 0x001C(0x000C) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionSetMission");
		return ptr;
	}



};

// Class FortniteGame.FortDynamicBuildingDeconstructor
// 0x0048 (FullSize[0x0288] - InheritedSize[0x0240])
class AFortDynamicBuildingDeconstructor : public AActor
{
public:
	struct FBoxSphereBounds                            Bounds;                                                    // 0x0240(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bDebugDrawBounds;                                          // 0x025C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bSelectiveDestruction;                                     // 0x025D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIgnoreMissionActors;                                      // 0x025E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bShrinkAndDestroyEffect;                                   // 0x025F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int                                                NumOfPiecesToDestroyAtOnce;                                // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeBetweenChunks;                                         // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class ABuildingSMActor>>     SortedBuildingActors;                                      // 0x0268(0x000C) (ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	int                                                CurrentIndex;                                              // 0x0274(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_18SQ[0x10];                                    // 0x0278(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDynamicBuildingDeconstructor");
		return ptr;
	}



};

// Class FortniteGame.FortEmitterCameraLensEffectDirectional
// 0x0014 (FullSize[0x02F0] - InheritedSize[0x02DC])
class AFortEmitterCameraLensEffectDirectional : public AEmitterCameraLensEffectBase
{
public:
	struct FVector                                     DamageInstigatorLocation;                                  // 0x02DC(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BNQO[0x8];                                     // 0x02E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortEmitterCameraLensEffectDirectional");
		return ptr;
	}



};

// Class FortniteGame.FortEngine
// 0x0000 (FullSize[0x0784] - InheritedSize[0x0784])
class UFortEngine : public UGameEngine
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortEngine");
		return ptr;
	}



};

// Class FortniteGame.FortEventNotificationBank
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortEventNotificationBank : public UDataAsset
{
public:
	TArray<struct FFortEventNotification>              EventNotifications;                                        // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortEventNotificationBank");
		return ptr;
	}



};

// Class FortniteGame.FortExhibitActor
// 0x0034 (FullSize[0x0274] - InheritedSize[0x0240])
class AFortExhibitActor : public AActor
{
public:
	struct FTransform                                  CameraOffset;                                              // 0x0240(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              CameraFOV;                                                 // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortExhibitActor");
		return ptr;
	}



};

// Class FortniteGame.FortHeroExhibitActor
// 0x000C (FullSize[0x0280] - InheritedSize[0x0274])
class AFortHeroExhibitActor : public AFortExhibitActor
{
public:
	unsigned char                                      UnknownData_RB4R[0xC];                                     // 0x0274(0x000C) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHeroExhibitActor");
		return ptr;
	}



};

// Class FortniteGame.FortItemExhibitActor
// 0x001C (FullSize[0x0290] - InheritedSize[0x0274])
class AFortItemExhibitActor : public AFortExhibitActor
{
public:
	struct FString                                     ItemInstanceId;                                            // 0x0274(0x000C) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPickup*                                 ExhibitItem;                                               // 0x0280(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YTUQ[0xC];                                     // 0x0284(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortItemExhibitActor");
		return ptr;
	}



};

// Class FortniteGame.FortFastLoadConfig
// 0x0004 (FullSize[0x0020] - InheritedSize[0x001C])
class UFortFastLoadConfig : public UObject
{
public:
	unsigned char                                      bDisableStreamInBuildings : 1;                             // 0x001C(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      bDisableStartupAIDirector : 1;                             // 0x001C(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      bDisableNonDefaultFakeHeroesAtStartup : 1;                 // 0x001C(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      bDisableUpgradePlayerBuildingClasses : 1;                  // 0x001C(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      bUseMinimalPlayerBuildingClasses : 1;                      // 0x001C(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      bDisableStartingMissions : 1;                              // 0x001C(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      bUseFastLoadDefaultInventory : 1;                          // 0x001C(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      bDisableNavAgentCostData : 1;                              // 0x001C(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      bDisableThreatVisualsManager : 1;                          // 0x001D(0x0001) BIT_FIELD (Config, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GXIR[0x2];                                     // 0x001E(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortFastLoadConfig");
		return ptr;
	}



};

// Class FortniteGame.FortWorldItemDefinitionTooltip
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UFortWorldItemDefinitionTooltip : public UFortItemDefinitionTooltip
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWorldItemDefinitionTooltip");
		return ptr;
	}



	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FText* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
};

// Class FortniteGame.FortGadgetItemDefinitionTooltip
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UFortGadgetItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGadgetItemDefinitionTooltip");
		return ptr;
	}



	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FText* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FName& Token, struct FText* OutText);
};

// Class FortniteGame.FortTracerBase
// 0x0064 (FullSize[0x02A4] - InheritedSize[0x0240])
class AFortTracerBase : public AActor
{
public:
	class UMovementComp_Tracer*                        TracerMovementComponent;                                   // 0x0240(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        TracerMesh;                                                // 0x0244(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCurveTableRowHandle                        Speed;                                                     // 0x0248(0x000C) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector                                     MeshScaleMult;                                             // 0x0254(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MeshScaleTime;                                             // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bScaleOnDeath;                                             // 0x0264(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B4R5[0x3];                                     // 0x0265(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TracerDistance;                                            // 0x0268(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     Destination;                                               // 0x026C(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VB9Z[0x2C];                                    // 0x0278(0x002C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTracerBase");
		return ptr;
	}



	void OnRep_TracerDistance();
	void OnInitTracerDistance(float Distance);
	void Init(const struct FVector& Start, const struct FVector& End);
};

// Class FortniteGame.FortTrackMovementComponent
// 0x007C (FullSize[0x0148] - InheritedSize[0x00CC])
class UFortTrackMovementComponent : public UMovementComponent
{
public:
	struct FVector                                     TrackSnapExtent;                                           // 0x00CC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     TurnSpeed;                                                 // 0x00D8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              SplineLocationOffsetZ;                                     // 0x00E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DiscoverSplineFrequency;                                   // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrackVelocity;                                             // 0x00EC(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReverseYawWhenReversedOnSpline;                           // 0x00F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LJ3E[0x3];                                     // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnOutOfTrack;                                              // 0x00F4(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLostTrack;                                               // 0x0100(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTrackMovement                              TrackMovement;                                             // 0x010C(0x000C) (Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FRepTrackMovement                           ReplicatedTrackMovement;                                   // 0x0118(0x0010) (Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BYOU[0x10];                                    // 0x0128(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ClientPredictionSpeedModifier;                             // 0x0138(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EIPP[0xC];                                     // 0x013C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTrackMovementComponent");
		return ptr;
	}



	void OnRep_ReplicatedTrackMovement();
	bool IsReverseDirection();
	class AFortTrack* GetTrack();
	class USplineComponent* GetSpline();
	float GetDistanceAlongSpline();
	void FlipDirection();
};

// Class FortniteGame.FortUIBaseClass
// 0x005C (FullSize[0x0350] - InheritedSize[0x02F4])
class AFortUIBaseClass : public AHUD
{
public:
	unsigned char                                      UnknownData_CC3A[0x5C];                                    // 0x02F4(0x005C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortUIBaseClass");
		return ptr;
	}



	void TutorialToggleHUD();
};

// Class FortniteGame.FortUIZone
// 0x01D0 (FullSize[0x0520] - InheritedSize[0x0350])
class AFortUIZone : public AFortUIBaseClass
{
public:
	struct FFontRenderInfo                             TextRenderInfo;                                            // 0x0350(0x0028) (NativeAccessSpecifierPublic)
	class UReporterGraph*                              CombatGraph;                                               // 0x0378(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                              FactorGraph;                                               // 0x037C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                              IntensityGraph;                                            // 0x0380(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                              PIDValuesGraph;                                            // 0x0384(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                              PIDContributionsGraph;                                     // 0x0388(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                              UtilitiesGraph;                                            // 0x038C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortContextualReticleTypes> CurrentContextualReticleIconType;                          // 0x0390(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NPQJ[0x3];                                     // 0x0391(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FColor                                      CurrentContextualReticleColor;                             // 0x0394(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TAssetPtr<class UTexture2D>                        ContextualReticleIcons[0x8];                               // 0x0398(0x00C0) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastReticleSize;                                           // 0x0458(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T5VB[0xB8];                                    // 0x045C(0x00B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UFortSpottedActorIndicator*>          SpottedActorIndicators;                                    // 0x0514(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortUIZone");
		return ptr;
	}



	void ToggleTargetInfoSensing();
	void ToggleTargetInfoPaths();
	void ToggleTargetInfoLock(bool bTraceComplex);
	void ToggleTargetInfoAI();
	void ToggleTargetInfo();
};

// Class FortniteGame.FortUIPvP
// 0x0004 (FullSize[0x0524] - InheritedSize[0x0520])
class AFortUIPvP : public AFortUIZone
{
public:
	unsigned char                                      UnknownData_IRQT[0x4];                                     // 0x0520(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortUIPvP");
		return ptr;
	}



};

// Class FortniteGame.FortUIPvPBaseDestruction
// 0x0000 (FullSize[0x0524] - InheritedSize[0x0524])
class AFortUIPvPBaseDestruction : public AFortUIPvP
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortUIPvPBaseDestruction");
		return ptr;
	}



};

// Class FortniteGame.FortFeedbackBank
// 0x0090 (FullSize[0x00AC] - InheritedSize[0x001C])
class UFortFeedbackBank : public UDataAsset
{
public:
	TArray<struct FFortFeedbackActionBankDefined>      BankDefinedFeedbackEvents;                                 // 0x001C(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortFeedbackAction>                 FeedbackEvents;                                            // 0x0028(0x000C) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CBQX[0x78];                                    // 0x0034(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortFeedbackBank");
		return ptr;
	}



};

// Class FortniteGame.FortPlacementActorTagTest
// 0x0030 (FullSize[0x004C] - InheritedSize[0x001C])
class UFortPlacementActorTagTest : public UObject
{
public:
	struct FGameplayTagContainer                       TagsToApplyOnSuccess;                                      // 0x001C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       TagsToApplyOnFailure;                                      // 0x0034(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlacementActorTagTest");
		return ptr;
	}



	bool ShouldApplyTagsToPlacementActor(class AFortPlacementActor* FocusPlacementActor, const struct FVector& AveragePlacementActorLocation);
	bool LineTraceByChannel(class AFortPlacementActor* PlacementActor, const struct FVector& Start, const struct FVector& End, TEnumAsByte<Engine_ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, struct FHitResult* OutHit, bool bIgnoreSelf);
};

// Class FortniteGame.FortGameData
// 0x0A9C (FullSize[0x0AB8] - InheritedSize[0x001C])
class UFortGameData : public UDataAsset
{
public:
	class UClass*                                      TestEncounter;                                             // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CombatManager;                                             // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultCameraManager;                                      // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      UIMapManager;                                              // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MusicManager;                                              // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       DefaultHeroName;                                           // 0x0030(0x0018) ELEMENT_SIZE_MISMATCH (Edit, NativeAccessSpecifierPublic)
	class UFortTips*                                   LoadingScreenTips;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTooltipMap*                             ObjClassToTooltipClassMap;                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemPropertyLookupTable*                ItemPropertyLookupTable;                                   // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PickupSplineOffsetRange[0x2];                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PickupSplineRandomMax;                                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PickupSplineDropToGroundLength;                            // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BasePlayerBackpackCapacity;                                // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortRarityData*                             RarityData;                                                // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemCategory*                           ItemCategories;                                            // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuickBarData                               QuickBarDefinitions[0x2];                                  // 0x0064(0x0018) (Edit, NativeAccessSpecifierPublic)
	TArray<struct FName>                               AutoEquipTags;                                             // 0x007C(0x000C) (ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       AutoEquipTagContainer;                                     // 0x0088(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FLinearColor                                BuildingFullHealthFlashColor;                              // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                InvalidEditPatternColor;                                   // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortHighlightColorsContainer               HighlightColors[0x3];                                      // 0x00C0(0x0120) (Edit, NativeAccessSpecifierPublic)
	float                                              ScoreDisplayFactor;                                        // 0x01E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortReplicatedStatMapping>          StatMappings;                                              // 0x01E4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UDataTable*                                  ScoreMultiplierDataTable;                                  // 0x01F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ScoreDivisor;                                              // 0x01F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                XPMult;                                                    // 0x01F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroupXPRate;                                               // 0x01FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CappedXPMult;                                              // 0x0200(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundMix*                                   LoadingScreenSoundMix;                                     // 0x0204(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundMix*                                   BaseSoundMix;                                              // 0x0208(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AbilityTargetingActorBlueprintClass;                       // 0x020C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AIGoalManagerClass;                                        // 0x0210(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        WeakSpotEnabledTimeoutHandle;                              // 0x0214(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        WeakSpotMultiplierHandle;                                  // 0x0220(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              BuildingStructuralCollapseDelay;                           // 0x022C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BuildingStructuralCollapseDelayVariance;                   // 0x0230(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BuildingStructuralCollapseCellDistAdditiveDelay;           // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BuildingStructuralCollapseCellDistAdditiveDelayVariance;   // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EditModeCancelDistance;                                    // 0x023C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        GeneratorUnsupportedDamageDealtPerInterval;                // 0x0240(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        GeneratorUnsupportedDamageInterval;                        // 0x024C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingExcessDamageRewardTimeoutHandle;                   // 0x0258(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingRecentlyDamagedTimeoutHandle;                      // 0x0264(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingBaseHealthHandles[0x4];                            // 0x0270(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingConstructionTimeHandles[0x4];                      // 0x02A0(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingCostHandles[0x4];                                  // 0x02D0(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingDeconCostMultHandles[0x4];                         // 0x0300(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        PlayerBuildingDeconCostMultHandles[0x4];                   // 0x0330(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingInitialHealthPercentHandles[0x4];                  // 0x0360(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingRepairCostMultiplierHandles[0x4];                  // 0x0390(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingBreakAnimDurationHandles[0x4];                     // 0x03C0(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingDestroyAnimDurationHandles[0x4];                   // 0x03F0(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingPlacementAnimDurationHandles[0x4];                 // 0x0420(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingCritDamagePctHandles[0x4];                         // 0x0450(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        BuildingCritDestroyAnimScaleCapHandles[0x4];               // 0x0480(0x0030) (Edit, Protected, NativeAccessSpecifierProtected)
	TAssetPtr<class UMaterialParameterCollection>      StencilDefinitionCollection;                               // 0x04B0(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoundPerResourceLevel                      BuildingConstructionSounds[0x4];                           // 0x04C8(0x0060) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FSoundPerResourceLevel                      GenericBuildingDeathSounds[0x4];                           // 0x0528(0x0060) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FSoundPerResourceLevel                      PlayerBuiltBuildingDeathSounds[0x4];                       // 0x0588(0x0060) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FText                                       ResourceNames[0x4];                                        // 0x05E8(0x0060) ELEMENT_SIZE_MISMATCH (Protected, NativeAccessSpecifierProtected)
	struct FText                                       BuildingTypeNames[0xC];                                    // 0x0618(0x0120) ELEMENT_SIZE_MISMATCH (Protected, NativeAccessSpecifierProtected)
	class UFortResourceItemDefinition*                 StoneItemDefinition;                                       // 0x06A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortResourceItemDefinition*                 WoodItemDefinition;                                        // 0x06AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortResourceItemDefinition*                 MetalItemDefinition;                                       // 0x06B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAmmoItemDefinition*                     PistolAmmoItemDefinition;                                  // 0x06B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAmmoItemDefinition*                     ShotgunAmmoItemDefinition;                                 // 0x06B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortResourceItemDefinition*                 PermaniteItemDefinition;                                   // 0x06BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAmmoItemDefinition*                     RifleAmmoItemDefinition;                                   // 0x06C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAmmoItemDefinition*                     AssaultAmmoItemDefinition;                                 // 0x06C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAmmoItemDefinition*                     EnergyAmmoItemDefinition;                                  // 0x06C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortNeverPersistItemDefinition*             BluGloItemDefinition;                                      // 0x06CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortItemDefinition*                         CriticalMissionRewardItemDefinition;                       // 0x06D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortItemDefinition*                         ScoreBonusMultiplerItemDefinition;                         // 0x06D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UFortWorldItemDefinition>          BackpackItemDefinition;                                    // 0x06D8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UFortWorldItemDefinition>          MissionRewardPackItemDefinition;                           // 0x06F0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortEventNotificationBank*                  EventNotificationBank;                                     // 0x0708(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  LootTierData;                                              // 0x070C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                                  LootPackageData;                                           // 0x0710(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                                  LoginRewardsData;                                          // 0x0714(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  DifficultyData;                                            // 0x0718(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  LootQuotaData;                                             // 0x071C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  LootLevelData;                                             // 0x0720(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                                 LootDropCountData;                                         // 0x0724(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  SurfaceRatioBySurfaceCategoryData;                         // 0x0728(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  SurfaceRatioByAffiliationData;                             // 0x072C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TeamIdentifications[0xD];                                  // 0x0730(0x0034) (Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortDailyQuestInfo                         DailyQuestInfo;                                            // 0x0764(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 LoadingScreenBackground_Generic;                           // 0x0774(0x0074) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortMissionGenerationData>        MissionGenerationData;                                     // 0x07E8(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TAssetPtr<class UFortWorldItemDefinition>>  CheatInventoryItems;                                       // 0x0800(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            TheaterMapViewerClass;                                     // 0x080C(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UMyTownData>                       MyFortData;                                                // 0x0824(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortOutpostData>                  OutpostData;                                               // 0x083C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortAttributeLookupTable>         AttributeLookupTable;                                      // 0x0854(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortAttributeCategory>            AttributeCategories;                                       // 0x086C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            DamageNumbersActorClass;                                   // 0x0884(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            CrackEffectBlueprintClass;                                 // 0x089C(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            PickupEffectBlueprintClass;                                // 0x08B4(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortGameDifficultyCalculationData> GameDifficultyData;                                        // 0x08CC(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         GameDifficultyRowPIE;                                      // 0x08E4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<TAssetPtr<class UClass>>                    AIDirectors;                                               // 0x08F0(0x000C) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int                                                AIDirectorIndex;                                           // 0x08FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AlternateBalanceAIDirectorIndex;                           // 0x0900(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            FeedbackManagerClass;                                      // 0x0904(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortUIFeedbackBank>               UIFeedbackBank;                                            // 0x091C(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            StatEventManagerClass;                                     // 0x0934(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortHeroType>                     DefaultHero;                                               // 0x094C(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FItemDefinitionAndCount>             DefaultInventoryList;                                      // 0x0964(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemDefinitionAndCount>             FastLoadDefaultInventoryList;                              // 0x0970(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            ThreatVisualsManager;                                      // 0x097C(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortEditToolItemDefinition>       EditToolItem;                                              // 0x0994(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortAbilitySet>                   GenericPlayerAbilitySet;                                   // 0x09AC(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortAbilitySet>                   GenericTrapAbilitySet;                                     // 0x09C4(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortAbilityTagRelationship>         AbilityTagRelationships;                                   // 0x09DC(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            EnvironmentDamageTemplateGE;                               // 0x09E8(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            FallingDamageTemplateGE;                                   // 0x0A00(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            HealingTemplateGE;                                         // 0x0A18(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            FatalDamageTemplateGE;                                     // 0x0A30(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UClass>                            BASEClass;                                                 // 0x0A48(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UObjectLibrary>                    StrategicBuildingActorItemDefinitionLibrary;               // 0x0A60(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HeroManagementWidgetClass;                                 // 0x0A78(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UMaterialInterface>                HealthScreenDamagePostProcessMat;                          // 0x0A7C(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UCurveTable>                       SessionXPCurveTable;                                       // 0x0A94(0x0018) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObject*>                             ForceLoadedObjects;                                        // 0x0AAC(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameData");
		return ptr;
	}



};

// Class FortniteGame.FortGameDeathPenalty
// 0x005C (FullSize[0x0078] - InheritedSize[0x001C])
class UFortGameDeathPenalty : public UDataAsset
{
public:
	float                                              PercentResourcesToDrop;                                    // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentWeaponsToDrop;                                      // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentCraftingIngredientsToDrop;                          // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentConsumablesToDrop;                                  // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentAmmoToDrop;                                         // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentResourcesToRecover;                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentWeaponsToRecover;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentCraftingIngredientsToRecover;                       // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentConsumablesToRecover;                               // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentAmmoToRecover;                                      // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MinResourcesToKeep;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MinWeaponsToKeep;                                          // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MinCraftingIngredientsToKeep;                              // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MinConsumablesToKeep;                                      // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MinAmmoToKeep;                                             // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        RespawnDelays;                                             // 0x0058(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 RespawnDelayOverTime;                                      // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxRespawnDelay;                                           // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseRegenHealthOnRespawn;                                  // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4FM6[0x3];                                     // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PercentHealthOnRespawn;                                    // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentStaminaOnRespawn;                                   // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameDeathPenalty");
		return ptr;
	}



};

// Class FortniteGame.FortGameDifficultyCalculationData
// 0x0040 (FullSize[0x005C] - InheritedSize[0x001C])
class UFortGameDifficultyCalculationData : public UDataAsset
{
public:
	struct FDataTableRowHandle                         PowerPointCalculationData;                                 // 0x001C(0x000C) (Edit, NativeAccessSpecifierPublic)
	class UCurveTable*                                 HeroPowerPointValues;                                      // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        MatchmakingMinLevels;                                      // 0x002C(0x000C) (Edit, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        MatchmakingMaxLevels;                                      // 0x0038(0x000C) (Edit, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortHomebaseBuildingStaticDataTable> HomebaseBuildingStaticDataTable;                           // 0x0044(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameDifficultyCalculationData");
		return ptr;
	}



};

// Class FortniteGame.FortGameInstance
// 0x011C (FullSize[0x0168] - InheritedSize[0x004C])
class UFortGameInstance : public UGameInstance
{
public:
	unsigned char                                      UIManagerInterface[0x8];                                   // 0x004C(0x0008) UNKNOWN PROPERTY: InterfaceProperty FortniteGame.FortGameInstance.UIManagerInterface
	struct FStringAssetReference                       UIManagerClassPath;                                        // 0x0054(0x000C) (Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	class UMcpProfileManager*                          ProfileManager;                                            // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8HA6[0x8];                                     // 0x0064(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortMatchmaking*                            Matchmaking;                                               // 0x006C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortParty*                                  Party;                                                     // 0x0070(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VVZC[0xB4];                                    // 0x0074(0x00B4) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortTooltipManager*                         TooltipManager;                                            // 0x0128(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MO6X[0x3C];                                    // 0x012C(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameInstance");
		return ptr;
	}



};

// Class FortniteGame.FortGameMode
// 0x0104 (FullSize[0x03D4] - InheritedSize[0x02D0])
class AFortGameMode : public AGameMode
{
public:
	unsigned char                                      bBuildAnimCheat : 1;                                       // 0x02D0(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDisableCloudStorage : 1;                                  // 0x02D0(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bTravelInitiated : 1;                                      // 0x02D0(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bTeamGame : 1;                                             // 0x02D0(0x0001) BIT_FIELD (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IR1J[0x3];                                     // 0x02D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CheatBuildAnimHeight;                                      // 0x02D4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CheatBuildAnimInterpSpeedMultiplier;                       // 0x02D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CheatBuildMaxDelay;                                        // 0x02DC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BuildingConstructionTimeModifier;                          // 0x02E0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     CurrentWUID;                                               // 0x02E4(0x000C) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentPlaylistId;                                         // 0x02F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     CurrentZoneInstanceId;                                     // 0x02F4(0x000C) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q5VH[0x4];                                     // 0x0300(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ForceWorldName;                                            // 0x0304(0x000C) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ZoneIndex;                                                 // 0x0310(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bPlayersInvincible : 1;                                    // 0x0314(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CHGB[0x3];                                     // 0x0315(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bKickIdlers;                                               // 0x0318(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YKQ1[0x3];                                     // 0x0319(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxIdleTime;                                               // 0x031C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortGameDeathPenalty>             DeathPenaltyData;                                          // 0x0320(0x0018) (Edit, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       StartingObjectiveObject;                                   // 0x0338(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XBGJ[0x4];                                     // 0x0340(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortGameSession*                            FortGameSession;                                           // 0x0344(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     GameModeSessionString;                                     // 0x0348(0x000C) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     DefaultPawnClassName;                                      // 0x0354(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MissionManagerClass;                                       // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A3YI[0x10];                                    // 0x0364(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortGameplayState>       PendingTimerState;                                         // 0x0374(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C8UC[0x7];                                     // 0x0375(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bWorldIsReady : 1;                                         // 0x037C(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bTheaterDataIsReady : 1;                                   // 0x037C(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AIDM[0x3];                                     // 0x037D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TheaterSlot;                                               // 0x0380(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       GameContextTags;                                           // 0x0384(0x0018) (Transient, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      FakePlayerClass;                                           // 0x039C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortRegisteredPlayer>               RegisteredPlayers;                                         // 0x03A0(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      TeamInfoClass;                                             // 0x03AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ND9P[0x20];                                    // 0x03B0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortMissionGenerationManager*               MissionGenerationManager;                                  // 0x03D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameMode");
		return ptr;
	}



	void HandleScoreToXPUpdate();
	void DumpReservations();
};

// Class FortniteGame.FortGameModeEmptyDedicated
// 0x0004 (FullSize[0x03D8] - InheritedSize[0x03D4])
class AFortGameModeEmptyDedicated : public AFortGameMode
{
public:
	class AFortGameSessionDedicated*                   FortGameSessionDedicated;                                  // 0x03D4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameModeEmptyDedicated");
		return ptr;
	}



};

// Class FortniteGame.FortGameSession
// 0x0048 (FullSize[0x02B8] - InheritedSize[0x0270])
class AFortGameSession : public AGameSession
{
public:
	unsigned char                                      UnknownData_KSIE[0x10];                                    // 0x0270(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortHostSessionParams                      CurrentSessionParams;                                      // 0x0280(0x000C) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5MRR[0x8];                                     // 0x028C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ReservationBeaconHostClass;                                // 0x0294(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      QosBeaconHostClass;                                        // 0x0298(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KSG3[0x4];                                     // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortPartyBeaconHost*                        ReservationBeaconHost;                                     // 0x02A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AQosBeaconHost*                              QosBeaconHost;                                             // 0x02A4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortLobbyBeaconHost*                        LobbyBeaconHost;                                           // 0x02A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D3XV[0xC];                                     // 0x02AC(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameSession");
		return ptr;
	}



	void DumpReservations();
};

// Class FortniteGame.FortPartyBeaconState
// 0x0048 (FullSize[0x009C] - InheritedSize[0x0054])
class UFortPartyBeaconState : public UPartyBeaconState
{
public:
	struct FUniqueNetIdRepl                            GameSessionOwner;                                          // 0x0054(0x0008) (Protected, NativeAccessSpecifierProtected)
	struct FEmptyServerReservation                     ReservationData;                                           // 0x005C(0x0028) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UQIS[0x18];                                    // 0x0084(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPartyBeaconState");
		return ptr;
	}



};

// Class FortniteGame.FortGameModeFrontEnd
// 0x0010 (FullSize[0x03E4] - InheritedSize[0x03D4])
class AFortGameModeFrontEnd : public AFortGameMode
{
public:
	int                                                OwningControllerIndex;                                     // 0x03D4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortTheaterMapViewer*                       TheaterMapViewer;                                          // 0x03D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2SAH[0x8];                                     // 0x03DC(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameModeFrontEnd");
		return ptr;
	}



	void ShowPersonalizationScreen(class AFortPlayerController* PC);
};

// Class FortniteGame.FortGameplayAbility_Action
// 0x0008 (FullSize[0x06E4] - InheritedSize[0x06DC])
class UFortGameplayAbility_Action : public UFortGameplayAbility
{
public:
	struct FName                                       ActionName;                                                // 0x06DC(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Action");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayAbility_AIPortal
// 0x0078 (FullSize[0x075C] - InheritedSize[0x06E4])
class UFortGameplayAbility_AIPortal : public UFortGameplayAbility_Action
{
public:
	unsigned char                                      UnknownData_9TMY[0x28];                                    // 0x06E4(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PortalLifespan;                                            // 0x070C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R7C4[0x4C];                                    // 0x0710(0x004C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_AIPortal");
		return ptr;
	}



	void ModifyCollisions();
	bool HasPortalOutPoint();
	struct FVector GetPortalOutPoint();
	struct FVector GetPortalInPoint();
	class ABuildingSMActor* GetPortalBuilding();
};

// Class FortniteGame.FortGameplayAbility_Jump
// 0x0000 (FullSize[0x06E4] - InheritedSize[0x06E4])
class UFortGameplayAbility_Jump : public UFortGameplayAbility_Action
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Jump");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayAbility_Sprint
// 0x0000 (FullSize[0x06E4] - InheritedSize[0x06E4])
class UFortGameplayAbility_Sprint : public UFortGameplayAbility_Action
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Sprint");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayAbility_AITurnTransition
// 0x001C (FullSize[0x06F8] - InheritedSize[0x06DC])
class UFortGameplayAbility_AITurnTransition : public UFortGameplayAbility
{
public:
	float                                              MinTurnTransitionYawAngle;                                 // 0x06DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTurnTransitionData>                 TransitionPriorityList;                                    // 0x06E0(0x000C) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FName                                       PickedMontageSectionName;                                  // 0x06EC(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PickedTurnYawRotationRate;                                 // 0x06F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_AITurnTransition");
		return ptr;
	}



	void GetTurnTransitionMontageSectionNameAndYawRotationRate(struct FName* MontageSectionName, float* TurnYawRotationRate);
};

// Class FortniteGame.FortGameplayAbility_Land
// 0x0000 (FullSize[0x06DC] - InheritedSize[0x06DC])
class UFortGameplayAbility_Land : public UFortGameplayAbility
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Land");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayAbility_RangedWeapon
// 0x0024 (FullSize[0x0700] - InheritedSize[0x06DC])
class UFortGameplayAbility_RangedWeapon : public UFortGameplayAbility
{
public:
	class AFortWeaponRanged*                           CurrentWeapon;                                             // 0x06DC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       WeaponFireCue;                                             // 0x06E0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MIUE[0x8];                                     // 0x06F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_RangedWeapon");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayAbility_Reload
// 0x000C (FullSize[0x06E8] - InheritedSize[0x06DC])
class UFortGameplayAbility_Reload : public UFortGameplayAbility
{
public:
	int                                                NumTimesReloaded;                                          // 0x06DC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TH9Y[0x8];                                     // 0x06E0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Reload");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayCueManager
// 0x0000 (FullSize[0x016C] - InheritedSize[0x016C])
class UFortGameplayCueManager : public UGameplayCueManager
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueManager");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayCueNotify_Looping
// 0x0024 (FullSize[0x02AC] - InheritedSize[0x0288])
class AFortGameplayCueNotify_Looping : public AGameplayCueNotify_Actor
{
public:
	class USoundBase*                                  StartSound;                                                // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  StopSound;                                                 // 0x028C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             StartParticleSystem;                                       // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             StopParticleSystem;                                        // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AttachPoint;                                               // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStayAttached;                                             // 0x02A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseHitResult;                                             // 0x02A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseWeapon;                                                // 0x02A2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIgnoreRotation;                                           // 0x02A3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAudioComponent*                             AudioComponent;                                            // 0x02A4(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    ParticleSystemComponent;                                   // 0x02A8(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueNotify_Looping");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayCueNotify_Simple
// 0x0014 (FullSize[0x0044] - InheritedSize[0x0030])
class UFortGameplayCueNotify_Simple : public UGameplayCueNotify_Static
{
public:
	class USoundBase*                                  StartSound;                                                // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             StartParticleSystem;                                       // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AttachPoint;                                               // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStayAttached;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseHitResult;                                             // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseWeapon;                                                // 0x0042(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIgnoreRotation;                                           // 0x0043(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueNotify_Simple");
		return ptr;
	}



};

// Class FortniteGame.FortSpawnContextObjectInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortSpawnContextObjectInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSpawnContextObjectInterface");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayEffectDeliveryActor
// 0x0150 (FullSize[0x0390] - InheritedSize[0x0240])
class AFortGameplayEffectDeliveryActor : public AActor
{
public:
	unsigned char                                      UnknownData_3RCO[0x10];                                    // 0x0240(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortGameplayEffectContainerSpec            EffectContainerSpecToApplyOnTouch;                         // 0x0250(0x0064) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bKillOnExplode;                                            // 0x02B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QOZV[0x3];                                     // 0x02B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortGameplayEffectContainerSpec            EffectContainerSpecToApplyOnExplode;                       // 0x02B8(0x0064) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              LifespanAfterKill;                                         // 0x031C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TouchingActorsEffectApplicationUpdateTime;                 // 0x0320(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsBeingKilled;                                            // 0x0324(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIgnoreInstigatorCollision;                                // 0x0325(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BV8U[0x2];                                     // 0x0326(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         CollisionComponent;                                        // 0x0328(0x0004) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSpawnContext                           SpawnContext;                                              // 0x032C(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q9SL[0x38];                                    // 0x0348(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bDoExplosionReentrancyGuard : 1;                           // 0x0380(0x0001) BIT_FIELD (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QCU2[0xF];                                     // 0x0381(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayEffectDeliveryActor");
		return ptr;
	}



	void SetIgnoreInstigatorCollision(bool bShouldIgnore);
	void SetCollisionComponent(class UPrimitiveComponent* NewCollisionComponent);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult);
	void OnRep_IsBeingKilled();
	void OnExploded(TArray<class AActor*> HitActors, TArray<struct FHitResult> HitResults);
	void OnComponentTouch(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnComponentOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void KillTimerExpired();
	void Kill();
	bool IsBeingKilled();
	class UPrimitiveComponent* GetCollisionComponent();
	void DoExplosion();
	void BroadcastExplosion(TArray<class AActor*> HitActors, TArray<struct FHitResult> HitResults);
};

// Class FortniteGame.FortAreaOfEffectCloud
// 0x0000 (FullSize[0x0390] - InheritedSize[0x0390])
class AFortAreaOfEffectCloud : public AFortGameplayEffectDeliveryActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAreaOfEffectCloud");
		return ptr;
	}



};

// Class FortniteGame.FortProjectileBase
// 0x0088 (FullSize[0x0418] - InheritedSize[0x0390])
class AFortProjectileBase : public AFortGameplayEffectDeliveryActor
{
public:
	unsigned char                                      UnknownData_7NBE[0x4];                                     // 0x0390(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCurveTableRowHandle                        VerticleFireOffset;                                        // 0x0394(0x000C) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        InitialSpeed;                                              // 0x03A0(0x000C) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                        MaxSpeed;                                                  // 0x03AC(0x000C) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                              ReplicatedMaxSpeed;                                        // 0x03B8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GravityScale;                                              // 0x03BC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChargePercent;                                             // 0x03C0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MomentumTransfer;                                          // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAddOwnerVelocity;                                         // 0x03C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AKXZ[0x3];                                     // 0x03C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           CapsuleComponent;                                          // 0x03CC(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*                ProjectileMovementComponent;                               // 0x03D0(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStopSimulatingOnHit;                                      // 0x03D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7NCD[0x7];                                     // 0x03D5(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortBaseWeaponDamage>    WeaponResponseType;                                        // 0x03DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7SCF[0x3B];                                    // 0x03DD(0x003B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortProjectileBase");
		return ptr;
	}



	void SetGravityScale(float InitialGravityScale);
	void OnStopCallback(const struct FHitResult& Hit);
	void OnStop(const struct FHitResult& Hit);
	void OnRep_ReplicatedMaxSpeed();
	void OnRep_GravityScale();
	void OnBounceCallback(const struct FHitResult& Hit, const struct FVector& ImpactVelocity);
	void OnBounce(const struct FHitResult& Hit);
	bool HasStoppedMoving();
	float GetGravityScale();
};

// Class FortniteGame.FortGadgetItemDefinition
// 0x0028 (FullSize[0x05E0] - InheritedSize[0x05B8])
class UFortGadgetItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_J9MT[0x4];                                     // 0x05B8(0x0004) Fix Super Size
	class UClass*                                      GameplayAbility;                                           // 0x05BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDecoItemDefinition*                     DecoItemDefinition;                                        // 0x05C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                          LevelAttribute;                                            // 0x05C4(0x0004) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bConsumeOnUse;                                             // 0x05C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R0Q0[0x3];                                     // 0x05C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                ActivationAnimation;                                       // 0x05CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                         DamageStatHandle;                                          // 0x05D0(0x000C) (Edit, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TT8B[0x4];                                     // 0x05DC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGadgetItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortIngredientItemDefinition
// 0x0008 (FullSize[0x05C0] - InheritedSize[0x05B8])
class UFortIngredientItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_C1K6[0x8];                                     // 0x05B8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortIngredientItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortLootLevel
// 0x0008 (FullSize[0x05C0] - InheritedSize[0x05B8])
class UFortLootLevel : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_MOWR[0x8];                                     // 0x05B8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLootLevel");
		return ptr;
	}



};

// Class FortniteGame.FortLootPackage
// 0x0008 (FullSize[0x05C0] - InheritedSize[0x05B8])
class UFortLootPackage : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_H5NG[0x8];                                     // 0x05B8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLootPackage");
		return ptr;
	}



};

// Class FortniteGame.FortLootTier
// 0x0008 (FullSize[0x05C0] - InheritedSize[0x05B8])
class UFortLootTier : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_BLKF[0x8];                                     // 0x05B8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortLootTier");
		return ptr;
	}



};

// Class FortniteGame.FortMissionItemDefinition
// 0x0008 (FullSize[0x05C0] - InheritedSize[0x05B8])
class UFortMissionItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_I1XA[0x8];                                     // 0x05B8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortNeverPersistItemDefinition
// 0x0008 (FullSize[0x05C0] - InheritedSize[0x05B8])
class UFortNeverPersistItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_JW60[0x8];                                     // 0x05B8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNeverPersistItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortOutpostItemDefinition
// 0x0018 (FullSize[0x05D0] - InheritedSize[0x05B8])
class UFortOutpostItemDefinition : public UFortWorldItemDefinition
{
public:
	TArray<class UClass*>                              StaticGameplayEffectsByLevel;                              // 0x05B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FText                                       LongDescription;                                           // 0x05C4(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortOutpostItemDefinition");
		return ptr;
	}



	struct FText GetLongDescription();
};

// Class FortniteGame.FortResourceItemDefinition
// 0x0008 (FullSize[0x05C0] - InheritedSize[0x05B8])
class UFortResourceItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData_3ES6[0x8];                                     // 0x05B8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortResourceItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortProjectile_MOBATurret
// 0x000C (FullSize[0x0424] - InheritedSize[0x0418])
class AFortProjectile_MOBATurret : public AFortProjectileBase
{
public:
	TArray<struct FHitResult>                          ForcedHitResults;                                          // 0x0418(0x000C) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortProjectile_MOBATurret");
		return ptr;
	}



	void OnHomingTargetDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
};

// Class FortniteGame.FortProjectileExplosiveBase
// 0x0000 (FullSize[0x0418] - InheritedSize[0x0418])
class AFortProjectileExplosiveBase : public AFortProjectileBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortProjectileExplosiveBase");
		return ptr;
	}



};

// Class FortniteGame.FortProj_M80
// 0x0000 (FullSize[0x0418] - InheritedSize[0x0418])
class AFortProj_M80 : public AFortProjectileExplosiveBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortProj_M80");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayEffectExecutionCalculation
// 0x0000 (FullSize[0x002C] - InheritedSize[0x002C])
class UFortGameplayEffectExecutionCalculation : public UGameplayEffectExecutionCalculation
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayEffectExecutionCalculation");
		return ptr;
	}



};

// Class FortniteGame.FortActiveDurationExecutionCalculation
// 0x0000 (FullSize[0x002C] - InheritedSize[0x002C])
class UFortActiveDurationExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortActiveDurationExecutionCalculation");
		return ptr;
	}



};

// Class FortniteGame.FortControlStrengthExecutionCalculation
// 0x0000 (FullSize[0x002C] - InheritedSize[0x002C])
class UFortControlStrengthExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortControlStrengthExecutionCalculation");
		return ptr;
	}



};

// Class FortniteGame.FortDamageFormulaExecutionCalculation
// 0x0000 (FullSize[0x002C] - InheritedSize[0x002C])
class UFortDamageFormulaExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDamageFormulaExecutionCalculation");
		return ptr;
	}



};

// Class FortniteGame.FortHealing
// 0x0000 (FullSize[0x002C] - InheritedSize[0x002C])
class UFortHealing : public UFortGameplayEffectExecutionCalculation
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHealing");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayEffectUIData
// 0x0024 (FullSize[0x0040] - InheritedSize[0x001C])
class UFortGameplayEffectUIData : public UGameplayEffectUIData
{
public:
	struct FText                                       DisplayName;                                               // 0x001C(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0028(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FString                                     TooltipName;                                               // 0x0034(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayEffectUIData");
		return ptr;
	}



};

// Class FortniteGame.FortNotificationManager
// 0x0078 (FullSize[0x02B8] - InheritedSize[0x0240])
class AFortNotificationManager : public AActor
{
public:
	TArray<struct FFortClientNotificationData>         Notifications;                                             // 0x0240(0x000C) (Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5KHV[0x6C];                                    // 0x024C(0x006C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNotificationManager");
		return ptr;
	}



	void OnRep_Notifications();
};

// Class FortniteGame.FortNotificationMessage
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortNotificationMessage : public ULocalMessage
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNotificationMessage");
		return ptr;
	}



};

// Class FortniteGame.FortNotificationQueue
// 0x001C (FullSize[0x0038] - InheritedSize[0x001C])
class UFortNotificationQueue : public UObject
{
public:
	unsigned char                                      UnknownData_Z4CJ[0x1C];                                    // 0x001C(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortNotificationQueue");
		return ptr;
	}



};

// Class FortniteGame.FortObjectiveInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortObjectiveInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortObjectiveInterface");
		return ptr;
	}



};

// Class FortniteGame.FortOnlineAccount
// 0x017C (FullSize[0x0198] - InheritedSize[0x001C])
class UFortOnlineAccount : public UObject
{
public:
	unsigned char                                      UnknownData_QV9E[0x17C];                                   // 0x001C(0x017C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortOnlineAccount");
		return ptr;
	}



};

// Class FortniteGame.FortOnlineSessionClient
// 0x0000 (FullSize[0x00FC] - InheritedSize[0x00FC])
class UFortOnlineSessionClient : public UOnlineSessionClient
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortOnlineSessionClient");
		return ptr;
	}



};

// Class FortniteGame.OutpostPOSTRequirementData
// 0x0018 (FullSize[0x0034] - InheritedSize[0x001C])
class UOutpostPOSTRequirementData : public UObject
{
public:
	class UFortItemDefinition*                         RequirementItemDefinition;                                 // 0x001C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TotalRequired;                                             // 0x0020(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AlreadyDeposited;                                          // 0x0024(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AmountOwned;                                               // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasEnough;                                                // 0x002C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KS2G[0x3];                                     // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                AmountToDeposit;                                           // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.OutpostPOSTRequirementData");
		return ptr;
	}



};

// Class FortniteGame.FortOutpostData
// 0x0110 (FullSize[0x012C] - InheritedSize[0x001C])
class UFortOutpostData : public UDataAsset
{
public:
	class UDataTable*                                  OutpostUpgradesData;                                       // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOutpostUpgradesPerTheaterData>      PerTheaterOutpostUpgradesData;                             // 0x0020(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDataTable*                                  OutpostFabricatorData;                                     // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOutpostFabricatorPerTheaterData>    PerTheaterFabricatorData;                                  // 0x0030(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDataTable*                                  OutpostCraftingTableData;                                  // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxPrestigeLevel;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DisintegrationToFabricationRatio;                          // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QuantumGooProductionTime;                                  // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                StructureLimitNotificationThreshold;                       // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UFortOutpostItemDefinition>        StormShield;                                               // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UFortOutpostItemDefinition>        CraftingTable;                                             // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UFortOutpostItemDefinition>        Fabricator;                                                // 0x0080(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UFortOutpostItemDefinition>        HarvestingOptimizer;                                       // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UFortOutpostItemDefinition>        StorageVault;                                              // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UFortOutpostItemDefinition>        POST;                                                      // 0x00C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int>                                        FabricatorCapacityPerLevel;                                // 0x00E0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int>                                        StorageVaultCapacityPerLevel;                              // 0x00EC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FOutpostPOSTBoost                           DefaultPOSTData;                                           // 0x00F8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FOutpostPOSTPerTheaterData>          POSTDataPerTheater;                                        // 0x0104(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      POSTBuildingGameplayEffectClass;                           // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOutpostPrestigeEffects                     DefaultPrestigeData;                                       // 0x0114(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FOutpostPrestigeEffectsPerTheater>   PrestigeDataPerTheater;                                    // 0x0120(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortOutpostData");
		return ptr;
	}



};

// Class FortniteGame.FortOutpostFunctionLibrary
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortOutpostFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortOutpostFunctionLibrary");
		return ptr;
	}



	void STATIC_SetOutpostGameDifficultyRow(class UObject* WorldContextObject, const struct FDataTableRowHandle& GameDifficultyInfo);
	void STATIC_SetOutpostDefenseActive(class UObject* WorldContextObject, bool bActive);
	class UFortMissionConfigData* STATIC_GetOutpostQuestMissionConfigData(class UObject* WorldContextObject, const struct FGameplayTag& ConfigTag);
	class AFortPlayerControllerOutpost* STATIC_GetOutpostOwner(class UObject* WorldContextObject);
	class UClass* STATIC_GetEnemyGameplayEffectDictatedByPrestige(class UObject* WorldContextObject);
};

// Class FortniteGame.FortPackPersonality
// 0x0070 (FullSize[0x008C] - InheritedSize[0x001C])
class UFortPackPersonality : public UDataAsset
{
public:
	class USoundCue*                                   TickleVOSound;                                             // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   TickleSFXSound;                                            // 0x0020(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   HoverVOSound;                                              // 0x0024(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   BuySFXSound;                                               // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OpenGenericVO_Sound;                                       // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OpenGenericSFX_Sound;                                      // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   UpgradeSilverVO_Sound;                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   UpgradeSilverSFX_Sound;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OpenSilverVO_Sound;                                        // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OpenSilverSFX_Sound;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   UpgradeGoldVO_Sound;                                       // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   UpgradeGoldSFX_Sound;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OpenGoldVO_Sound;                                          // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OpenGoldSFX_Sound;                                         // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetGenericVO_Sound;                                      // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetAxeVO_Sound;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetBaseballBatVO_Sound;                                  // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetGardenHoeVO_Sound;                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetGardenRakeVO_Sound;                                   // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetHockeyStickVO_Sound;                                  // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetPickAxeVO_Sound;                                      // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetPitchforkVO_Sound;                                    // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetScytheVO_Sound;                                       // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetSledgehammerVO_Sound;                                 // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   GreetSwordVO_Sound;                                        // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   PreHitVO_Sound;                                            // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   DropMusic_Sound;                                           // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OpenMusic_Sound;                                           // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPackPersonality");
		return ptr;
	}



};

// Class FortniteGame.FortParty
// 0x0004 (FullSize[0x01D8] - InheritedSize[0x01D4])
class UFortParty : public UParty
{
public:
	bool                                               bTutorialCompleted;                                        // 0x01D4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J2TG[0x3];                                     // 0x01D5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortParty");
		return ptr;
	}



};

// Class FortniteGame.FortPartyBeaconClient
// 0x0044 (FullSize[0x02F8] - InheritedSize[0x02B4])
class AFortPartyBeaconClient : public APartyBeaconClient
{
public:
	struct FEmptyServerReservation                     PendingEmptyReservation;                                   // 0x02B4(0x0028) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_64U3[0x10];                                    // 0x02DC(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReconnectionInitialTimeout;                                // 0x02EC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReconnectionTimeout;                                       // 0x02F0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasReconnected;                                           // 0x02F4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ADNU[0x3];                                     // 0x02F5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPartyBeaconClient");
		return ptr;
	}



	void ServerReconnectExistingReservation(const struct FString& InSessionId, const struct FUniqueNetIdRepl& RequestingPlayer);
	void ServerEmptyServerReservationRequest(const struct FString& InSessionId, const struct FEmptyServerReservation& ReservationData, const struct FPartyReservation& Reservation);
	void ClientReconnectResponse(TEnumAsByte<OnlineSubsystemUtils_EPartyReservationResult> ReservationResponse);
	void ClientAllowedToProceedFromReservationTimeout();
	void ClientAllowedToProceedFromReservation();
};

// Class FortniteGame.FortPartyBeaconHost
// 0x0014 (FullSize[0x02A8] - InheritedSize[0x0294])
class AFortPartyBeaconHost : public APartyBeaconHost
{
public:
	unsigned char                                      UnknownData_085B[0x14];                                    // 0x0294(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPartyBeaconHost");
		return ptr;
	}



};

// Class FortniteGame.FortPartyMemberState
// 0x0044 (FullSize[0x0084] - InheritedSize[0x0040])
class UFortPartyMemberState : public UPartyMemberState
{
public:
	struct FFortPartyMemberRepState                    MemberState;                                               // 0x0040(0x0040) (Transient, NativeAccessSpecifierPrivate)
	class UFortHeroType*                               HeroType;                                                  // 0x0080(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPartyMemberState");
		return ptr;
	}



};

// Class FortniteGame.FortPawn_Flinger
// 0x0000 (FullSize[0x0E50] - InheritedSize[0x0E50])
class AFortPawn_Flinger : public AFortAIPawn
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPawn_Flinger");
		return ptr;
	}



};

// Class FortniteGame.FortPawn_InteractablePawn
// 0x0020 (FullSize[0x0E70] - InheritedSize[0x0E50])
class AFortPawn_InteractablePawn : public AFortAIPawn
{
public:
	unsigned char                                      UnknownData_EP76[0x4];                                     // 0x0E50(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGuid                                       MyGuid;                                                    // 0x0E54(0x0010) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y58M[0xC];                                     // 0x0E64(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPawn_InteractablePawn");
		return ptr;
	}



	void BlueprintOnInteract(class AFortPawn* InteractingPawn);
	void BlueprintOnBeginInteract();
	struct FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn);
	bool BlueprintCanInteract(class AFortPawn* InteractingPawn);
};

// Class FortniteGame.FortPawn_Taker
// 0x0010 (FullSize[0x0E60] - InheritedSize[0x0E50])
class AFortPawn_Taker : public AFortAIPawn
{
public:
	unsigned char                                      bUseClimbLinks : 1;                                        // 0x0E50(0x0001) BIT_FIELD (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M3RX[0xF];                                     // 0x0E51(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPawn_Taker");
		return ptr;
	}



};

// Class FortniteGame.FortPawn_FeedbackAnnouncer
// 0x0004 (FullSize[0x0860] - InheritedSize[0x085C])
class AFortPawn_FeedbackAnnouncer : public AFortPawn
{
public:
	unsigned char                                      UnknownData_AQY1[0x4];                                     // 0x085C(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPawn_FeedbackAnnouncer");
		return ptr;
	}



};

// Class FortniteGame.FortPawnAction_ExecuteGameplayAbility
// 0x0028 (FullSize[0x008C] - InheritedSize[0x0064])
class UFortPawnAction_ExecuteGameplayAbility : public UPawnAction
{
public:
	struct FGameplayAbilitySpecHandle                  GameplayAbilitySpecHandle;                                 // 0x0064(0x0004) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bLoopExecution : 1;                                        // 0x0068(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bRetryOnCooldown : 1;                                      // 0x0068(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bRetryOnAbilityAlreadyRunning : 1;                         // 0x0068(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TY1I[0x23];                                    // 0x0069(0x0023) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPawnAction_ExecuteGameplayAbility");
		return ptr;
	}



};

// Class FortniteGame.FortPawnAction_Move
// 0x002C (FullSize[0x00C4] - InheritedSize[0x0098])
class UFortPawnAction_Move : public UPawnAction_Move
{
public:
	class UFortPathFollowingComponent*                 FortPathFollowingComponent;                                // 0x0098(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                            FallbackMoveGoal;                                          // 0x009C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAIHotSpot_Building*                     PathObstacleHotspot;                                       // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EPathObstacleAction>      PathObstacleAction;                                        // 0x00A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EBumpIntoSleepingReaction> BumpSleepingReaction;                                      // 0x00A5(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_18UK[0x2];                                     // 0x00A6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PushBumpedPawnClass;                                       // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EAIOptionFlag>                DoPathOffsetting;                                          // 0x00AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EAIOptionFlag>                DoSteering;                                                // 0x00AD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EAIOptionFlag>                DoObstacleAvoidance;                                       // 0x00AE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1OSF[0x1];                                     // 0x00AF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      FocusTarget;                                               // 0x00B0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     FocalPoint;                                                // 0x00B4(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bDetectUnexpectedPathBlockingObstacles : 1;                // 0x00C0(0x0001) BIT_FIELD (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bDetectBlockedByPlayer : 1;                                // 0x00C0(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bEnableSlowdownAtGoal : 1;                                 // 0x00C0(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bStopMovementOnFinish : 1;                                 // 0x00C0(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bForceWalkingMode : 1;                                     // 0x00C0(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bHasFocalPoint : 1;                                        // 0x00C0(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BAWK[0x3];                                     // 0x00C1(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPawnAction_Move");
		return ptr;
	}



};

// Class FortniteGame.FortPawnAction_FuzzyQueue
// 0x001C (FullSize[0x00E0] - InheritedSize[0x00C4])
class UFortPawnAction_FuzzyQueue : public UFortPawnAction_Move
{
public:
	unsigned char                                      UnknownData_OPHG[0x1C];                                    // 0x00C4(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPawnAction_FuzzyQueue");
		return ptr;
	}



};

// Class FortniteGame.FortPawnAction_RotateToFace
// 0x0018 (FullSize[0x007C] - InheritedSize[0x0064])
class UFortPawnAction_RotateToFace : public UPawnAction
{
public:
	class AActor*                                      FocusTarget;                                               // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     FocalPoint;                                                // 0x0068(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              PrecisionDot;                                              // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bStopFacingWhenPaused : 1;                                 // 0x0078(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bStopFacingWhenFinished : 1;                               // 0x0078(0x0001) BIT_FIELD (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2KBQ[0x3];                                     // 0x0079(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPawnAction_RotateToFace");
		return ptr;
	}



};

// Class FortniteGame.FortPawnAction_Sleep
// 0x0000 (FullSize[0x0064] - InheritedSize[0x0064])
class UFortPawnAction_Sleep : public UPawnAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPawnAction_Sleep");
		return ptr;
	}



};

// Class FortniteGame.FortPermaniteStructureInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortPermaniteStructureInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPermaniteStructureInterface");
		return ptr;
	}



	void OnBoundariesChanged(int MinLevel, int MaxLevel, int CurrentLevel);
};

// Class FortniteGame.FortPickupBackpack
// 0x0000 (FullSize[0x03B8] - InheritedSize[0x03B8])
class AFortPickupBackpack : public AFortPickup
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPickupBackpack");
		return ptr;
	}



};

// Class FortniteGame.FortPickupEffect
// 0x0030 (FullSize[0x0270] - InheritedSize[0x0240])
class AFortPickupEffect : public AActor
{
public:
	class UStaticMesh*                                 StaticMesh;                                                // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*                    ItemDefinition;                                            // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotShowSpawnParticles;                                  // 0x024C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KXV7[0x3];                                     // 0x024D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     PickupColor;                                               // 0x0250(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                BackpackWorldPosition;                                     // 0x025C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bOwnedByALocalPlayer : 1;                                  // 0x026C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bOwnedByPlayer : 1;                                        // 0x026C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KMWV[0x3];                                     // 0x026D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPickupEffect");
		return ptr;
	}



	void OnPickedUp();
	void OnAttached();
	void OnAboutToEnterBackpack();
};

// Class FortniteGame.FortPlacedPawnMarker
// 0x0000 (FullSize[0x0254] - InheritedSize[0x0254])
class AFortPlacedPawnMarker : public ANavigationObjectBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlacedPawnMarker");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerARPGCamera
// 0x0010 (FullSize[0x1254] - InheritedSize[0x1244])
class AFortPlayerARPGCamera : public APlayerCameraManager
{
public:
	float                                              CameraDistance;                                            // 0x1244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraPitch;                                               // 0x1248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraYaw;                                                 // 0x124C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraFOV;                                                 // 0x1250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerARPGCamera");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerCameraBase
// 0x0038 (FullSize[0x127C] - InheritedSize[0x1244])
class AFortPlayerCameraBase : public APlayerCameraManager
{
public:
	TArray<struct FActiveFortCamera>                   CameraBlendStack;                                          // 0x1244(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortCameraInstanceEntry>            CameraInstances;                                           // 0x1250(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UClass*                                      Base3PClass;                                               // 0x125C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Targeting3PClass;                                          // 0x1260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      OverrideCameraClass;                                       // 0x1264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CinematicCameraClass;                                      // 0x1268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DeathCameraClass;                                          // 0x126C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortCameraPrototype>                CameraPrototypes;                                          // 0x1270(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerCameraBase");
		return ptr;
	}



};

// Class FortniteGame.FortFrontEndCameraManager
// 0x0044 (FullSize[0x12C0] - InheritedSize[0x127C])
class AFortFrontEndCameraManager : public AFortPlayerCameraBase
{
public:
	TEnumAsByte<FortniteGame_EFrontEndCamera>          CurrentCamera;                                             // 0x127C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MQFD[0x3];                                     // 0x127D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFrontEndSettings*                           FrontEndSettings;                                          // 0x1280(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZEGJ[0x3C];                                    // 0x1284(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortFrontEndCameraManager");
		return ptr;
	}



	void SetCamera(TEnumAsByte<FortniteGame_EFrontEndCamera> NewCamera);
	class AFortCameraBase* GetCameraActor();
	TEnumAsByte<FortniteGame_EFrontEndCamera> GetCamera();
};

// Class FortniteGame.FortPlayerControllerFrontEnd
// 0x0048 (FullSize[0x0C68] - InheritedSize[0x0C20])
class AFortPlayerControllerFrontEnd : public AFortPlayerController
{
public:
	class UFortMenuInputHelper*                        InputHelper;                                               // 0x0C20(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCameraIsSetup;                                            // 0x0C24(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bTheaterDownloadInProgress;                                // 0x0C25(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FAGU[0x3E];                                    // 0x0C26(0x003E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUnlockAllZones;                                           // 0x0C64(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AQWQ[0x3];                                     // 0x0C65(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerFrontEnd");
		return ptr;
	}



	void SkipTutorial();
};

// Class FortniteGame.FortPlayerControllerZone
// 0x0050 (FullSize[0x0C70] - InheritedSize[0x0C20])
class AFortPlayerControllerZone : public AFortPlayerController
{
public:
	TArray<unsigned char>                              FogOfWarMaskToReplicate;                                   // 0x0C20(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FFortPlayerDeathReport                      PlayerDeathReport;                                         // 0x0C2C(0x0018) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HOXJ[0x2C];                                    // 0x0C44(0x002C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerZone");
		return ptr;
	}



	void ServerRequestFogOfWarBunch(int Offset);
	void ClientReceiveFogOfWarBunch(int Offset, int TotalSize, TArray<unsigned char> BunchData);
	void ClientOnPawnDied(const struct FFortPlayerDeathReport& DeathReport);
	void ClientNotifyFogOfWarReplicationStart();
};

// Class FortniteGame.FortPlayerControllerARPG
// 0x0078 (FullSize[0x0CE8] - InheritedSize[0x0C70])
class AFortPlayerControllerARPG : public AFortPlayerControllerZone
{
public:
	unsigned char                                      UnknownData_YLJ8[0x58];                                    // 0x0C70(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInputComponent*                             ARPGCameraInputComponent;                                  // 0x0CC8(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UBuildingTextureData>              TransparentTextureData;                                    // 0x0CCC(0x0018) (Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WK40[0x4];                                     // 0x0CE4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerARPG");
		return ptr;
	}



	void TogglePointAndClickMovement();
};

// Class FortniteGame.FortPlayerControllerKeep
// 0x0020 (FullSize[0x0C90] - InheritedSize[0x0C70])
class AFortPlayerControllerKeep : public AFortPlayerControllerZone
{
public:
	unsigned char                                      UnknownData_S0BC[0x4];                                     // 0x0C70(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       UnableToPlaceReachedLimit;                                 // 0x0C74(0x0018) ELEMENT_SIZE_MISMATCH (Protected, NativeAccessSpecifierProtected)
	int                                                WorkshopPickedItems;                                       // 0x0C80(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ArmoryPickedItems;                                         // 0x0C84(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P6G0[0x8];                                     // 0x0C88(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerKeep");
		return ptr;
	}



	void StreamOutStuff();
	void StreamInStuff();
	void SetPermaniteAvailability(bool bAvailable);
	void ServerOnContainerItemsChosen(class AKeepItemContainer* Container, TArray<struct FString> ItemTemplateIDs);
	void RestoreContainers();
	void ResetContainers();
	void DumpItemData();
	void ClientUnloadFoundations();
	void ClientSetPermaniteAvailability(bool bAvailable);
};

// Class FortniteGame.FortPlayerControllerManor
// 0x0024 (FullSize[0x0C94] - InheritedSize[0x0C70])
class AFortPlayerControllerManor : public AFortPlayerControllerZone
{
public:
	unsigned char                                      UnknownData_W0IQ[0x24];                                    // 0x0C70(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerManor");
		return ptr;
	}



	void ServerOnUnlockPortalComplete(class AManorPortal* ManorPortal);
	void ServerOnManorChoiceCompleted(int ChosenItem);
	void ClientOpenManorPortalUnlockMenu(class AManorPortal* ManorPortal);
};

// Class FortniteGame.FortPlayerControllerOutpost
// 0x0124 (FullSize[0x0D94] - InheritedSize[0x0C70])
class AFortPlayerControllerOutpost : public AFortPlayerControllerZone
{
public:
	struct FScriptMulticastDelegate                    OnItemFabricated;                                          // 0x0C70(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DPXT[0xC];                                     // 0x0C7C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortOutpostItemDefinition*                  StructureBeingUpgraded;                                    // 0x0C88(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                LevelBeforeUpgrade;                                        // 0x0C8C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                PrestigeLevel;                                             // 0x0C90(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortWorldItemDefinition*                    ItemPendingToFabricate;                                    // 0x0C94(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LBPE[0x10];                                    // 0x0C98(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortWorldItem*                              FabricatedItemPendingForNotification;                      // 0x0CA8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RMTZ[0x8];                                     // 0x0CAC(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int64_t                                            DisintegrationStartTime;                                   // 0x0CB4(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                QuantumGooCompleted;                                       // 0x0CBC(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                QuantumGooIncoming;                                        // 0x0CC0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6ME8[0x8];                                     // 0x0CC4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FDepositedResources>                 PostDepositedResources;                                    // 0x0CCC(0x000C) (Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	int                                                StormShieldLevelDefended;                                  // 0x0CD8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsOutpostOwnerInPIE;                                      // 0x0CDC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7PCL[0x3];                                     // 0x0CDD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UFortOutpostItemDefinition*, TWeakObjectPtr<class AOutpostStructureBase>> CachedStructures;                                          // 0x0CE0(0x0050) ELEMENT_SIZE_MISMATCH (ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<class UFortOutpostItemDefinition*, class UFortWorldItem*> CachedStructureItems;                                      // 0x0D1C(0x0050) ELEMENT_SIZE_MISMATCH (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<class UFortOutpostItemDefinition*, int>       CachedStructureMaxLevels;                                  // 0x0D58(0x0050) ELEMENT_SIZE_MISMATCH (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerOutpost");
		return ptr;
	}



	void UpgradeStructure(class UFortOutpostItemDefinition* StructureToUpgrade);
	void ToggleOwnerInPIE();
	void ShowOutpostVictoryScreenToAll();
	void ServerUpgradeStructure(class UFortOutpostItemDefinition* StructureToUpgrade);
	void ServerUpgradePOST();
	void ServerNotifyPendingFabricationCompleted();
	void ServerLeaveOutpostAsParty();
	void ServerIncreaseOutpostPrestigeLevel();
	void ServerFabricateItem(class UFortWorldItemDefinition* ItemDef);
	void ServerDisintegrateItem(const struct FGuid& ItemGuid, int Count);
	void ServerDepositPOSTResource(const struct FGuid& ItemGuid, int Count);
	void ServerDeactivateCraftingTable();
	void ServerActivateCraftingTable();
	void ServerAbortDisintegration();
	void ServeMoveItemToStorageVault(const struct FFortItemEntry& NewlyStoredItem);
	void ServeMoveItemFromStorageVault(const struct FFortItemEntry& NewlyCollectedItem);
	void OnRep_QuantumGooIncoming();
	void OnRep_QuantumGooCompleted();
	void OnRep_PostDepositedResources();
	void OnRep_DisintegrationStartTime();
	bool IsOutpostOwner();
	bool IsFabricationPending();
	void GetUpgradeStructureCost(class UFortOutpostItemDefinition* OutpostStructure, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	int GetStructureMaxLevel(class UFortOutpostItemDefinition* OutpostStructure);
	int GetStructureLevel(class UFortOutpostItemDefinition* OutpostStructure);
	int GetStormShieldLevelDefended();
	class UFortWorldItemDefinition* GetPendingItemToFabricate();
	float GetPendingFabricationProgress();
	void DumpInventory();
	void ClientShowVictoryScreen();
	void ClientOnStructureLevelChanged(class UFortOutpostItemDefinition* UpgradedStructure, int InLevelBeforeUpgrade);
	void ClientExecuteInventoryItem(const struct FGuid& ItemGuid, float Delay);
	bool CanUpgradeStructure(class UFortOutpostItemDefinition* OutpostStructure, bool bLog);
};

// Class FortniteGame.FortPlayerControllerPvP
// 0x0000 (FullSize[0x0C70] - InheritedSize[0x0C70])
class AFortPlayerControllerPvP : public AFortPlayerControllerZone
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerPvP");
		return ptr;
	}



	void ClientShowGameOverWidget(TEnumAsByte<FortniteGame_EFortPvPGameResult> GameResult);
	void ClientReceiveKillNotification(class AFortPlayerStateZone* Killer, class AFortPlayerStateZone* Killed);
};

// Class FortniteGame.FortPlayerControllerPvPBaseDestruction
// 0x0000 (FullSize[0x0C70] - InheritedSize[0x0C70])
class AFortPlayerControllerPvPBaseDestruction : public AFortPlayerControllerPvP
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerPvPBaseDestruction");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerControllerPvPFake
// 0x0064 (FullSize[0x0CD4] - InheritedSize[0x0C70])
class AFortPlayerControllerPvPFake : public AFortPlayerControllerPvPBaseDestruction
{
public:
	float                                              LastRandomTurnTime;                                        // 0x0C70(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPickLootTime;                                          // 0x0C74(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPickEnemyTime;                                         // 0x0C78(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EnemyLastSeenTime;                                         // 0x0C7C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastGoodInteraction;                                       // 0x0C80(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastCheckGoodTarget;                                       // 0x0C84(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastQuickbarTime;                                          // 0x0C88(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastBuildOrCraftTime;                                      // 0x0C8C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastRespawnAttemptTime;                                    // 0x0C90(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasBuildPending;                                          // 0x0C94(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHasBuildFirePending;                                      // 0x0C95(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsBuildingFloor;                                          // 0x0C96(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6J62[0x1];                                     // 0x0C97(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BuildWaitTime;                                             // 0x0C98(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortResourceType>        PickedBuildingMaterial;                                    // 0x0C9C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OW2E[0x3];                                     // 0x0C9D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastJumpTime;                                              // 0x0CA0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastLookInput;                                             // 0x0CA4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIPawn*                                 EnemyTarget;                                               // 0x0CA8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                                 PickupTarget;                                              // 0x0CAC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingContainer*                          LootTarget;                                                // 0x0CB0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingContainer*                          SearchTarget;                                              // 0x0CB4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPawnHealth;                                            // 0x0CB8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasHadPawn;                                               // 0x0CBC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9H3J[0x3];                                     // 0x0CBD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ViewLocation;                                              // 0x0CC0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                             MyPawn;                                                    // 0x0CCC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JQ25[0x4];                                     // 0x0CD0(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerPvPFake");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerControllerZoneFake
// 0x0064 (FullSize[0x0CD4] - InheritedSize[0x0C70])
class AFortPlayerControllerZoneFake : public AFortPlayerControllerZone
{
public:
	float                                              LastRandomTurnTime;                                        // 0x0C70(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPickLootTime;                                          // 0x0C74(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPickEnemyTime;                                         // 0x0C78(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EnemyLastSeenTime;                                         // 0x0C7C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastGoodInteraction;                                       // 0x0C80(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastCheckGoodTarget;                                       // 0x0C84(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastQuickbarTime;                                          // 0x0C88(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastBuildOrCraftTime;                                      // 0x0C8C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastRespawnAttemptTime;                                    // 0x0C90(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasBuildPending;                                          // 0x0C94(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHasBuildFirePending;                                      // 0x0C95(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bIsBuildingFloor;                                          // 0x0C96(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PN4P[0x1];                                     // 0x0C97(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BuildWaitTime;                                             // 0x0C98(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortResourceType>        PickedBuildingMaterial;                                    // 0x0C9C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5LJS[0x3];                                     // 0x0C9D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastJumpTime;                                              // 0x0CA0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastLookInput;                                             // 0x0CA4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIPawn*                                 EnemyTarget;                                               // 0x0CA8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                                 PickupTarget;                                              // 0x0CAC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingContainer*                          LootTarget;                                                // 0x0CB0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingContainer*                          SearchTarget;                                              // 0x0CB4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastPawnHealth;                                            // 0x0CB8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasHadPawn;                                               // 0x0CBC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1BSA[0x3];                                     // 0x0CBD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ViewLocation;                                              // 0x0CC0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                             MyPawn;                                                    // 0x0CCC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2P7K[0x4];                                     // 0x0CD0(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerZoneFake");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerMannequin
// 0x00C0 (FullSize[0x0324] - InheritedSize[0x0264])
class AFortPlayerMannequin : public ASkeletalMeshActor
{
public:
	class UCustomCharacterPart*                        CharacterParts[0x7];                                       // 0x0264(0x001C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomCharacterPart*                        CharacterPartList[0x6];                                    // 0x0280(0x0018) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomColorSwatch*                          CharacterPartColorSwatches[0x7];                           // 0x0298(0x001C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomColorSwatch*                          ColorSwatchesForCharacterParts[0x6];                       // 0x02B4(0x0018) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomColorComponent*                       AccessoryColorSwatchHandler[0x6];                          // 0x02CC(0x0018) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomColorSwatch*                          ColorSwatches[0x2];                                        // 0x02E4(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               WeaponSkeletalMesh;                                        // 0x02EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       WeaponAttachSocket;                                        // 0x02F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GKNI[0x1C];                                    // 0x02F8(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FMorphValuePair>                     MorphTargets;                                              // 0x0314(0x000C) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               bInitialized;                                              // 0x0320(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AGGD[0x3];                                     // 0x0321(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerMannequin");
		return ptr;
	}



	void UpdateMorphTargets();
	void ToggleGenderBP();
	bool SetWeaponSkeletalMesh(class USkeletalMesh* SkeletalMesh);
	void SetSkeletalMesh(class USkeletalMesh* SkeletalMesh);
	bool SetPart(TEnumAsByte<FortniteGame_EFortCustomPartType> Part, class UCustomCharacterPart* PartAsset);
	bool RemovePart(TEnumAsByte<FortniteGame_EFortCustomPartType> Part);
	TEnumAsByte<FortniteGame_EFortCustomGender> GetGender();
	bool CyclePartBP(TEnumAsByte<FortniteGame_EFortCustomPartType> Part, bool bNextPart);
};

// Class FortniteGame.FortPlayerStart
// 0x0004 (FullSize[0x0260] - InheritedSize[0x025C])
class AFortPlayerStart : public APlayerStart
{
public:
	class UParticleSystemComponent*                    StartParticleComponent;                                    // 0x025C(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerStart");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerStateFrontEnd
// 0x0000 (FullSize[0x0614] - InheritedSize[0x0614])
class AFortPlayerStateFrontEnd : public AFortPlayerState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateFrontEnd");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerStateZone
// 0x014C (FullSize[0x0760] - InheritedSize[0x0614])
class AFortPlayerStateZone : public AFortPlayerState
{
public:
	unsigned char                                      UnknownData_3ULK[0x1C];                                    // 0x0614(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FReplicatedStatValues                       RS_Zone_Old[0x21];                                         // 0x0630(0x0108) (Transient, Protected, NativeAccessSpecifierProtected)
	class AFortCarriedObject*                          CarriedObject;                                             // 0x0738(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                OldTotalScoreStat;                                         // 0x073C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bInvincibleDueToUI;                                        // 0x0740(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bHasInitializedHomebaseBuffs;                              // 0x0741(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F7QR[0x2];                                     // 0x0742(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentHealth;                                             // 0x0744(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHealth;                                                 // 0x0748(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentShield;                                             // 0x074C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxShield;                                                 // 0x0750(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAccumulatedItemEntry>               AccumulatedItems;                                          // 0x0754(0x000C) (Net, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateZone");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerStateKeep
// 0x0000 (FullSize[0x0760] - InheritedSize[0x0760])
class AFortPlayerStateKeep : public AFortPlayerStateZone
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateKeep");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerStateManor
// 0x0000 (FullSize[0x0760] - InheritedSize[0x0760])
class AFortPlayerStateManor : public AFortPlayerStateZone
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateManor");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerStateOutpost
// 0x0008 (FullSize[0x0768] - InheritedSize[0x0760])
class AFortPlayerStateOutpost : public AFortPlayerStateZone
{
public:
	bool                                               bCanEditOutpost;                                           // 0x0760(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PNF7[0x3];                                     // 0x0761(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CraftingTableItemsRemaing;                                 // 0x0764(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateOutpost");
		return ptr;
	}



	void SetCanEditOutpost(class AFortPlayerStateOutpost* InPlayer, bool bCanEdit);
	void ServerSetCanEditOutpost(class AFortPlayerStateOutpost* InPlayer, bool bCanEdit);
	void OnRep_CraftingTableItemsRemaing();
	void OnRep_CanEditOutpost();
	bool CanEditOutpost();
};

// Class FortniteGame.FortPlayerStatePvP
// 0x0000 (FullSize[0x0760] - InheritedSize[0x0760])
class AFortPlayerStatePvP : public AFortPlayerStateZone
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerStatePvP");
		return ptr;
	}



};

// Class FortniteGame.FortPvPFunctionLibrary
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortPvPFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPFunctionLibrary");
		return ptr;
	}



	void STATIC_SetMatchLevel(class UObject* WorldContextObject, int MatchLevel);
	class AStrategicBuildingActor* STATIC_GetTeamStrategicBuildingActor(class UObject* WorldContextObject, TEnumAsByte<FortniteGame_EFortTeam> Team, const struct FTeamStrategicBuildingHandle& SBAHandle);
	class AFortPvPBaseCornerstone* STATIC_GetTeamCornerstone(class UObject* WorldContextObject, TEnumAsByte<FortniteGame_EFortTeam> Team);
	int STATIC_GetRoundTimeAccumulated(class UObject* WorldContextObject);
	int STATIC_GetMatchLevel(class UObject* WorldContextObject);
	void STATIC_GetDifficultyRowNamesFromPvPRating(TArray<struct FName>* OutDifficultyRows, float InPvPRating);
	class AFortTeamInfoPvPBaseDestruction* STATIC_GetBaseDestructionTeamInfo(class UObject* WorldContextObject, TEnumAsByte<FortniteGame_EFortTeam> Team);
	void STATIC_DestroyAllFortPickupsWithItem(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinitionToCheck);
};

// Class FortniteGame.FortPvPPlayerStart
// 0x000C (FullSize[0x0268] - InheritedSize[0x025C])
class AFortPvPPlayerStart : public APlayerStart
{
public:
	unsigned char                                      UnknownData_EPZQ[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortTeam>                Team;                                                      // 0x0260(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CJB9[0x3];                                     // 0x0261(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bDynamicStartLocation : 1;                                 // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2ZVU[0x3];                                     // 0x0265(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPvPPlayerStart");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_AllEnemies
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_AllEnemies : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_AllEnemies");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_AllGoals
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_AllGoals : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_AllGoals");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_AllPlayers
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_AllPlayers : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_AllPlayers");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_EncounterFallbackTarget
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_EncounterFallbackTarget : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterFallbackTarget");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_EncounterGoalsCenterLocation
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_EncounterGoalsCenterLocation : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterGoalsCenterLocation");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_EncounterGoalsOnGround
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_EncounterGoalsOnGround : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterGoalsOnGround");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_EncounterPrimaryAssignmentGoals
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_EncounterPrimaryAssignmentGoals : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterPrimaryAssignmentGoals");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_EncounterQueryActor
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_EncounterQueryActor : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterQueryActor");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_EncounterRandomDirection
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_EncounterRandomDirection : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterRandomDirection");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_EncounterTargetObjective
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_EncounterTargetObjective : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterTargetObjective");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_Goal
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_Goal : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_Goal");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_GoalProviderRootAssignmentGoals
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_GoalProviderRootAssignmentGoals : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_GoalProviderRootAssignmentGoals");
		return ptr;
	}



};

// Class FortniteGame.FortQueryContext_NearbyFriends
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortQueryContext_NearbyFriends : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_NearbyFriends");
		return ptr;
	}



};

// Class FortniteGame.FortQueryGenerator_Buildings
// 0x00C8 (FullSize[0x00FC] - InheritedSize[0x0034])
class UFortQueryGenerator_Buildings : public UEnvQueryGenerator
{
public:
	class UClass*                                      BuildingGridVolumeCenter;                                  // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue                     HorizontalBuildingCellRadius;                              // 0x0038(0x001C) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue                     BuildingCellsAbove;                                        // 0x0054(0x001C) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue                     BuildingCellsBelow;                                        // 0x0070(0x001C) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue                    bIncludeWalls;                                             // 0x008C(0x001C) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue                    bIncludeFloors;                                            // 0x00A8(0x001C) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue                    bIncludeCenterCell;                                        // 0x00C4(0x001C) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue                     MaxBuildingActorsPerVolumeCenterToCollect;                 // 0x00E0(0x001C) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_Buildings");
		return ptr;
	}



};

// Class FortniteGame.FortQueryGenerator_ValidSpawnRiftActors
// 0x001C (FullSize[0x0050] - InheritedSize[0x0034])
class UFortQueryGenerator_ValidSpawnRiftActors : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderIntValue                     NumAIForGroup;                                             // 0x0034(0x001C) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_ValidSpawnRiftActors");
		return ptr;
	}



};

// Class FortniteGame.FortQueryItemType_Goal
// 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
class UFortQueryItemType_Goal : public UEnvQueryItemType_ActorBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryItemType_Goal");
		return ptr;
	}



};

// Class FortniteGame.FortQueryItemType_GraphPoint
// 0x0000 (FullSize[0x0020] - InheritedSize[0x0020])
class UFortQueryItemType_GraphPoint : public UEnvQueryItemType_Point
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryItemType_GraphPoint");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_CanHitWithGameplayAbility
// 0x0020 (FullSize[0x012C] - InheritedSize[0x010C])
class UFortQueryTest_CanHitWithGameplayAbility : public UEnvQueryTest
{
public:
	class UClass*                                      AIsUsingAbility;                                           // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AbilityTargets;                                            // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       GameplayAbilityTag;                                        // 0x0114(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_CanHitWithGameplayAbility");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_BuildingCriteria
// 0x01C4 (FullSize[0x02E0] - InheritedSize[0x011C])
class UFortQueryTest_BuildingCriteria : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue                   ScoreForGroundSupportedFloor;                              // 0x011C(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   ScoreForBeingGroundSupported;                              // 0x0138(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   ScoreForTraps;                                             // 0x0154(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   ScoreForWalls;                                             // 0x0170(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   ScoreForNavigableOpening;                                  // 0x018C(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FFortAIAssignmentIdentifier                 RootAssignmentID;                                          // 0x01A8(0x0020) (Edit, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue                    bPreferCloserToRootAssignment;                             // 0x01C8(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   ScoreForDistanceFromClosestRootAssignmentGoal;             // 0x01E4(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   MinDistanceForDistanceScoring;                             // 0x0200(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   MaxDistanceForDistanceScoring;                             // 0x021C(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   MaxHealthScore;                                            // 0x0238(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue                    bPreferHigherHealth;                                       // 0x0254(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   ClampMaxHealthValue;                                       // 0x0270(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   ClampMinHealthValue;                                       // 0x028C(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue                    bPreferHigherHealthPercentage;                             // 0x02A8(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   MaxHealthPercentageScore;                                  // 0x02C4(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_BuildingCriteria");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_CanAttackTarget
// 0x0000 (FullSize[0x011C] - InheritedSize[0x011C])
class UFortQueryTest_CanAttackTarget : public UFortQueryTest_GoalBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_CanAttackTarget");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_CanBeDamaged
// 0x0000 (FullSize[0x011C] - InheritedSize[0x011C])
class UFortQueryTest_CanBeDamaged : public UFortQueryTest_GoalBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_CanBeDamaged");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_GoalActorDot
// 0x000C (FullSize[0x0128] - InheritedSize[0x011C])
class UFortQueryTest_GoalActorDot : public UFortQueryTest_GoalBase
{
public:
	class UClass*                                      LineATo;                                                   // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      LineBTo;                                                   // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortTestGoalActorDot>    TestMode;                                                  // 0x0124(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAbsoluteValue;                                            // 0x0125(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O6TO[0x2];                                     // 0x0126(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalActorDot");
		return ptr;
	}



};

// Class FortniteGame.FortGameplayTagVolume
// 0x001C (FullSize[0x0284] - InheritedSize[0x0268])
class AFortGameplayTagVolume : public AVolume
{
public:
	unsigned char                                      UnknownData_XZZM[0x4];                                     // 0x0268(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       TagsToApplyOnSave;                                         // 0x026C(0x0018) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameplayTagVolume");
		return ptr;
	}



};

// Class FortniteGame.FortGameSessionDedicated
// 0x0038 (FullSize[0x02F0] - InheritedSize[0x02B8])
class AFortGameSessionDedicated : public AFortGameSession
{
public:
	unsigned char                                      UnknownData_YVST[0x38];                                    // 0x02B8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameSessionDedicated");
		return ptr;
	}



};

// Class FortniteGame.FortGameState
// 0x0150 (FullSize[0x03D0] - InheritedSize[0x0280])
class AFortGameState : public AGameState
{
public:
	struct FString                                     WorldDisplayName;                                          // 0x0280(0x000C) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     CurrentWUID;                                               // 0x028C(0x000C) (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WorldDaysElapsed;                                          // 0x0298(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ParTime;                                                   // 0x029C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WorldLevel;                                                // 0x02A0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CraftingBonus;                                             // 0x02A4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentReadyToContinueTimer;                               // 0x02A8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TeamCount;                                                 // 0x02AC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TeamSize;                                                  // 0x02B0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                VoteTimeLeft;                                              // 0x02B4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ABK8[0xC];                                     // 0x02B8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortRequestedGameplayAction> GameplayActionVoteResult;                                  // 0x02C4(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QZHF[0x3];                                     // 0x02C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortFeedbackManager*                        FeedbackManager;                                           // 0x02C8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMissionManager*                         MissionManager;                                            // 0x02CC(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortScriptedActionManager*                  ScriptedActionManager;                                     // 0x02D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCachedGameDifficultyData                   CachedGameDifficultyData;                                  // 0x02D4(0x0050) (Net, Protected, NativeAccessSpecifierProtected)
	class AFortLobbyBeaconState*                       LobbyGameState;                                            // 0x0324(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortWorldManager*                           WorldManager;                                              // 0x0328(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortDayNightLightingAndFog*                 FortDayPhaseHandler;                                       // 0x032C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortGameplayState>       GameplayState;                                             // 0x0330(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6GQC[0x3];                                     // 0x0331(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortInventory*                              SharedInventory;                                           // 0x0334(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                       LocalGameSessionID;                                        // 0x0338(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FOnTimeHitInfo>                      TimeOfDayCallbacks;                                        // 0x0348(0x000C) (ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5M5D[0x1C];                                    // 0x0354(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortVisibilityManager*                      VisibilityManager;                                         // 0x0370(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortTeamInfo*>                       Teams;                                                     // 0x0374(0x000C) (Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTeamChangeRequest>                  PendingTeamChangeRequests;                                 // 0x0380(0x000C) (Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bAllowPendingTeamChangeRequests;                           // 0x038C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IO0N[0x3F];                                    // 0x038D(0x003F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortGlobalAbilityTargetingActor*            GlobalAbilityTargetingActor;                               // 0x03CC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameState");
		return ptr;
	}



	void OnRep_WorldManager();
	void OnRep_MissionManager();
	void OnRep_GameplayState();
	void OnRep_FeedbackManager();
	void OnRep_DayPhaseHandler();
	void OnRep_CurrentWUID();
	void HandleSharedInventoryUpdate();
	class AFortDayNightLightingAndFog* GetDayPhaseHandler();
};

// Class FortniteGame.FortGameStateFrontEnd
// 0x0000 (FullSize[0x03D0] - InheritedSize[0x03D0])
class AFortGameStateFrontEnd : public AFortGameState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameStateFrontEnd");
		return ptr;
	}



};

// Class FortniteGame.FortGameStateZone
// 0x00E8 (FullSize[0x04B8] - InheritedSize[0x03D0])
class AFortGameStateZone : public AFortGameState
{
public:
	int                                                PawnIDCount;                                               // 0x03D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WaitingToLeaveZoneTimeLeft;                                // 0x03D4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HostilityMeterPercent;                                     // 0x03D8(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntensityPercent;                                          // 0x03DC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnPointsCap;                                            // 0x03E0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnPointsAllocated;                                      // 0x03E4(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxTotalAI;                                                // 0x03E8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxEncounterAI;                                            // 0x03EC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxEncounterSP;                                            // 0x03F0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9PSG[0x1C];                                    // 0x03F4(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TotalPlayerStructures;                                     // 0x0410(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxPlayerStructures;                                       // 0x0414(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortAbilitySystemComponent*>         GlobalGameplayEventListeners;                              // 0x0418(0x000C) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UBuildingStructuralSupportSystem*            StructuralSupportSystem;                                   // 0x0424(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                         ZoneDifficultyInfoRow;                                     // 0x0428(0x000C) (Net, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                               bZoneDifficultyInfoRowManuallySet;                         // 0x0434(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U58B[0x3];                                     // 0x0435(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortZoneTheme*                              ZoneTheme;                                                 // 0x0438(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortThreatVisualsManager*                   ThreatVisualsManager;                                      // 0x043C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortThreatParticleActor*                    ThreatParticleActor;                                       // 0x0440(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bDrawRunVariationDebug;                                    // 0x0444(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D5GV[0x3];                                     // 0x0445(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AFortAIPawn*>                         PawnVariationList;                                         // 0x0448(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int                                                VariationIndex;                                            // 0x0454(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              GameDifficulty;                                            // 0x0458(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S4TW[0x10];                                    // 0x045C(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPlayerBuildableClassContainer              PlayerBuildableClasses[0x4];                               // 0x046C(0x0030) (Transient, Protected, NativeAccessSpecifierProtected)
	class AFortInGameMapManager*                       UIMapManager;                                              // 0x049C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       ScoringTableRowName;                                       // 0x04A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       TheaterName;                                               // 0x04A8(0x0018) ELEMENT_SIZE_MISMATCH (Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	int                                                TheaterSlot;                                               // 0x04B4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameStateZone");
		return ptr;
	}



	void ServerFireAIDirectorEvent(TEnumAsByte<FortniteGame_EFortAIDirectorEvent> Event, class UObject* EventSource, class UObject* EventTarget, float EventMultiplier);
	void OnRep_UIMapManager();
	void OnRep_TheaterNameUpdated();
	void OnRep_PlayerStructuresChanged();
	class AFortInGameMapManager* GetUIMapManager();
	float GetGameDifficulty();
};

// Class FortniteGame.FortGameStateKeep
// 0x004C (FullSize[0x0504] - InheritedSize[0x04B8])
class AFortGameStateKeep : public AFortGameStateZone
{
public:
	struct FPermaniteBoundariesInfo                    PermaniteBoundariesData;                                   // 0x04B8(0x0014) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZDFR[0x38];                                    // 0x04CC(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameStateKeep");
		return ptr;
	}



	void OnRep_PermaniteBoundariesInfo();
};

// Class FortniteGame.FortGameStateManor
// 0x004C (FullSize[0x0504] - InheritedSize[0x04B8])
class AFortGameStateManor : public AFortGameStateZone
{
public:
	unsigned char                                      UnknownData_XJTP[0x4C];                                    // 0x04B8(0x004C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameStateManor");
		return ptr;
	}



};

// Class FortniteGame.FortGameStateOutpost
// 0x0004 (FullSize[0x04BC] - InheritedSize[0x04B8])
class AFortGameStateOutpost : public AFortGameStateZone
{
public:
	bool                                               bOutpostDefenseActive;                                     // 0x04B8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1USN[0x3];                                     // 0x04B9(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameStateOutpost");
		return ptr;
	}



	void SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo);
};

// Class FortniteGame.FortGameStatePvP
// 0x00A0 (FullSize[0x0558] - InheritedSize[0x04B8])
class AFortGameStatePvP : public AFortGameStateZone
{
public:
	int                                                RoundTimeLimit;                                            // 0x04B8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RoundTimeAccumulated;                                      // 0x04BC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZZ7J[0x4];                                     // 0x04C0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                RoundTimeCriticalThreshold;                                // 0x04C4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RoundTimeRemaining;                                        // 0x04C8(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                StalemateTimeLimit;                                        // 0x04CC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                StalemateTimeRemaining;                                    // 0x04D0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RestartTimeRemaining;                                      // 0x04D4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class USoundBase>                        RoundTimeExpiringSound;                                    // 0x04D8(0x0018) (Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class USoundBase>                        StalemateTimeExpiringSound;                                // 0x04F0(0x0018) (Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingCapturePointActor*>          CapturePoints;                                             // 0x0508(0x000C) (Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class ABuildingItemCollectorActor*                 ItemCollector;                                             // 0x0514(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                StartMatchDelayTimer;                                      // 0x0518(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bGateCraftingOnTeamLevel : 1;                              // 0x051C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LE5T[0x1F];                                    // 0x051D(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 MatchLevelCurve;                                           // 0x053C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MatchLevel;                                                // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHandleMatchLevelChanged;                                 // 0x0544(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	int                                                TotalHomebaseRating;                                       // 0x0550(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AverageHomebaseRating;                                     // 0x0554(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameStatePvP");
		return ptr;
	}



	void SetMatchLevel(int InMatchLevel);
	void SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo);
	void OnRep_StalemateTimeRemaining();
	void OnRep_RoundTimeRemaining();
	void OnRep_MatchLevel();
	void OnRep_ItemCollector();
	int GetTotalHomebaseRating();
	int GetRoundTimeAccumulated();
	int GetMatchLevel();
	class ABuildingItemCollectorActor* GetItemCollector();
	int GetAverageHomebaseRating();
};

// Class FortniteGame.FortGameStatePvPBaseDestruction
// 0x00B8 (FullSize[0x0610] - InheritedSize[0x0558])
class AFortGameStatePvPBaseDestruction : public AFortGameStatePvP
{
public:
	struct FName                                       SessionXPRowName;                                          // 0x0558(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRichCurve                                  TeamLevelToSessionXPCurve;                                 // 0x0560(0x0054) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FRichCurve                                  SessionXPToTeamLevelCurve;                                 // 0x05B4(0x0054) (Transient, Protected, NativeAccessSpecifierProtected)
	int                                                MaxTeamLevel;                                              // 0x0608(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxTeamExperience;                                         // 0x060C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameStatePvPBaseDestruction");
		return ptr;
	}



	int GetTeamLevelForExperienceAmount(int Experience);
	int GetMaxTeamLevel();
	int GetMaxTeamExperience();
	int GetExperienceRequiredForTeamLevel(int TeamLevel);
};

// Class FortniteGame.FortGameUserSettings
// 0x005C (FullSize[0x00C8] - InheritedSize[0x006C])
class UFortGameUserSettings : public UGameUserSettings
{
public:
	float                                              MouseSensitivity;                                          // 0x006C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MusicVolume;                                               // 0x0070(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              SoundFXVolume;                                             // 0x0074(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DialogVolume;                                              // 0x0078(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ChatVolume;                                                // 0x007C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                FortVersion;                                               // 0x0080(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8Y8R[0x1C];                                    // 0x0084(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               RememberMeCheckbox;                                        // 0x00A0(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_24RY[0x3];                                     // 0x00A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     RememberMeToken;                                           // 0x00A4(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     LastLoginEmail;                                            // 0x00B0(0x000C) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMotionBlur;                                               // 0x00BC(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bShowFPS;                                                  // 0x00BD(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JIML[0x2];                                     // 0x00BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                InitialBenchmarkState;                                     // 0x00C0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableMouseAcceleration;                                 // 0x00C4(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseMetal;                                                 // 0x00C5(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CWDU[0x2];                                     // 0x00C6(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameUserSettings");
		return ptr;
	}



};

// Class FortniteGame.FortGameViewportClient
// 0x0018 (FullSize[0x01CC] - InheritedSize[0x01B4])
class UFortGameViewportClient : public UGameViewportClient
{
public:
	struct FText                                       NetworkFailureMessage;                                     // 0x01B4(0x0018) ELEMENT_SIZE_MISMATCH (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MQXD[0xC];                                     // 0x01C0(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGameViewportClient");
		return ptr;
	}



};

// Class FortniteGame.FortPlayerInput
// 0x0010 (FullSize[0x02F0] - InheritedSize[0x02E0])
class UFortPlayerInput : public UPlayerInput
{
public:
	TArray<struct FInputActionKeyMapping>              ActionMappingsPreset1;                                     // 0x02E0(0x000C) (Edit, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<FortniteGame_EFortInputPreset>         ActivePreset;                                              // 0x02EC(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ESYK[0x3];                                     // 0x02ED(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortPlayerInput");
		return ptr;
	}



};

// Class FortniteGame.FortClientSettingsRecord
// 0x0060 (FullSize[0x0098] - InheritedSize[0x0038])
class UFortClientSettingsRecord : public UFortGenericRecord
{
public:
	unsigned char                                      UnknownData_AA7C[0x1];                                     // 0x0038(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortInputPreset>         InputPreset;                                               // 0x0039(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VNAI[0x2];                                     // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFortActionKeyMapping>               UserActionBindings;                                        // 0x003C(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortActionKeyMapping>               DisabledActionBindings;                                    // 0x0048(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bInvertedMouse;                                            // 0x0054(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bToggleSprint;                                             // 0x0055(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bAutoEquipBetterItems;                                     // 0x0056(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseFirstPersonCamera;                                     // 0x0057(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TEnumAsByte<Party_EPartyType>                      LastPartyType;                                             // 0x0058(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLastLeaderInvitesOnly;                                    // 0x0059(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bLastLeaderFriendsOnly;                                    // 0x005A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4CHS[0x1];                                     // 0x005B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bSaveToCloud : 1;                                          // 0x005C(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCloudIsBusy : 1;                                          // 0x005C(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A5DU[0x3B];                                    // 0x005D(0x003B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortClientSettingsRecord");
		return ptr;
	}



};

// Class FortniteGame.FortGlobalAbilityTargetingActor
// 0x0000 (FullSize[0x0240] - InheritedSize[0x0240])
class AFortGlobalAbilityTargetingActor : public AInfo
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGlobalAbilityTargetingActor");
		return ptr;
	}



};

// Class FortniteGame.FortGlobalEnvironmentAbilityActor
// 0x000C (FullSize[0x024C] - InheritedSize[0x0240])
class AFortGlobalEnvironmentAbilityActor : public AInfo
{
public:
	unsigned char                                      UnknownData_CBIJ[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                    // 0x0244(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDamageSet*                              DamageSet;                                                 // 0x0248(0x0004) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortGlobalEnvironmentAbilityActor");
		return ptr;
	}



};

// Class FortniteGame.FortHealthBarComponent
// 0x0024 (FullSize[0x01D0] - InheritedSize[0x01AC])
class UFortHealthBarComponent : public USceneComponent
{
public:
	class ABuildingActor*                              BuildingActorOwner;                                        // 0x01AC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       DisplayText;                                               // 0x01B0(0x0018) ELEMENT_SIZE_MISMATCH (Edit, Net, DisableEditOnInstance, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsHealthBarVisible;                                       // 0x01BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bClampToScreen;                                            // 0x01BD(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VG1W[0x2];                                     // 0x01BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveLinearColor*                           HealthBarColorCurve;                                       // 0x01C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CPP0[0xC];                                     // 0x01C4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHealthBarComponent");
		return ptr;
	}



	void SetHealthBarWidgetVisibility(bool bIsVisible);
	void SetHealthBarVisibility(bool bNewVisibleState);
	void SetHealthBarDisplayText(const struct FText& NewDisplayText);
	void OnRep_IsVisible();
	void OnRep_DisplayText();
};

// Class FortniteGame.FortHexMapMarkerBase
// 0x0014 (FullSize[0x0254] - InheritedSize[0x0240])
class AFortHexMapMarkerBase : public AActor
{
public:
	TArray<class UMaterialInstanceDynamic*>            CurrentMIDs;                                               // 0x0240(0x000C) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UAnimationAsset*                             IdleAnimation;                                             // 0x024C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      SkelMeshComponent;                                         // 0x0250(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHexMapMarkerBase");
		return ptr;
	}



};

// Class FortniteGame.FortHexMapPlayerMarker
// 0x006C (FullSize[0x02C0] - InheritedSize[0x0254])
class AFortHexMapPlayerMarker : public AFortHexMapMarkerBase
{
public:
	class UCustomColorComponent*                       AccessoryColorSwatchHandler[0x6];                          // 0x0254(0x0018) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      CharacterPartSkeletalMeshComponents[0x6];                  // 0x026C(0x0018) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomCharacterPart*                        PreviousCharacterParts[0x6];                               // 0x0284(0x0018) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACustomCharacterPartModifier*                CharacterPartModifiers[0x6];                               // 0x029C(0x0018) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerState*                            PlayerState;                                               // 0x02B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KY4D[0x4];                                     // 0x02BC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHexMapPlayerMarker");
		return ptr;
	}



};

// Class FortniteGame.FortHomebaseBuildingDataTable
// 0x0004 (FullSize[0x0060] - InheritedSize[0x005C])
class UFortHomebaseBuildingDataTable : public UDataTable
{
public:
	class UClass*                                      GameplayEffectClass;                                       // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHomebaseBuildingDataTable");
		return ptr;
	}



};

// Class FortniteGame.FortHomebaseBuildingStaticDataTable
// 0x000C (FullSize[0x0068] - InheritedSize[0x005C])
class UFortHomebaseBuildingStaticDataTable : public UDataTable
{
public:
	TArray<struct FHomebaseBuildingStaticEffectData>   GameplayEffects;                                           // 0x005C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHomebaseBuildingStaticDataTable");
		return ptr;
	}



};

// Class FortniteGame.FortHomeTeleporterInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortHomeTeleporterInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHomeTeleporterInterface");
		return ptr;
	}



	void OnHomeTeleporterUnboundServer(class AFortPlayerPawn* PlayerPawn, class AActor* NewHomeActor);
	void OnHomeTeleporterUnbound(class AFortPlayerPawn* PlayerPawn, class AActor* NewHomeActor);
	void OnHomeTeleporterBoundServer(class AFortPlayerPawn* PlayerPawn, class AActor* OldHomeActor);
	void OnHomeTeleporterBound(class AFortPlayerPawn* PlayerPawn, class AActor* OldHomeActor);
};

// Class FortniteGame.FortMiniMapPingIndicator
// 0x0068 (FullSize[0x010C] - InheritedSize[0x00A4])
class UFortMiniMapPingIndicator : public UFortMiniMapIndicator
{
public:
	unsigned char                                      UnknownData_PEHP[0x68];                                    // 0x00A4(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMiniMapPingIndicator");
		return ptr;
	}



};

// Class FortniteGame.FortDamageMiniMapIndicator
// 0x0000 (FullSize[0x010C] - InheritedSize[0x010C])
class UFortDamageMiniMapIndicator : public UFortMiniMapPingIndicator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortDamageMiniMapIndicator");
		return ptr;
	}



};

// Class FortniteGame.FortSimpleMiniMapIndicator
// 0x0018 (FullSize[0x00BC] - InheritedSize[0x00A4])
class UFortSimpleMiniMapIndicator : public UFortMiniMapIndicator
{
public:
	unsigned char                                      UnknownData_KS43[0x18];                                    // 0x00A4(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSimpleMiniMapIndicator");
		return ptr;
	}



};

// Class FortniteGame.FortVolumeMiniMapIndicator
// 0x0030 (FullSize[0x00D4] - InheritedSize[0x00A4])
class UFortVolumeMiniMapIndicator : public UFortMiniMapIndicator
{
public:
	unsigned char                                      UnknownData_IL9G[0x30];                                    // 0x00A4(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortVolumeMiniMapIndicator");
		return ptr;
	}



};

// Class FortniteGame.FortSlateHUDIndicator
// 0x0018 (FullSize[0x0064] - InheritedSize[0x004C])
class UFortSlateHUDIndicator : public UFortIndicator
{
public:
	unsigned char                                      UnknownData_7K43[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bClampToScreen;                                            // 0x0050(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZN44[0x13];                                    // 0x0051(0x0013) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSlateHUDIndicator");
		return ptr;
	}



};

// Class FortniteGame.FortHealthBarIndicator
// 0x0030 (FullSize[0x0094] - InheritedSize[0x0064])
class UFortHealthBarIndicator : public UFortSlateHUDIndicator
{
public:
	unsigned char                                      UnknownData_10JO[0x30];                                    // 0x0064(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortHealthBarIndicator");
		return ptr;
	}



};

// Class FortniteGame.FortMissionInfoIndicator
// 0x0020 (FullSize[0x0084] - InheritedSize[0x0064])
class UFortMissionInfoIndicator : public UFortSlateHUDIndicator
{
public:
	unsigned char                                      UnknownData_GFKH[0x20];                                    // 0x0064(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMissionInfoIndicator");
		return ptr;
	}



};

// Class FortniteGame.FortSpottedActorIndicator
// 0x0004 (FullSize[0x0068] - InheritedSize[0x0064])
class UFortSpottedActorIndicator : public UFortSlateHUDIndicator
{
public:
	class AFortPlayerController*                       OwnerPC;                                                   // 0x0064(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSpottedActorIndicator");
		return ptr;
	}



};

// Class FortniteGame.FortIndicatorManager
// 0x003C (FullSize[0x0058] - InheritedSize[0x001C])
class UFortIndicatorManager : public UObject
{
public:
	unsigned char                                      UnknownData_4KNA[0x3C];                                    // 0x001C(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortIndicatorManager");
		return ptr;
	}



};

// Class FortniteGame.FortInGameMapManager
// 0x0110 (FullSize[0x0350] - InheritedSize[0x0240])
class AFortInGameMapManager : public AActor
{
public:
	unsigned char                                      UnknownData_27SE[0x8];                                     // 0x0240(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DelayBetweenDispersions;                                   // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FogResolution;                                             // 0x024C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                VisitedMaskResolution;                                     // 0x0250(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ExploredRadius;                                            // 0x0254(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ExploredFalloffRadius;                                     // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SeenRadius;                                                // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SeenFalloffRadius;                                         // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                VisibilityMaxGradient;                                     // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OffsetZ;                                                   // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MapLayerSize;                                              // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMargin                                     MapMargin;                                                 // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int                                                IconVisibilityFogThreshold;                                // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OpenMapDelayBetweenUpdates;                                // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      SceneCaptureClass;                                         // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      SceneCaptureBlurryClass;                                   // 0x028C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UMaterialInterface>                MapMaterial;                                               // 0x0290(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        CloudBrightnessCurve;                                      // 0x02A8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                        DesaturationFactorCurve;                                   // 0x02B4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              MapOpacityWhenWalking;                                     // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASceneCapture2D*                             SceneCapture;                                              // 0x02C4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASceneCapture2D*                             SceneCaptureBlurry;                                        // 0x02C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YYFY[0x20];                                    // 0x02CC(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  FogMask;                                                   // 0x02EC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H3SY[0x60];                                    // 0x02F0(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortInGameMapManager");
		return ptr;
	}



	void PaintOnFog(const struct FVector& WorldCoords);
	void STATIC_ApplyShowFlags(class USceneCaptureComponent* SceneCaptureComponent);
};

// Class FortniteGame.FortIntensityCurveSequenceProgression
// 0x000C (FullSize[0x0028] - InheritedSize[0x001C])
class UFortIntensityCurveSequenceProgression : public UDataAsset
{
public:
	TArray<struct FFortInstensityCurveSequenceProgression> IntensityCurveSequences;                                   // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortIntensityCurveSequenceProgression");
		return ptr;
	}



};

// Class FortniteGame.FortAlterableItemDefinition
// 0x000C (FullSize[0x043C] - InheritedSize[0x0430])
class UFortAlterableItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortAlterationSlots>                DefaultAlterationSlots;                                    // 0x0430(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAlterableItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortAlterableItem
// 0x0024 (FullSize[0x00A4] - InheritedSize[0x0080])
class UFortAlterableItem : public UFortAccountItem
{
public:
	TArray<struct FFortAlterationSlots>                AlterationSlots;                                           // 0x0080(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FString>                             Alterations;                                               // 0x008C(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAlterationItemDefinition*>       AlterationInstances;                                       // 0x0098(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAlterableItem");
		return ptr;
	}



	int GetNumberOfSlotsForAlterationType(TEnumAsByte<FortniteGame_EFortAlteration> AlterationType);
};

// Class FortniteGame.FortSchematicItemDefinition
// 0x0078 (FullSize[0x04B4] - InheritedSize[0x043C])
class UFortSchematicItemDefinition : public UFortAlterableItemDefinition
{
public:
	TArray<struct FSchematicRequirement>               Requirements;                                              // 0x043C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*                    Result;                                                    // 0x0448(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QuantityProduced;                                          // 0x044C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bConsumeOnUse;                                             // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TS27[0x3];                                     // 0x0451(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TAssetPtr<class USoundBase>                        CraftingSuccessSound;                                      // 0x0454(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CraftingPoints;                                            // 0x046C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableCategoryHandle                    LootLevelData;                                             // 0x0470(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TAssetPtr<class UCurveTable>                       CraftingTimeTable;                                         // 0x0484(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CraftingTimeRowName;                                       // 0x049C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseSchematicDisplayName;                                  // 0x04A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XWP9[0x3];                                     // 0x04A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FEvolutionRequirements>              EvolutionOptions;                                          // 0x04A8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSchematicItemDefinition");
		return ptr;
	}



	float GetCraftingTimeForCharacter(int Level, class AFortPlayerPawn* FortPawn);
	float GetCraftingTime(int Level);
};

// Class FortniteGame.FortSchematicItem
// 0x0008 (FullSize[0x00AC] - InheritedSize[0x00A4])
class UFortSchematicItem : public UFortAlterableItem
{
public:
	bool                                               bGrantedByAbility;                                         // 0x00A4(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YN6Z[0x3];                                     // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                RequiredTeamLevel;                                         // 0x00A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSchematicItem");
		return ptr;
	}



	void GetSchematicRequirements(TArray<struct FSchematicRequirement>* Requirements);
	int GetSchematicQuantityProduced();
	int GetRequiredTeamLevelToCraft();
};

// Class FortniteGame.FortAlterationItem
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UFortAlterationItem : public UFortAccountItem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortAlterationItem");
		return ptr;
	}



	class UFortAlterationItemDefinition* GetAlterationDefinitionBP();
};

// Class FortniteGame.FortCardPackItemDefinition
// 0x0030 (FullSize[0x0460] - InheritedSize[0x0430])
class UFortCardPackItemDefinition : public UFortAccountItemDefinition
{
public:
	struct FString                                     LootTierGroup;                                             // 0x0430(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LootTier;                                                  // 0x043C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsChoicePack;                                             // 0x0440(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JNZ8[0x3];                                     // 0x0441(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DisplayRarityLevel;                                        // 0x0444(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                                    PackImage;                                                 // 0x0448(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                PackColor;                                                 // 0x044C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UFortPackPersonality*                        PackPersonality;                                           // 0x045C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortCardPackItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortWorldItem
// 0x009C (FullSize[0x00DC] - InheritedSize[0x0040])
class UFortWorldItem : public UFortItem
{
public:
	unsigned char                                      UnknownData_FBDS[0x4];                                     // 0x0040(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsTemporaryItem;                                          // 0x0044(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bNeedsPersistentUpdate;                                    // 0x0045(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bPendingPersistentDelete;                                  // 0x0046(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_22HN[0x1];                                     // 0x0047(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortInventory*                              OwnerInventory;                                            // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortItemEntry                              ItemEntry;                                                 // 0x004C(0x007C) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H9IW[0x14];                                    // 0x00C8(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortWorldItem");
		return ptr;
	}



};

// Class FortniteGame.FortQuestItemDefinition
// 0x006C (FullSize[0x049C] - InheritedSize[0x0430])
class UFortQuestItemDefinition : public UFortAccountItemDefinition
{
public:
	TEnumAsByte<FortniteGame_EFortQuestType>           QuestType;                                                 // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SS0H[0x3];                                     // 0x0431(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFortItemQuantityPair>               Rewards;                                                   // 0x0434(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortMcpQuestObjectiveInfo>          Objectives;                                                // 0x0440(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       Prerequisites;                                             // 0x044C(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*                    PrerequisiteQuest;                                         // 0x0464(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         PrerequisiteObjective;                                     // 0x0468(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         Category;                                                  // 0x0474(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FText                                       RewardDescription;                                         // 0x0480(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               bHidden;                                                   // 0x048C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z266[0x3];                                     // 0x048D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortMissionConfigDataParams                MissionConfigMetadata;                                     // 0x0490(0x000C) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQuestItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortTokenType
// 0x0018 (FullSize[0x0448] - InheritedSize[0x0430])
class UFortTokenType : public UFortAccountItemDefinition
{
public:
	TAssetPtr<class UClass>                            ScriptedAction;                                            // 0x0430(0x0018) (Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortTokenType");
		return ptr;
	}



};

// Class FortniteGame.FortStackItemDefinition
// 0x0008 (FullSize[0x0420] - InheritedSize[0x0418])
class UFortStackItemDefinition : public UFortItemDefinition
{
public:
	class UFortItemDefinition*                         ItemDefinition;                                            // 0x0418(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Count;                                                     // 0x041C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortStackItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortConsumableItemDefinition
// 0x0018 (FullSize[0x05D0] - InheritedSize[0x05B8])
class UFortConsumableItemDefinition : public UFortWorldItemDefinition
{
public:
	TArray<struct FConsumeEffectData>                  ConsumeEffects;                                            // 0x05B8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAnimMontage*                                UseAnimation;                                              // 0x05C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UseTime;                                                   // 0x05C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequiresMissingHealth;                                    // 0x05CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7R0A[0x3];                                     // 0x05CD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortConsumableItemDefinition");
		return ptr;
	}



	float GetHealthRestored(int ItemLevel);
	float GetAnimPlayRate();
	void ConsumeItem(const struct FGameplayEventData& EventData);
};

// Class FortniteGame.FortEmoteItemDefinition
// 0x0018 (FullSize[0x05D0] - InheritedSize[0x05B8])
class UFortEmoteItemDefinition : public UFortWorldItemDefinition
{
public:
	struct FText                                       CommandName;                                               // 0x05B8(0x0018) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	class UClass*                                      GameplayAbility;                                           // 0x05C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TD42[0x8];                                     // 0x05C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortEmoteItemDefinition");
		return ptr;
	}



};

// Class FortniteGame.FortQueryGenerator_Enemies
// 0x0020 (FullSize[0x0054] - InheritedSize[0x0034])
class UFortQueryGenerator_Enemies : public UEnvQueryGenerator
{
public:
	bool                                               bPerceivedEnemiesOnly;                                     // 0x0034(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bSleepCapableAIUsePerceivedEnemiesOnly;                    // 0x0035(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RVOR[0x2];                                     // 0x0036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAIDataProviderFloatValue                   MaxTimeSincePerceived;                                     // 0x0038(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_Enemies");
		return ptr;
	}



};

// Class FortniteGame.FortQueryGenerator_GoalOnCircle
// 0x0004 (FullSize[0x0138] - InheritedSize[0x0134])
class UFortQueryGenerator_GoalOnCircle : public UEnvQueryGenerator_OnCircle
{
public:
	bool                                               bIncludeCenterActorInGeneratedGoals;                       // 0x0134(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZL4C[0x3];                                     // 0x0135(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_GoalOnCircle");
		return ptr;
	}



};

// Class FortniteGame.FortQueryGenerator_PointsInVolume
// 0x0024 (FullSize[0x0058] - InheritedSize[0x0034])
class UFortQueryGenerator_PointsInVolume : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderIntValue                     NumberOfPoints;                                            // 0x0034(0x001C) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortNamedNavmesh>        NavMeshToUse;                                              // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5MVG[0x3];                                     // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      GenerateIn;                                                // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_PointsInVolume");
		return ptr;
	}



};

// Class FortniteGame.FortQueryGenerator_PointsAroundLine
// 0x0070 (FullSize[0x00CC] - InheritedSize[0x005C])
class UFortQueryGenerator_PointsAroundLine : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderBoolValue                    SkipCellsWithCollision;                                    // 0x005C(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      GenerateAround;                                            // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAIDataProviderIntValue                     MaxPointsPerClusterLocation;                               // 0x007C(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   RadiusAroundClusterLocation;                               // 0x0098(0x001C) (Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TAssetPtr<class UFortQueryData_CurvesAroundLine>   CurvesAroundLineAsset;                                     // 0x00B4(0x0018) (Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_PointsAroundLine");
		return ptr;
	}



};

// Class FortniteGame.FortQueryGenerator_PointsFromNavGraph
// 0x005C (FullSize[0x00B8] - InheritedSize[0x005C])
class UFortQueryGenerator_PointsFromNavGraph : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderFloatValue                   MinPathDistance;                                           // 0x005C(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue                   MaxPathDistance;                                           // 0x0078(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderBoolValue                    SkipCellsWithCollision;                                    // 0x0094(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TEnumAsByte<FortniteGame_EFortPointsFromNavGraphGoalPathDistanceFilterOperator> PathDistanceFilterOperator;                                // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_URMW[0x3];                                     // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      GenerateAround;                                            // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_PointsFromNavGraph");
		return ptr;
	}



};

// Class FortniteGame.FortQueryGenerator_PointsOnBuildingGrid
// 0x0040 (FullSize[0x009C] - InheritedSize[0x005C])
class UFortQueryGenerator_PointsOnBuildingGrid : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderIntValue                     HorizontalGridSize;                                        // 0x005C(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderIntValue                     VerticalGridSize;                                          // 0x0078(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                               bStartGridFromBottom;                                      // 0x0094(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUsePointInVerticalCenterOfCell;                           // 0x0095(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RC2A[0x2];                                     // 0x0096(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      GenerateAround;                                            // 0x0098(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_PointsOnBuildingGrid");
		return ptr;
	}



};

// Class FortniteGame.FortQueryGenerator_SpecificAssignmentGoals
// 0x0028 (FullSize[0x005C] - InheritedSize[0x0034])
class UFortQueryGenerator_SpecificAssignmentGoals : public UEnvQueryGenerator
{
public:
	struct FFortAIAssignmentIdentifier                 AssignmentIdentifier;                                      // 0x0034(0x0020) (Edit, Protected, NativeAccessSpecifierProtected)
	class UFortAIAssignmentSettings*                   AssignmentSettings;                                        // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      GoalProvider;                                              // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_SpecificAssignmentGoals");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_GoalDistanceRanges
// 0x0018 (FullSize[0x0134] - InheritedSize[0x011C])
class UFortQueryTest_GoalDistanceRanges : public UFortQueryTest_GoalBase
{
public:
	TEnumAsByte<FortniteGame_EDistanceMode>            DistanceMode;                                              // 0x011C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZPY5[0x3];                                     // 0x011D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DistanceTo;                                                // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EEnvTestDistance>             ScreeningTestMode;                                         // 0x0124(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EEnvTestDistance>             TestMode;                                                  // 0x0125(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4MPS[0x2];                                     // 0x0126(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FGoalDistanceData>                   GoalDistanceDataRanges;                                    // 0x0128(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalDistanceRanges");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_GoalFrustrationDiscouragement
// 0x0000 (FullSize[0x011C] - InheritedSize[0x011C])
class UFortQueryTest_GoalFrustrationDiscouragement : public UFortQueryTest_GoalBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalFrustrationDiscouragement");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_GoalNumberOfAIAssigned
// 0x0004 (FullSize[0x0120] - InheritedSize[0x011C])
class UFortQueryTest_GoalNumberOfAIAssigned : public UFortQueryTest_GoalBase
{
public:
	TEnumAsByte<FortniteGame_ECountAIAssignedToType>   TypeOfMatchToCount;                                        // 0x011C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UEWD[0x3];                                     // 0x011D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalNumberOfAIAssigned");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_GoalOverallDamageCaused
// 0x0000 (FullSize[0x011C] - InheritedSize[0x011C])
class UFortQueryTest_GoalOverallDamageCaused : public UFortQueryTest_GoalBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalOverallDamageCaused");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_PrimaryAssignment
// 0x00CC (FullSize[0x01E8] - InheritedSize[0x011C])
class UFortQueryTest_PrimaryAssignment : public UFortQueryTest_GoalBase
{
public:
	bool                                               bUseItemActorLocation;                                     // 0x011C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J3FA[0x3];                                     // 0x011D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAIDataProviderFloatValue                   DistanceClose;                                             // 0x0120(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   DistanceFar;                                               // 0x013C(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   PercentValueClose;                                         // 0x0158(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   PercentValueRegular;                                       // 0x0174(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   PercentValueFar;                                           // 0x0190(0x001C) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FEnvFloatParam_DEPRECATED                   DistanceVeryClose;                                         // 0x01AC(0x000C) (NativeAccessSpecifierPrivate)
	struct FEnvFloatParam_DEPRECATED                   DistanceVeryFar;                                           // 0x01B8(0x000C) (NativeAccessSpecifierPrivate)
	struct FEnvFloatParam_DEPRECATED                   PercentValueVeryClose;                                     // 0x01C4(0x000C) (NativeAccessSpecifierPrivate)
	struct FEnvFloatParam_DEPRECATED                   PercentValueReasonableDistance;                            // 0x01D0(0x000C) (NativeAccessSpecifierPrivate)
	struct FEnvFloatParam_DEPRECATED                   PercentValueVeryFar;                                       // 0x01DC(0x000C) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_PrimaryAssignment");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_InsideBuilding
// 0x0000 (FullSize[0x010C] - InheritedSize[0x010C])
class UFortQueryTest_InsideBuilding : public UEnvQueryTest
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_InsideBuilding");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_IsCloseToPatrolWard
// 0x0004 (FullSize[0x0110] - InheritedSize[0x010C])
class UFortQueryTest_IsCloseToPatrolWard : public UEnvQueryTest
{
public:
	TEnumAsByte<FortniteGame_EWardAffectType>          WardEffectTypeFilter;                                      // 0x010C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2EWT[0x3];                                     // 0x010D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_IsCloseToPatrolWard");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_IsGoalForAssignment
// 0x0024 (FullSize[0x0130] - InheritedSize[0x010C])
class UFortQueryTest_IsGoalForAssignment : public UEnvQueryTest
{
public:
	bool                                               bRetrieveRootAssignmentFromOwner;                          // 0x010C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UMQV[0x3];                                     // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortAIAssignmentIdentifier                 RootAssignmentID;                                          // 0x0110(0x0020) (Edit, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_IsGoalForAssignment");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_NavGraphDistance
// 0x0004 (FullSize[0x0110] - InheritedSize[0x010C])
class UFortQueryTest_NavGraphDistance : public UEnvQueryTest
{
public:
	class UClass*                                      DistanceTo;                                                // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_NavGraphDistance");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_PerceptionAge
// 0x0008 (FullSize[0x0114] - InheritedSize[0x010C])
class UFortQueryTest_PerceptionAge : public UEnvQueryTest
{
public:
	TEnumAsByte<FortniteGame_ECorePerceptionTypes>     Sense;                                                     // 0x010C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_48OU[0x3];                                     // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      SenseClass;                                                // 0x0110(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_PerceptionAge");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_PerceptionExists
// 0x0008 (FullSize[0x0114] - InheritedSize[0x010C])
class UFortQueryTest_PerceptionExists : public UEnvQueryTest
{
public:
	TEnumAsByte<FortniteGame_ECorePerceptionTypes>     Sense;                                                     // 0x010C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E72G[0x3];                                     // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      SenseClass;                                                // 0x0110(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_PerceptionExists");
		return ptr;
	}



};

// Class FortniteGame.FortQueryTest_Random
// 0x0000 (FullSize[0x010C] - InheritedSize[0x010C])
class UFortQueryTest_Random : public UEnvQueryTest
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_Random");
		return ptr;
	}



};

// Class FortniteGame.FortQuestCategory
// 0x0030 (FullSize[0x004C] - InheritedSize[0x001C])
class UFortQuestCategory : public UObject
{
public:
	struct FText                                       Name;                                                      // 0x001C(0x0018) ELEMENT_SIZE_MISMATCH (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UFortQuestItem*>                      CurrentQuests;                                             // 0x0028(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               bExpanded;                                                 // 0x0034(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WNIB[0x3];                                     // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortCategoryTableRow                       CategoryInfo;                                              // 0x0038(0x0010) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IIM5[0x4];                                     // 0x0048(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQuestCategory");
		return ptr;
	}



	bool HasUnseenQuests();
};

// Class FortniteGame.FortQuestManager
// 0x0094 (FullSize[0x00B0] - InheritedSize[0x001C])
class UFortQuestManager : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnQuestsUpdated;                                           // 0x001C(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQuestRewardClaimed;                                      // 0x0028(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNoQuestRewardsToClaim;                                   // 0x0034(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDailyQuestRerolled;                                      // 0x0040(0x0010) ELEMENT_SIZE_MISMATCH (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UFortQuestItem*>                      CurrentQuests;                                             // 0x004C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FName, class UFortQuestCategory*>      CurrentCategorizedQuestsMap;                               // 0x0058(0x0050) ELEMENT_SIZE_MISMATCH (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortQuestObjectiveCompletion>       PendingChanges;                                            // 0x0094(0x000C) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6AML[0x10];                                    // 0x00A0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortQuestManager");
		return ptr;
	}



	void RerollDailyQuest(class UFortQuestItem* QuestToDiscard);
	void OnDailyQuestRerolled__DelegateSignature(class UFortQuestItem* NewQuest);
	void MarkQuestsSeen();
	void MarkQuestSeen(class UFortQuestItem* Quest);
	bool HasUnseenQuests();
	bool HasCompletedQuest(class UFortQuestItemDefinition* Definition);
	bool HasCompletedObjective(class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle);
	void GrantFirstDailyQuest();
	void GetSourceAndContextTags(struct FGameplayTagContainer* OutSourceTags, struct FGameplayTagContainer* OutContextTags);
	int GetRemainingDailyQuestRerolls();
	class UFortQuestItem* GetQuestWithDefinition(class UFortQuestItemDefinition* Definition);
	void GetCurrentQuestsCategories(TArray<class UFortQuestCategory*>* Categories);
	void ClaimQuestReward(class UFortQuestItem* Quest);
	void ClaimNextCompletedQuestReward();
};

// Class FortniteGame.FortRarityData
// 0x0460 (FullSize[0x047C] - InheritedSize[0x001C])
class UFortRarityData : public UDataAsset
{
public:
	struct FFortRarityItemData                         RarityCollection[0xA];                                     // 0x001C(0x0460) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortRarityData");
		return ptr;
	}



	struct FFortRarityItemData STATIC_BPGetRarityData(TEnumAsByte<FortniteGame_EFortRarity> Rarity);
};

// Class FortniteGame.FortSaveFileBuildingInstructionsHandler
// 0x00A4 (FullSize[0x02E4] - InheritedSize[0x0240])
class AFortSaveFileBuildingInstructionsHandler : public AActor
{
public:
	struct FString                                     SaveFilename;                                              // 0x0240(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LoadedBuildingsScale;                                      // 0x024C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     LoadedBuildingsAdditionalTranslation;                      // 0x0258(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bUseAbsoluteCoordinates : 1;                               // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bTrackDestroyedBuildings : 1;                              // 0x0264(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VSNO[0x3];                                     // 0x0265(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TAssetPtr<class UFortBuildingInstructions>         DefaultBuildingInstructions;                               // 0x0268(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bLoadInvisible : 1;                                        // 0x0280(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      bDespawnOnLoad : 1;                                        // 0x0280(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6ULL[0x63];                                    // 0x0281(0x0063) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortSaveFileBuildingInstructionsHandler");
		return ptr;
	}



	bool SaveBuildings(class AFortPlayerController* FortPC);
	bool ResetBuildings(class AFortPlayerController* FortPC);
	void LoadBuildings(class AFortPlayerController* FortPC);
	TArray<class ABuildingActor*> GetAllSpawnedBuildings();
	bool AreBuildingsLoaded();
};

// Class FortniteGame.FortScriptedAction
// 0x0034 (FullSize[0x0274] - InheritedSize[0x0240])
class AFortScriptedAction : public AActor
{
public:
	TEnumAsByte<FortniteGame_EFortScriptedActionEnvironment> ActionEnvironment;                                         // 0x0240(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7ALA[0x3];                                     // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFortClientEventName                        ClientEventTrigger;                                        // 0x0244(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                ActionPriority;                                            // 0x0254(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortScriptedActionParams                   CachedParams;                                              // 0x0258(0x0018) (Transient, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsActive;                                                 // 0x0270(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J3CY[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortScriptedAction");
		return ptr;
	}



	void GetParams(struct FFortScriptedActionParams* Params);
	void Execute(const struct FFortScriptedActionParams& Params);
	void CompleteAction();
	bool CanExecute(const struct FFortScriptedActionParams& Params);
	void CancelAction();
};

// Class FortniteGame.FortStatEventManager
// 0x0048 (FullSize[0x0064] - InheritedSize[0x001C])
class UFortStatEventManager : public UObject
{
public:
	class AFortPlayerController*                       FPC;                                                       // 0x001C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortStatEvent>                      StatEvents;                                                // 0x0020(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortStatEventSequence>              StatEventSequences;                                        // 0x002C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FName                                       PinnedSchematicNotification;                               // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               PinnedCanCraftStats;                                       // 0x0040(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FName>                               PinnedCanNotCraftStats;                                    // 0x004C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortStatEventSequence>              PinnedSchematicSequences;                                  // 0x0058(0x000C) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortStatEventManager");
		return ptr;
	}



};

// Class FortniteGame.FortStaticMeshActor
// 0x000C (FullSize[0x0254] - InheritedSize[0x0248])
class AFortStaticMeshActor : public AStaticMeshActor
{
public:
	TArray<class UNavRelevantComponent*>               LinkComps;                                                 // 0x0248(0x000C) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortStaticMeshActor");
		return ptr;
	}



};

// Class FortniteGame.FortStaticMeshLinkComponent
// 0x0018 (FullSize[0x00CC] - InheritedSize[0x00B4])
class UFortStaticMeshLinkComponent : public UNavRelevantComponent
{
public:
	unsigned char                                      UnknownData_SNDG[0x18];                                    // 0x00B4(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortStaticMeshLinkComponent");
		return ptr;
	}



};

// Class FortniteGame.FortUIFeedbackBank
// 0x0054 (FullSize[0x0070] - InheritedSize[0x001C])
class UFortUIFeedbackBank : public UDataAsset
{
public:
	unsigned char                                      UnknownData_OH42[0x3C];                                    // 0x001C(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFortUIFeedback>                     FeedbackEvents;                                            // 0x0058(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FFortUIFeedbackBlueprintOnly>        BankDefinedFeedbackEvents;                                 // 0x0064(0x000C) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortUIFeedbackBank");
		return ptr;
	}



};

// Class FortniteGame.FortUIManagerInterface
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UFortUIManagerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortUIManagerInterface");
		return ptr;
	}



	void KillConfirmation();
};

// Class FortniteGame.FortVisibilityComponent
// 0x0014 (FullSize[0x00A0] - InheritedSize[0x008C])
class UFortVisibilityComponent : public UActorComponent
{
public:
	unsigned char                                      bRegisterWithVisibilityManager : 1;                        // 0x008C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bObserver : 1;                                             // 0x008C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WPVB[0x3];                                     // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TEnumAsByte<FortniteGame_EFortVisibilityBehavior>  VisibilityBehavior;                                        // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YWAN[0x3];                                     // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Radius;                                                    // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bCheckFacing : 1;                                          // 0x0098(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bCheckLOS : 1;                                             // 0x0098(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7X0B[0x7];                                     // 0x0099(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortVisibilityComponent");
		return ptr;
	}



};

// Class FortniteGame.FortMiniMapComponent
// 0x0088 (FullSize[0x0128] - InheritedSize[0x00A0])
class UFortMiniMapComponent : public UFortVisibilityComponent
{
public:
	struct FFortMiniMapData                            MiniMapData;                                               // 0x00A0(0x0074) (Edit, BlueprintVisible, BlueprintReadOnly, Net, SaveGame, RepNotify, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFortMiniMapIndicator>        MiniMapIndicator;                                          // 0x0114(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WSMT[0xC];                                     // 0x011C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.FortMiniMapComponent");
		return ptr;
	}



	void SetupMiniMapComponent(class UTexture2D* MiniMapIcon, const struct FLinearColor& IconColor, const struct FLinearColor& PulseColor, float ColorPulsesPerSecond, float SizePulsesPerSecond);
	void SetMiniMapViewableDistance(float ViewDistance);
	void SetMiniMapIndicatorIsVisible(bool bVisible);
	void SetMiniMapIconSizePulsesPerSecond(float SizePulsesPerSecond);
	void SetMiniMapIconPulseColor(const struct FLinearColor& PulseColor);
	void SetMiniMapIconColorPulsesPerSecond(float ColorPulsesPerSecond);
	void SetMiniMapIconColor(const struct FLinearColor& InColor);
	void SetMiniMapIcon(class UTexture2D* MiniMapIcon);
	void OnRep_MiniMapData();
};

// Class FortniteGame.MyTownLibrary
// 0x0000 (FullSize[0x001C] - InheritedSize[0x001C])
class UMyTownLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.MyTownLibrary");
		return ptr;
	}



	void STATIC_SetInputEnabled(class UObject* WorldContextObject, bool bEnable);
	void STATIC_ReinitializeManagerData(class UObject* WorldContextObject);
	void STATIC_RegisterSlotCamera(class UObject* WorldContextObject, int MapSlotId, class UCameraComponent* InCameraComponent);
	bool STATIC_IsShowingFriendsHomeBase(class UObject* WorldContextObject);
	bool STATIC_IsManorAvailable(class UObject* WorldContextObject);
	bool STATIC_IsKeepAvailable(class UObject* WorldContextObject);
	TArray<struct FMyTownRoadData3D> STATIC_GetRoadsInfo(class UObject* WorldContextObject);
	struct FString STATIC_GetMyTownName(class UObject* WorldContextObject);
	class UMyTownData* STATIC_GetMyTownData(class UObject* WorldContextObject);
	TEnumAsByte<FortniteGame_EMyTownBuildingState> STATIC_GetBuildingState(class UObject* WorldContextObject, const struct FString& BuildingTemplateId);
	int STATIC_GetBuildingLevel(class UObject* WorldContextObject, const struct FString& BuildingTemplateId);
	class UMyTownBuildingDefinitionData* STATIC_GetBuildingDefinition(class UObject* WorldContextObject, const struct FString& BuildingTemplateId);
	class AMyTownBuildingActor* STATIC_GetBuildingActor(class UObject* WorldContextObject, const struct FString& BuildingTemplateId);
	int STATIC_GetBannerPattern(class UObject* WorldContextObject);
	struct FLinearColor STATIC_GetBannerColor(class UObject* WorldContextObject);
};

// Class FortniteGame.MyTownPlacementActor
// 0x0004 (FullSize[0x0244] - InheritedSize[0x0240])
class AMyTownPlacementActor : public AActor
{
public:
	class UStaticMeshComponent*                        BuildingMeshComponent;                                     // 0x0240(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.MyTownPlacementActor");
		return ptr;
	}



};

// Class FortniteGame.PartyDisplayManager
// 0x0058 (FullSize[0x0298] - InheritedSize[0x0240])
class APartyDisplayManager : public AActor
{
public:
	TArray<class AActor*>                              PlacementActors;                                           // 0x0240(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                      VaultPlacementActor;                                       // 0x024C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5L1C[0x48];                                    // 0x0250(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.PartyDisplayManager");
		return ptr;
	}



};

// Class FortniteGame.VelocityGridData
// 0x0054 (FullSize[0x0070] - InheritedSize[0x001C])
class UVelocityGridData : public UObject
{
public:
	class UFortSpline*                                 Spline;                                                    // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                             Points;                                                    // 0x0020(0x000C) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FInterpCurveFloat                           PointEnvelopeCurve;                                        // 0x002C(0x0014) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FInterpCurveFloat                           PointStrengthCurve;                                        // 0x0040(0x0014) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FInterpCurveFloat                           MiscCurve;                                                 // 0x0054(0x0014) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              MiscFloat;                                                 // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawDebugSpline;                                          // 0x006C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bDebugBool;                                                // 0x006D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5AHB[0x2];                                     // 0x006E(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.VelocityGridData");
		return ptr;
	}



	void RebuildData();
	void AddPoint(const struct FVector& SplinePoint, float PointEnvelope, float PointStrength);
};

// Class FortniteGame.WaterVolume_Deep
// 0x000C (FullSize[0x0284] - InheritedSize[0x0278])
class AWaterVolume_Deep : public APhysicsVolume
{
public:
	class USoundBase*                                  EntrySound;                                                // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  ExitSound;                                                 // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DamagePerSec;                                              // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.WaterVolume_Deep");
		return ptr;
	}



};

// Class FortniteGame.WaterVolume_Shallow
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class AWaterVolume_Shallow : public APhysicsVolume
{
public:
	class USoundBase*                                  EntrySound;                                                // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  ExitSound;                                                 // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.WaterVolume_Shallow");
		return ptr;
	}



};

// Class FortniteGame.WorldMapPinManager
// 0x0014 (FullSize[0x0254] - InheritedSize[0x0240])
class AWorldMapPinManager : public AActor
{
public:
	unsigned char                                      UnknownData_454C[0x4];                                     // 0x0240(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AFortStaticMeshActor*                        WorldMapMesh;                                              // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AWorldMapPin*>                        CurrentPins;                                               // 0x0248(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.WorldMapPinManager");
		return ptr;
	}



	class AWorldMapPin* CreateWorldMapPin(int TheaterIndex);
};

// Class FortniteGame.WorldTheme
// 0x014C (FullSize[0x0168] - InheritedSize[0x001C])
class UWorldTheme : public UDataAsset
{
public:
	TArray<struct FTileGroupSelection>                 TileGroups;                                                // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWorldTileGroup*                             FillerTileGroup;                                           // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxCircuitSize;                                            // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TAssetPtr<class UWorld>                            BorderWorld_I;                                             // 0x0030(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_IO;                                            // 0x0048(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_O;                                             // 0x0060(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_OO;                                            // 0x0078(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_OOO;                                           // 0x0090(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_OOOO;                                          // 0x00A8(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_S;                                             // 0x00C0(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_SS;                                            // 0x00D8(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_OS;                                            // 0x00F0(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_SO;                                            // 0x0108(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_SOO;                                           // 0x0120(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_U;                                             // 0x0138(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            BorderWorld_R;                                             // 0x0150(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.WorldTheme");
		return ptr;
	}



};

// Class FortniteGame.WorldTileGroup
// 0x00A0 (FullSize[0x00BC] - InheritedSize[0x001C])
class UWorldTileGroup : public UDataAsset
{
public:
	struct FString                                     TileID;                                                    // 0x001C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bOnlyPlaceDiagonalWithAdjacent : 1;                        // 0x0028(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RQVC[0x3];                                     // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTileGroupMapInfo>                   FlatMapInfos;                                              // 0x002C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTileGroupMapInfo>                   InnerMapInfos;                                             // 0x0038(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTileGroupMapInfo>                   OuterMapInfos;                                             // 0x0044(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTileGroupMapInfo>                   StraightMapInfos;                                          // 0x0050(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TAssetPtr<class UWorld>                            Sim_FlatWorld;                                             // 0x005C(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            Sim_InnerWorld;                                            // 0x0074(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            Sim_OuterWorld;                                            // 0x008C(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TAssetPtr<class UWorld>                            Sim_StraightWorld;                                         // 0x00A4(0x0018) (Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class FortniteGame.WorldTileGroup");
		return ptr;
	}



};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
